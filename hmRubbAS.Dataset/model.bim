{
  "compatibilityLevel": 1567,
  "model": {
    "annotations": [
      {
        "name": "__PBI_TimeIntelligenceEnabled",
        "value": "0"
      },
      {
        "name": "PBIDesktopVersion",
        "value": "2.119.986.0 (23.07)"
      },
      {
        "name": "PBI_QueryOrder",
        "value": "[\"companyId\",\"SisteAar\",\"AntallAar\",\"Kontoplan\",\"KR_Resultat\",\"KR_Balanse\",\"Kalender\",\"Prosjekt\",\"Faktorer\",\"Datasett\",\"Ordreinngang\",\"Regnskap\",\"Budsjett\",\"IB\",\"NyeKontoer\",\"ProPrognose\",\"HpPrognose\",\"Sample File Parameter1\",\"Transform Sample File from ProPrognose\",\"Sample File\",\"Transform File from ProPrognose\",\"OrdreKPI\",\"ProsjektKPI\",\"ProsjektStatus\",\"ProsjektMeasures\",\"WorkInProgress\",\"ExcelMeasures\",\"Tertial\",\"SP_ProNummerEndring\",\"Sample File Parameter2\",\"Transform Sample File from ProNummerEndring\",\"Sample File (2)\",\"Transform File from ProNummerEndring\",\"Eyeshare\",\"Leverandører\",\"Kunder\",\"Betalinger\",\"SQLserver1\",\"SQLdatabase1\",\"SharePointSite1\",\"Selskap\",\"GetLastDateGL\",\"LastDateGL\",\"ForecastFromForecast\",\"SQL_Company\",\"SQL_Forecast\",\"SQL_Suppliers\",\"SQL_Projects\",\"SQL_Customers\",\"SQL_ChartOfAccounts\",\"SQL_ReportingCOA\",\"SQL_CustomersAccounts\",\"SQL_GeneralLedger\",\"SQL_EyeShare\",\"SQL_Budget\",\"DatesFromForecast\",\"DatesFromProjects\",\"ProjectForecast\",\"ProjectRevenueForecast\",\"ProjectCostForecast\",\"fn_cumulative_revenue\",\"fn_cumulative_cost\",\"HpPrognoseOld\",\"Tmp_ProsjektPowerApps\",\"ProsjektLederFilter\",\"IN_ProjectForecast\",\"SQL_ProjectMgrs\",\"Prosjektledere\",\"LiveProjectForecast\",\"Tekstkoder\",\"KalendarDynamisk\",\"KalenderORG\",\"KundePoster\",\"KundePosterDoble\",\"KundeMotposter\",\"BilagProsjektLink\"]"
      },
      {
        "name": "__TEdtr",
        "value": "1"
      },
      {
        "name": "PBI_ProTooling",
        "value": "[\"DevMode\"]"
      }
    ],
    "culture": "nb-NO",
    "cultures": [
      {
        "name": "nb-NO",
        "linguisticMetadata": {
          "content": {
            "DynamicImprovement": "HighConfidence",
            "Entities": {
              "betalinger.bilagsnummer": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Betalinger",
                    "ConceptualProperty": "BilagsNummer"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Fakturanummer": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "betalinger.utgfakturanok": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Betalinger",
                    "ConceptualProperty": "UtgFakturaNOK"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Fakturabeløp (eks mva)": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "hpprognose.dgproggraf": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "HpPrognose",
                    "ConceptualProperty": "DGprogGraf"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "DG (%)": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "hpprognose.inntproggraf": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "HpPrognose",
                    "ConceptualProperty": "InntProgGraf"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Inntekt": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "hpprognose.kostproggraf": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "HpPrognose",
                    "ConceptualProperty": "KostProgGraf"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Kostnad": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "kontoplan.kontobeskrivelse": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Kontoplan",
                    "ConceptualProperty": "KontoBeskrivelse"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Konto": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "kundeposter.bilagsdato": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "KundePoster",
                    "ConceptualProperty": "BilagsDato"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Dato": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "kundeposter.bilagsnummer": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "KundePoster",
                    "ConceptualProperty": "BilagsNummer"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Fakturanummer": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  },
                  {
                    "Bilag": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "kunder.kunde": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Kunder",
                    "ConceptualProperty": "Kunde"
                  }
                },
                "State": "Generated"
              },
              "leverandører.leverandorbeskrivelse": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Leverandører",
                    "ConceptualProperty": "LeverandorBeskrivelse"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Leverandør": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "liveprojectforecast.costadj": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "LiveProjectForecast",
                    "ConceptualProperty": "CostAdj"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Justering": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "liveprojectforecast.livestage": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "LiveProjectForecast",
                    "ConceptualProperty": "LiveStage"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Status": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjekt.dp_beskrivelse": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Prosjekt",
                    "ConceptualProperty": "DP Beskrivelse"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "\"": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  },
                  {
                    "Delprosjekter": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  },
                  {
                    "Prosjekt": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjekt.selger": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "Prosjekt",
                    "ConceptualProperty": "Selger"
                  }
                },
                "State": "Generated"
              },
              "prosjektkpi.blank": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektKPI",
                    "ConceptualProperty": "Blank"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "~": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektkpi.db_budsjett": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektKPI",
                    "ConceptualProperty": "DB budsjett"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "DB kalkyle": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektkpi.dg_budsjett": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektKPI",
                    "ConceptualProperty": "DG budsjett"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "DG kalkyle": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektkpi.fakturabelop": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektKPI",
                    "ConceptualProperty": "Fakturabelop"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Fakturert": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektkpi.inntektsbudsjett": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektKPI",
                    "ConceptualProperty": "Inntektsbudsjett"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Inntektskalkyle": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektkpi.kostnadsbudsjett": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektKPI",
                    "ConceptualProperty": "Kostnadsbudsjett"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Kalkyle": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  },
                  {
                    "Salgskalkyle": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  },
                  {
                    "Kostnadskalkyle": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektkpi.kostnadsprognose": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektKPI",
                    "ConceptualProperty": "Kostnadsprognose"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Prognose": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektkpi.prodgindikator": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektKPI",
                    "ConceptualProperty": "ProDGIndikator"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektkpi.progvsbud": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektKPI",
                    "ConceptualProperty": "ProgVsBud"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Avvik": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektkpi.proinntektindikator": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektKPI",
                    "ConceptualProperty": "ProInntektIndikator"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektkpi.påløpt": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektKPI",
                    "ConceptualProperty": "Påløpt"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Forbruk": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektkpi.rest": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektKPI",
                    "ConceptualProperty": "Rest"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Gjennstående": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektmeasures.bidragall": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektMeasures",
                    "ConceptualProperty": "BidragALL"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Bidrag": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektmeasures.dgall": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektMeasures",
                    "ConceptualProperty": "dgAll"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "DG%": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektmeasures.fakturabeløp": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektMeasures",
                    "ConceptualProperty": "Fakturabeløp"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Beløp": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektmeasures.inntektall": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektMeasures",
                    "ConceptualProperty": "InntektALL"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Inntekt": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektmeasures.kostakk": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektMeasures",
                    "ConceptualProperty": "KostAkk"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Bokført": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektmeasures.kostall": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektMeasures",
                    "ConceptualProperty": "KostALL"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "Kostnad": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektmeasures.viaakkumulert": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektMeasures",
                    "ConceptualProperty": "VIAakkumulert"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "VIA": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              },
              "prosjektmeasures.viaendringmnd": {
                "Definition": {
                  "Binding": {
                    "ConceptualEntity": "ProsjektMeasures",
                    "ConceptualProperty": "VIAendringMnd"
                  }
                },
                "State": "Generated",
                "Terms": [
                  {
                    "VIA endring": {
                      "Source": {
                        "Agent": "PowerBI.VisualColumnRename",
                        "Type": "External"
                      },
                      "State": "Suggested",
                      "Weight": 0.9
                    }
                  }
                ]
              }
            },
            "Language": "en-US",
            "Version": "2.0.0"
          },
          "contentType": "json"
        }
      }
    ],
    "dataAccessOptions": {
      "legacyRedirects": true,
      "returnErrorValuesAsNull": true
    },
    "defaultMode": "directQuery",
    "defaultPowerBIDataSourceVersion": "powerBI_V3",
    "discourageImplicitMeasures": true,
    "expressions": [
      {
        "name": "companyId",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigasjon"
          },
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ],
        "expression": "\"Rubb AS\" meta [IsParameterQuery=true, List={\"Hallmaker AS\", \"Byggservice AS\", \"Linto AS\", \"Rubb AS\", \"Utleie AS\"}, DefaultValue=..., Type=\"Text\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "51b9acd6-24d1-4882-94bf-c0c6d9fa4a68",
        "queryGroup": "Parametere"
      },
      {
        "name": "SisteAar",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Number"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "expression": "2023 meta [IsParameterQuery=true, Type=\"Number\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "dce394b5-507e-4cbf-bbe3-ebf3d14fd48b",
        "queryGroup": "Parametere"
      },
      {
        "name": "AntallAar",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Number"
          }
        ],
        "expression": "4 meta [IsParameterQuery=true, Type=\"Number\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "7a1139ff-8ee5-4768-b875-83d0ef1721a5",
        "queryGroup": "Parametere"
      },
      {
        "name": "Sample File Parameter1",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Sample File\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Sample File\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "fd63eb6f-0e55-4696-a42a-4cc7fcd9e7ff",
        "queryGroup": "Transform File from ProPrognose\\Sample Query"
      },
      {
        "name": "Transform Sample File from ProPrognose",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Excel.Workbook(#\"Sample File Parameter1\", null, true),",
          "    #\"Expanded Data\" = Table.ExpandTableColumn(Source, \"Data\", {\"Column1\", \"Column2\", \"Column3\", \"Column4\", \"Column5\", \"Column6\"}, {\"Column1\", \"Column2\", \"Column3\", \"Column4\", \"Column5\", \"Column6\"}),",
          "    #\"Removed Columns\" = Table.RemoveColumns(#\"Expanded Data\",{\"Item\", \"Kind\", \"Hidden\"}),",
          "    #\"Added Custom\" = Table.AddColumn(#\"Removed Columns\", \"Custom\", each if [Column1] = \"ProsjektId\" then \"Version\" else [Name]),",
          "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Added Custom\",{\"Name\"}),",
          "    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Columns1\", [PromoteAllScalars=true]),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Promoted Headers\", each ([ProsjektId] <> null and [ProsjektId] <> \"ProsjektId\")),",
          "    #\"Added Custom1\" = Table.AddColumn(#\"Filtered Rows\", \"Date\", each if Text.Contains([Version], \"_\") then Text.AfterDelimiter([Version], \"_\") else [Version]),",
          "    #\"Added Custom2\" = Table.AddColumn(#\"Added Custom1\", \"Custom\", each if Text.Contains([Version], \"_\") then Text.BeforeDelimiter([Version], \"_\") else null),",
          "    #\"Removed Columns2\" = Table.RemoveColumns(#\"Added Custom2\",{\"Beskrivelse\", \"Version\"}),",
          "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns2\",{{\"Custom\", \"Version\"}}),",
          "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns\",null,0,Replacer.ReplaceValue,{\"Inntekter\", \"Kostnader\"}),",
          "    #\"Multiplied Column\" = Table.TransformColumns(#\"Replaced Value\", {{\"Inntekter\", each _ * -1, type number}})",
          "in",
          "    #\"Multiplied Column\""
        ],
        "kind": "m",
        "lineageTag": "f04b36eb-688f-48ec-95af-f35f26290b92",
        "queryGroup": "Transform File from ProPrognose"
      },
      {
        "name": "Sample File",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": [
          "let",
          "    Source = SharePoint.Files(\"https://hallmakergruppenas.sharepoint.com/finance/\", [ApiVersion = 15]),",
          "    #\"Filtered Rows\" = Table.SelectRows(Source, each Text.Contains([Folder Path], companyId)),",
          "    Navigation1 = #\"Filtered Rows\"{0}[Content]",
          "in",
          "    Navigation1"
        ],
        "kind": "m",
        "lineageTag": "1cd1f7ae-bda9-414b-a853-a01175b63793",
        "queryGroup": "Transform File from ProPrognose\\Sample Query"
      },
      {
        "name": "Transform File from ProPrognose",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let",
          "    Source = (#\"Sample File Parameter1\" as binary) => let",
          "    Source = Excel.Workbook(#\"Sample File Parameter1\", null, true),",
          "    #\"Expanded Data\" = Table.ExpandTableColumn(Source, \"Data\", {\"Column1\", \"Column2\", \"Column3\", \"Column4\", \"Column5\", \"Column6\"}, {\"Column1\", \"Column2\", \"Column3\", \"Column4\", \"Column5\", \"Column6\"}),",
          "    #\"Removed Columns\" = Table.RemoveColumns(#\"Expanded Data\",{\"Item\", \"Kind\", \"Hidden\"}),",
          "    #\"Added Custom\" = Table.AddColumn(#\"Removed Columns\", \"Custom\", each if [Column1] = \"ProsjektId\" then \"Version\" else [Name]),",
          "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Added Custom\",{\"Name\"}),",
          "    #\"Promoted Headers\" = Table.PromoteHeaders(#\"Removed Columns1\", [PromoteAllScalars=true]),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Promoted Headers\", each ([ProsjektId] <> null and [ProsjektId] <> \"ProsjektId\")),",
          "    #\"Added Custom1\" = Table.AddColumn(#\"Filtered Rows\", \"Date\", each if Text.Contains([Version], \"_\") then Text.AfterDelimiter([Version], \"_\") else [Version]),",
          "    #\"Added Custom2\" = Table.AddColumn(#\"Added Custom1\", \"Custom\", each if Text.Contains([Version], \"_\") then Text.BeforeDelimiter([Version], \"_\") else null),",
          "    #\"Removed Columns2\" = Table.RemoveColumns(#\"Added Custom2\",{\"Beskrivelse\", \"Version\"}),",
          "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns2\",{{\"Custom\", \"Version\"}}),",
          "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns\",null,0,Replacer.ReplaceValue,{\"Inntekter\", \"Kostnader\"}),",
          "    #\"Multiplied Column\" = Table.TransformColumns(#\"Replaced Value\", {{\"Inntekter\", each _ * -1, type number}})",
          "in",
          "    #\"Multiplied Column\"",
          "in",
          "    Source"
        ],
        "kind": "m",
        "lineageTag": "a12bbf48-0618-4e82-a447-8433c26dcb70",
        "mAttributes": "[ FunctionQueryBinding = \"{\"\"exemplarFormulaName\"\":\"\"Transform Sample File from ProPrognose\"\"}\" ]",
        "queryGroup": "Transform File from ProPrognose"
      },
      {
        "name": "Tertial",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Kalender,",
          "    #\"Grouped Rows\" = Table.Group(Source, {\"YY-Tx\"}, {{\"MaxDate\", each List.Max([Dato]), type datetime}}),",
          "    #\"Sorted Rows\" = Table.Sort(#\"Grouped Rows\",{{\"YY-Tx\", Order.Ascending}}),",
          "    #\"Added Index\" = Table.AddIndexColumn(#\"Sorted Rows\", \"Index\", 1, 1),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Added Index\",{{\"YY-Tx\", type text}, {\"MaxDate\", type date}, {\"Index\", Int64.Type}})",
          "in",
          "    #\"Changed Type\""
        ],
        "kind": "m",
        "lineageTag": "eaa9108b-4ccc-4f5f-b0e1-8e167e9f4b40"
      },
      {
        "name": "SP_ProNummerEndring",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "",
          "//SharePoint",
          "",
          "    SharePointFiles = SharePoint.Files(SharePointSite1, [ApiVersion = 15]),",
          "",
          "//Procedure",
          "    #\"Filtered Rows\" = Table.SelectRows(SharePointFiles, each ([Folder Path] = SharePointSite1 & \"/Shared Documents/EndringProsjektPoster/\")),",
          "    #\"Filtered Hidden Files1\" = Table.SelectRows(#\"Filtered Rows\", each [Attributes]?[Hidden]? <> true),",
          "    #\"Invoke Custom Function2\" = Table.AddColumn(#\"Filtered Hidden Files1\", \"Transform File from ProNummerEndring\", each #\"Transform File from ProNummerEndring\"([Content])),",
          "    #\"Renamed Columns3\" = Table.RenameColumns(#\"Invoke Custom Function2\", {\"Name\", \"Source.Name\"}),",
          "    #\"Removed Other Columns2\" = Table.SelectColumns(#\"Renamed Columns3\", {\"Source.Name\", \"Transform File from ProNummerEndring\"}),",
          "    #\"Expanded Table Column2\" = Table.ExpandTableColumn(#\"Removed Other Columns2\", \"Transform File from ProNummerEndring\", Table.ColumnNames(#\"Transform File from ProNummerEndring\"(#\"Sample File (2)\"))),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Table Column2\",{{\"Source.Name\", type text}, {\"GLEntryNo\", type text}, {\"VendorId\", Int64.Type}, {\"ProjectId\", type text}}),",
          "    #\"Renamed Columns\" = Table.RenameColumns(#\"Changed Type\",{{\"Source.Name\", \"CompanyId\"}}),",
          "    #\"Extracted Text Before Delimiter\" = Table.TransformColumns(#\"Renamed Columns\", {{\"CompanyId\", each Text.BeforeDelimiter(_, \".\"), type text}})",
          "in",
          "    #\"Extracted Text Before Delimiter\""
        ],
        "kind": "m",
        "lineageTag": "52cc36a3-5e40-4913-ad92-984802ff0b2a",
        "queryGroup": "DataSources"
      },
      {
        "name": "Sample File Parameter2",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": "#\"Sample File (2)\" meta [IsParameterQuery=true, BinaryIdentifier=#\"Sample File (2)\", Type=\"Binary\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "11e3b850-355d-4b49-a33e-247938be6666",
        "queryGroup": "Transform File from ProNummerEndring\\Sample Query"
      },
      {
        "name": "Transform Sample File from ProNummerEndring",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Excel.Workbook(#\"Sample File Parameter2\", null, true),",
          "    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Kind] = \"Table\")),",
          "    #\"Expanded Data\" = Table.ExpandTableColumn(#\"Filtered Rows\", \"Data\", {\"GLEntryNo\", \"VendorId\", \"ProjectId\"}, {\"GLEntryNo\", \"VendorId\", \"ProjectId\"}),",
          "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Expanded Data\",{\"GLEntryNo\", \"VendorId\", \"ProjectId\"})",
          "in",
          "    #\"Removed Other Columns\""
        ],
        "kind": "m",
        "lineageTag": "5343a83f-52e2-4a64-8639-94e58abc1e67",
        "queryGroup": "Transform File from ProNummerEndring"
      },
      {
        "name": "Sample File (2)",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Binary"
          }
        ],
        "expression": [
          "let",
          "    Source = SharePoint.Files(SharePointSite1, [ApiVersion = 15]),",
          "    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Folder Path] = SharePointSite1 & \"/Shared Documents/EndringProsjektPoster/\")),",
          "    Navigation1 = #\"Filtered Rows\"{0}[Content]",
          "in",
          "    Navigation1"
        ],
        "kind": "m",
        "lineageTag": "0682ac01-dc77-4833-a81e-8150887b8975",
        "queryGroup": "Transform File from ProNummerEndring\\Sample Query"
      },
      {
        "name": "Transform File from ProNummerEndring",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let",
          "    Source = (#\"Sample File Parameter2\" as binary) => let",
          "    Source = Excel.Workbook(#\"Sample File Parameter2\", null, true),",
          "    #\"Filtered Rows\" = Table.SelectRows(Source, each ([Kind] = \"Table\")),",
          "    #\"Expanded Data\" = Table.ExpandTableColumn(#\"Filtered Rows\", \"Data\", {\"GLEntryNo\", \"VendorId\", \"ProjectId\"}, {\"GLEntryNo\", \"VendorId\", \"ProjectId\"}),",
          "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Expanded Data\",{\"GLEntryNo\", \"VendorId\", \"ProjectId\"})",
          "in",
          "    #\"Removed Other Columns\"",
          "in",
          "    Source"
        ],
        "kind": "m",
        "lineageTag": "140bc254-d2b4-4e13-9c9b-4285c7272f41",
        "mAttributes": "[ FunctionQueryBinding = \"{\"\"exemplarFormulaName\"\":\"\"Transform Sample File from ProNummerEndring\"\"}\" ]",
        "queryGroup": "Transform File from ProNummerEndring"
      },
      {
        "name": "Eyeshare",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "",
          "    sqlTbl1 = SQL_EyeShare,",
          "",
          "//Procedure",
          "    #\"Changed Type\" = Table.TransformColumnTypes(sqlTbl1,{{\"FirmaId\", Int64.Type}}),",
          "    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type\",{\"FirmaId\"},SQL_Company,{\"InfoEasyId\"},\"Companies\",JoinKind.Inner),",
          "    #\"Expanded Companies\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Companies\", {\"CompanyId\"}, {\"CompanyId\"}),",
          "    #\"Added Custom\" = Table.AddColumn(#\"Expanded Companies\", \"ProsjektLnk\", each if Text.Length([ProsjektId]) = 0 then null else Text.From([CompanyId])&\"-\"&Text.From([ProsjektId]),type text),",
          "    #\"Added Custom1\" = Table.AddColumn(#\"Added Custom\", \"KontoLnk\", each if Text.Length([KontoId]) = 0 then null else Text.From([CompanyId])&\"-\"&Text.From([KontoId]),type text),",
          "    #\"Added Custom2\" = Table.AddColumn(#\"Added Custom1\", \"LevLnk\", each if Text.Length([LevId]) = 0 then null else Text.From([CompanyId])&\"-\"&Text.From([LevId]),type text),",
          "    #\"Removed Columns\" = Table.RemoveColumns(#\"Added Custom2\",{\"FirmaId\", \"LevId\", \"KontoId\", \"ProsjektId\"}),",
          "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"EstNetAmount\", \"Belop2\"}, {\"EyeShare\", \"Eyeshare\"}, {\"CompanyId\", \"SelskapsId\"}}),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Renamed Columns\", each ([ProsjektLnk] <> null))",
          "in",
          "    #\"Filtered Rows\""
        ],
        "kind": "m",
        "lineageTag": "f3d35c48-b19e-44b9-ad4d-682143975f22",
        "queryGroup": "Hjelpetabeller"
      },
      {
        "name": "SQLserver1",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ],
        "expression": "\"a2insight.database.windows.net\" meta [IsParameterQuery=true, List={\"a2insight.database.windows.net\"}, DefaultValue=\"a2insight.database.windows.net\", Type=\"Text\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "6325de2b-214e-41ac-bbb8-47a1f3d5963e",
        "queryGroup": "Parametere"
      },
      {
        "name": "SQLdatabase1",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ],
        "expression": "\"a2dmHallmaker\" meta [IsParameterQuery=true, List={\"a2dmHallmaker\"}, DefaultValue=\"a2dmHallmaker\", Type=\"Text\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "93388af6-2d37-47b3-b6f4-ebd703b4f70f",
        "queryGroup": "Parametere"
      },
      {
        "name": "SharePointSite1",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ],
        "expression": "\"https://hallmakergruppenas.sharepoint.com/sites/archive-2020-05-23T114054Z/finance\" meta [IsParameterQuery=true, List={\"https://hallmakergruppenas.sharepoint.com/finance/\", \"https://hallmakergruppenas.sharepoint.com/sites/archive-2020-05-23T114054Z/finance\"}, DefaultValue=\"https://hallmakergruppenas.sharepoint.com/sites/archive-2020-05-23T114054Z/finance\", Type=\"Any\", IsParameterQueryRequired=true]",
        "kind": "m",
        "lineageTag": "d07bf7e6-49d3-4005-990e-a03b62abe2b3",
        "queryGroup": "Parametere"
      },
      {
        "name": "GetLastDateGL",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let  ",
          "  ",
          "SQLSource = (companyId as text) =>  ",
          "  ",
          "let  ",
          "  ",
          "//Source = Sql.Database(SQLserver1, SQLdatabase1, [Query=\"EXEC uspTest '\"& Text.Upper(companyId)&\"' #(lf)#(lf)#(lf)\"])  ",
          "Source = Sql.Database(SQLserver1, SQLdatabase1, [Query=\"EXEC uspTest '\"& Text.Upper(companyId)&\"'\"])  ",
          "  ",
          "in  ",
          "  ",
          "Source  ",
          "  ",
          "in  ",
          "  ",
          "SQLSource"
        ],
        "kind": "m",
        "lineageTag": "af62a4f2-8c9e-410c-ad2f-a0f79dad442c",
        "queryGroup": "Parametere"
      },
      {
        "name": "LastDateGL",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = GetLastDateGL(companyId),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Date\", type date}})",
          "in",
          "    #\"Changed Type\""
        ],
        "kind": "m",
        "lineageTag": "5871a80c-9e3d-4eb6-901e-752622ce41a7",
        "queryGroup": "Hjelpetabeller"
      },
      {
        "name": "ForecastFromForecast",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = SQL_Forecast,",
          "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Date\", type date}}),",
          "    #\"Inserted Start of Month\" = Table.AddColumn(#\"Changed Type\", \"Dato\", each Date.StartOfMonth([Date]), type date),",
          "    #\"Grouped Rows\" = Table.Group(#\"Inserted Start of Month\", {\"Hovedarbeidsprosjekt\", \"Dato\"}, {{\"Inntekter\", each List.Sum([Inntekter]), type number}, {\"Kostnader\", each List.Sum([Kostnader]), type number}}),",
          "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Grouped Rows\",{{\"Hovedarbeidsprosjekt\", type text}, {\"Dato\", type date}, {\"Inntekter\", type number}, {\"Kostnader\", type number}}),",
          "    #\"Sorted Rows1\" = Table.Sort(#\"Changed Type1\",{{\"Hovedarbeidsprosjekt\", Order.Ascending}, {\"Dato\", Order.Ascending}}),",
          "    #\"Added Index2\" = Table.AddIndexColumn(#\"Sorted Rows1\", \"Index\", 0, 1)",
          "in",
          "    #\"Added Index2\""
        ],
        "kind": "m",
        "lineageTag": "8470b767-0ebb-4be0-8636-e66a011624af",
        "queryGroup": "Hjelpetabeller"
      },
      {
        "name": "SQL_Company",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "",
          "    table1 = \"Companies\",",
          "    sqlDatabase = Sql.Database(SQLserver1, SQLdatabase1),",
          "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data],",
          "    #\"Filtered Rows\" = Table.SelectRows(sqlTbl1, each [Company] = companyId)",
          "",
          "",
          "in",
          "    #\"Filtered Rows\""
        ],
        "kind": "m",
        "lineageTag": "ecfab917-e518-4b2d-9c78-04b4b0494203",
        "queryGroup": "DataSources"
      },
      {
        "name": "SQL_Forecast",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "   ",
          "    table1 = \"FA_ProjectForecastChanges\",",
          "    table2 = \"LU_Projects\",",
          "",
          "    sqlDatabase = Sql.Database(\"a2insight.database.windows.net\", \"a2dmHallmaker\"),",
          "",
          "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data],",
          "    sqlTbl2 = sqlDatabase{[Schema=\"dbo\",Item=(table2)]}[Data],",
          "    #\"Merged Queries\" = Table.NestedJoin(sqlTbl1,{\"ProjectId\"},sqlTbl2,{\"ProjectId\"},\"sqlTbl2\",JoinKind.LeftOuter),",
          "    #\"Expanded sqlTbl2\" = Table.ExpandTableColumn(#\"Merged Queries\", \"sqlTbl2\", {\"ParentProjectNo\", \"CompanyId\", \"ProjectRef\"}, {\"ParentProjectNo\", \"CompanyId\", \"ProjectRef\"}),",
          "    #\"Merged Queries1\" = Table.NestedJoin(#\"Expanded sqlTbl2\",{\"CompanyId\"},SQL_Company,{\"CompanyId\"},\"SQL_Company\",JoinKind.LeftOuter),",
          "    #\"Expanded SQL_Company\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"SQL_Company\", {\"Company\"}, {\"Company\"}),",
          "    #\"Removed Columns\" = Table.RemoveColumns(#\"Expanded SQL_Company\",{\"ProjectId\", \"Comments\", \"UpdatedBy\", \"UpdatedDate\", \"LineKey\", \"CompanyId\"}),",
          "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"ParentProjectNo\", \"Hovedarbeidsprosjekt\"}, {\"ProjectRef\", \"ProsjektId\"}, {\"Cost\", \"Kostnader\"}, {\"Revenue\", \"Inntekter\"}, {\"DateId\", \"Date\"}}),",
          "    #\"Added Custom\" = Table.AddColumn(#\"Renamed Columns\", \"Version\", each null),",
          "    #\"Added Custom1\" = Table.AddColumn(#\"Added Custom\", \"PlanStart\", each null),",
          "    #\"Added Custom2\" = Table.AddColumn(#\"Added Custom1\", \"PlanSlutt\", each null),",
          "    #\"Sorted Rows\" = Table.Sort(#\"Added Custom2\",{{\"Date\", Order.Ascending}})",
          "in",
          "    #\"Sorted Rows\""
        ],
        "kind": "m",
        "lineageTag": "df33a7cf-ee46-42d0-b736-bf5842527851",
        "queryGroup": "DataSources"
      },
      {
        "name": "SQL_Suppliers",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "",
          "    table1 = \"Leverandorer\",",
          "    sqlDatabase = Sql.Database(SQLserver1, SQLdatabase1),",
          "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data]",
          "",
          "",
          "in",
          "    sqlTbl1"
        ],
        "kind": "m",
        "lineageTag": "10e9249d-492b-4431-bfbf-1084f37efe73",
        "queryGroup": "DataSources"
      },
      {
        "name": "SQL_Projects",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "",
          "    table1 = \"Prosjekter\",",
          "    table2 = \"LU_Projects\",",
          "    table3 = \"LU_ProjectMgrs\",",
          "    ",
          "    sqlDatabase = Sql.Database(SQLserver1, SQLdatabase1),",
          "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data],",
          "    sqlTbl2 = sqlDatabase{[Schema=\"dbo\",Item=(table2)]}[Data],",
          "    sqlTbl3 = sqlDatabase{[Schema=\"dbo\",Item=(table3)]}[Data],",
          "    #\"Added Custom\" = Table.AddColumn(sqlTbl1, \"Custom\", each if [HovedArbeidProsjektNr] <> null then [HovedArbeidProsjektNr] else Text.BeforeDelimiter([ProsjektId], \"-\"), type text),",
          "    #\"Filtered Rows1\" = Table.SelectRows(#\"Added Custom\", each [Status] <> 9 ),",
          "    #\"Removed Columns\" = Table.RemoveColumns(#\"Filtered Rows1\",{\"HovedArbeidProsjektNr\"}),",
          "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"Custom\", \"HovedArbeidProsjektNr\"}, {\"Frifelt3\", \"DG\"}, {\"KontraktSum\", \"OrdreVerdi\"}, {\"Frifelt4\", \"OrdreDato\"}, {\"FriTekst1\", \"Adresse\"}}),",
          "    ExtractFromFrifelt = Table.TransformColumns(#\"Renamed Columns\", {{\"Adresse\", each Text.AfterDelimiter(_, \" \"), type text}, {\"DG\", each Text.AfterDelimiter(_, \" \"), type text}, {\"OrdreDato\", each Text.AfterDelimiter(_, \" \"), type text}}),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(ExtractFromFrifelt,{{\"HovedArbeidProsjektNr\", type text}, {\"OrdreVerdi\", type number}, {\"DG\", Percentage.Type}, {\"OrdreDato\", type date}, {\"Adresse\", type text}}),",
          "    #\"Replaced Errors\" = Table.ReplaceErrorValues(#\"Changed Type\", {{\"DG\", null},{\"OrdreDato\", null}}),",
          "    #\"Merged Queries\" = Table.NestedJoin(#\"Replaced Errors\",{\"FirmaId\"},SQL_Company,{\"InfoEasyId\"},\"SQL_Company\",JoinKind.Inner),",
          "    #\"Expanded SQL_Company\" = Table.ExpandTableColumn(#\"Merged Queries\", \"SQL_Company\", {\"CompanyId\"}, {\"CompanyId\"}),",
          "    #\"Merged Queries1\" = Table.NestedJoin(#\"Expanded SQL_Company\",{\"ProsjektId\",\"CompanyId\"},sqlTbl2,{\"ProjectRef\",\"CompanyId\"},\"Removed Columns1\",JoinKind.LeftOuter),",
          "    #\"Expanded Removed Columns1\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"Removed Columns1\", {\"ParentProjectNo\", \"ProjectId\", \"ProjectManagerId\", \"Status\"}, {\"ParentProjectNo\", \"ProjectId\", \"ProjectManagerId\", \"Status.1\"}),",
          "    #\"Changed Type2\" = Table.TransformColumnTypes(#\"Expanded Removed Columns1\",{{\"ProjectManagerId\", Int64.Type}}),",
          "    #\"Merged Queries2\" = Table.NestedJoin(#\"Changed Type2\",{\"ProjectManagerId\"},sqlTbl3,{\"ProjectMgrId\"},\"Expanded Removed Columns1\",JoinKind.LeftOuter),",
          "    #\"Expanded Expanded Removed Columns1\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"Expanded Removed Columns1\", {\"NickName\", \"email\"}, {\"NickName\", \"email\"}),",
          "    #\"Removed Columns2\" = Table.RemoveColumns(#\"Expanded Expanded Removed Columns1\",{\"Status\", \"HovedArbeidProsjektNr\", \"CompanyId\", \"ProjectManagerId\", \"Prosjektleder\"}),",
          "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Removed Columns2\",{{\"Status.1\", \"Status\"}, {\"ParentProjectNo\", \"HovedArbeidProsjektNr\"}}),",
          "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Renamed Columns1\",{\"ProsjektlederId\"}),",
          "    #\"Renamed Columns2\" = Table.RenameColumns(#\"Removed Columns1\",{{\"email\", \"ProsjektlederId\"}, {\"NickName\", \"Prosjektleder\"}}),",
          "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"Renamed Columns2\",{{\"ProsjektlederId\", type text}})",
          "in",
          "    #\"Changed Type1\""
        ],
        "kind": "m",
        "lineageTag": "0bd0ddb2-839b-4a7e-9012-a2deda0d0f3a",
        "queryGroup": "DataSources"
      },
      {
        "name": "SQL_Customers",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "",
          "    table1 = \"Kunder\",",
          "    sqlDatabase = Sql.Database(SQLserver1, SQLdatabase1),",
          "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data],",
          "    #\"Merged Queries\" = Table.NestedJoin(sqlTbl1, {\"FirmaId\"}, SQL_Company, {\"InfoEasyId\"}, \"SQL_Company\", JoinKind.LeftOuter),",
          "    #\"Expanded SQL_Company\" = Table.ExpandTableColumn(#\"Merged Queries\", \"SQL_Company\", {\"InfoEasyId\"}, {\"InfoEasyId\"}),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded SQL_Company\", each [InfoEasyId] <> null),",
          "    #\"Removed Columns\" = Table.RemoveColumns(#\"Filtered Rows\",{\"InfoEasyId\"})",
          "in",
          "    #\"Removed Columns\""
        ],
        "kind": "m",
        "lineageTag": "b41f8870-b977-405b-8b2f-406d0de84026",
        "queryGroup": "DataSources"
      },
      {
        "name": "SQL_ChartOfAccounts",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "",
          "    table1 = \"Kontoplan\",",
          "    sqlDatabase = Sql.Database(SQLserver1, SQLdatabase1),",
          "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data]",
          "",
          "",
          "in",
          "    sqlTbl1"
        ],
        "kind": "m",
        "lineageTag": "2ba1ee1e-bdfa-426d-b464-02bb9b737e47",
        "queryGroup": "DataSources"
      },
      {
        "name": "SQL_ReportingCOA",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "",
          "    table1 = \"KontoplanGrupper\",",
          "    sqlDatabase = Sql.Database(SQLserver1, SQLdatabase1),",
          "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data]",
          "",
          "",
          "in",
          "    sqlTbl1"
        ],
        "kind": "m",
        "lineageTag": "15a94daf-7aff-486d-80a5-b512730e3820",
        "queryGroup": "DataSources"
      },
      {
        "name": "SQL_CustomersAccounts",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "",
          "    table1 = \"KundeReskontro\",",
          "    sqlDatabase = Sql.Database(SQLserver1, SQLdatabase1),",
          "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data]",
          "",
          "",
          "in",
          "    sqlTbl1"
        ],
        "kind": "m",
        "lineageTag": "5c09f505-2714-44ca-a7e6-5f4c30bd070f",
        "queryGroup": "DataSources"
      },
      {
        "name": "SQL_GeneralLedger",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "",
          "    table1 = \"Hovedbok\",",
          "    sqlDatabase = Sql.Database(SQLserver1, SQLdatabase1),",
          "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data]",
          "",
          "",
          "in",
          "    sqlTbl1"
        ],
        "kind": "m",
        "lineageTag": "e82474f7-cb01-43f0-a9fb-3cebfeb62704",
        "queryGroup": "DataSources"
      },
      {
        "name": "SQL_EyeShare",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "",
          "    table1 = \"EyeShare\",",
          "    sqlDatabase = Sql.Database(SQLserver1, SQLdatabase1),",
          "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data],",
          "    #\"Changed Type\" = Table.TransformColumnTypes(sqlTbl1,{{\"FirmaId\", Int64.Type}}),",
          "    #\"Grouped Rows\" = Table.Group(#\"Changed Type\", {\"FirmaId\", \"LevId\", \"FakturaId\", \"FakturaDato\", \"KontoId\", \"ProsjektId\", \"EyeShare\"}, {{\"EstNetAmount\", each List.Sum([EstNetAmount]), type number}})",
          "",
          "",
          "in",
          "    #\"Grouped Rows\""
        ],
        "kind": "m",
        "lineageTag": "161b0dcd-31da-4fbb-9a20-af9cd2058d48",
        "queryGroup": "DataSources"
      },
      {
        "name": "SQL_Budget",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigasjon"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "   ",
          "table1 = \"Budget\",",
          "",
          "    sqlDatabase = Sql.Database(\"a2insight.database.windows.net\", \"a2dmHallmaker\"),",
          "",
          "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data]",
          "in",
          "    sqlTbl1"
        ],
        "kind": "m",
        "lineageTag": "9ca608be-f1d2-41c6-ae29-266c33b797b4",
        "queryGroup": "DataSources"
      },
      {
        "name": "DatesFromForecast",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = SQL_Forecast,",
          "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"ProsjektId\", type text}, {\"Inntekter\", type number}, {\"Kostnader\", type number}, {\"PlanStart\", type date}, {\"PlanSlutt\", type date}, {\"Date\", type date}}),",
          "    #\"Grouped Rows\" = Table.Group(#\"Changed Type\", {\"Hovedarbeidsprosjekt\"}, {{\"Start\", each List.Min([PlanStart]), type date}, {\"Slutt\", each List.Max([PlanSlutt]), type date}, {\"Dato\", each List.Min([Date]), type date}})",
          "in",
          "    #\"Grouped Rows\""
        ],
        "kind": "m",
        "lineageTag": "200bab5e-d02b-4ef8-944c-05a3a0772510",
        "queryGroup": "Hjelpetabeller"
      },
      {
        "name": "DatesFromProjects",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Prosjekt,",
          "    AddHPFilter = Table.AddColumn(Source, \"Custom\", each if [ProsjektNummer] = [HovedArbeidProsjektNr] then 1 else 0),",
          "    FilterHovedProsjekt = Table.SelectRows(AddHPFilter, each ([Custom] = 1)),",
          "    #\"Grouped Rows\" = Table.Group(FilterHovedProsjekt, {\"HovedArbeidProsjektNr\"}, {{\"Start\", each List.Min([StartDato]), type date}, {\"Slutt\", each List.Max([PlanFerdigDato]), type date}})",
          "in",
          "    #\"Grouped Rows\""
        ],
        "kind": "m",
        "lineageTag": "2cfbae9b-0414-4a72-8a2e-eb79406650de",
        "queryGroup": "Hjelpetabeller"
      },
      {
        "name": "ProjectRevenueForecast",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          }
        ],
        "expression": [
          "let",
          "    Source = ForecastFromForecast,",
          "    #\"Removed Columns\" = Table.RemoveColumns(Source,{\"Index\"}),",
          "",
          "    Calc_Running_Total = Table.Group(",
          "                                      #\"Removed Columns\",                                                                           // table as table",
          "                                     {\"Hovedarbeidsprosjekt\"},                                                                       // key as any",
          "                                                                                                                       // aggregatedColumns as list ",
          "                                        {{\"Data\",                                                                           // name of new column to be created",
          "                                    // Function Call",
          "                                        (Input as table) as table =>                                                        // data for function",
          "                                        let",
          "                                        Call_Function = fn_cumulative_revenue(Input),",
          "                                    // End of Function Call",
          "",
          "                                        result = Table.FromColumns(                                                         // putting all together",
          "                                                                    Table.ToColumns(Input)&{Call_Function},",
          "                                                                        Value.Type(",
          "                                                                                   Table.AddColumn(",
          "                                                                                                    Input, \"Saldo\", each null, type number",
          "                                                                                                   )",
          "                                                                                )",
          "                                                                       )",
          "                                        in",
          "                                            result,",
          "",
          "",
          "                                    type table}}                                                                    // transform into table",
          "                                    ),",
          "    #\"Expanded Data\" = Table.ExpandTableColumn(Calc_Running_Total, \"Data\", {\"Dato\", \"Inntekter\", \"Saldo\"}, {\"Date\", \"Revenue\", \"RevenueAcc\"}),",
          "    ",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Data\",{{\"Hovedarbeidsprosjekt\", type text}, {\"Date\", type date}, {\"Revenue\", Int64.Type}, {\"RevenueAcc\", Int64.Type}})",
          "in",
          "    #\"Changed Type\""
        ],
        "kind": "m",
        "lineageTag": "225f1eb3-ca46-4781-bde5-ed4212b2fadb",
        "queryGroup": "WorkInProgress"
      },
      {
        "name": "ProjectCostForecast",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = ForecastFromForecast,",
          "    #\"Removed Columns\" = Table.RemoveColumns(Source,{\"Index\"}),",
          "",
          "    Calc_Running_Total = Table.Group(",
          "                                      #\"Removed Columns\",                                                                           // table as table",
          "                                     {\"Hovedarbeidsprosjekt\"},                                                                       // key as any",
          "                                                                                                                       // aggregatedColumns as list ",
          "                                        {{\"Data\",                                                                           // name of new column to be created",
          "                                    // Function Call",
          "                                        (Input as table) as table =>                                                        // data for function",
          "                                        let",
          "                                        Call_Function = fn_cumulative_cost(Input),",
          "                                    // End of Function Call",
          "",
          "                                        result = Table.FromColumns(                                                         // putting all together",
          "                                                                    Table.ToColumns(Input)&{Call_Function},",
          "                                                                        Value.Type(",
          "                                                                                   Table.AddColumn(",
          "                                                                                                    Input, \"Saldo\", each null, type number",
          "                                                                                                   )",
          "                                                                                )",
          "                                                                       )",
          "                                        in",
          "                                            result,",
          "",
          "",
          "                                    type table}}                                                                    // transform into table",
          "                                    ),",
          "    #\"Expanded Data\" = Table.ExpandTableColumn(Calc_Running_Total, \"Data\", {\"Dato\", \"Kostnader\", \"Saldo\"}, {\"Date\", \"Cost\", \"CostAcc\"}),",
          "    ",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded Data\",{{\"Hovedarbeidsprosjekt\", type text}, {\"Date\", type date}, {\"Cost\", Int64.Type}, {\"CostAcc\", Int64.Type}})",
          "in",
          "    #\"Changed Type\""
        ],
        "kind": "m",
        "lineageTag": "4d84594b-3800-4804-953f-e12773e1a7e0",
        "queryGroup": "WorkInProgress"
      },
      {
        "name": "fn_cumulative_revenue",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let ",
          "",
          "Source = (Input as table) =>",
          "",
          "let",
          "",
          "    Sorting = Table.Sort(Input,{{\"Dato\", Order.Ascending}}),",
          "    added_Index = Table.AddIndexColumn(Sorting, \"Index\", 1, 1),",
          "    cumulativ_total = Table.AddColumn(added_Index, \"Revenue\", each List.Sum(List.Range(added_Index[Inntekter],0,[Index]))),",
          "",
          "",
          "    extract_total = cumulativ_total[Revenue]",
          "    ",
          "    ",
          "in",
          "    extract_total",
          "    ",
          "in",
          "",
          "    Source"
        ],
        "kind": "m",
        "lineageTag": "f45fa4b5-4fc2-49d4-8fbc-340adc61a4ec",
        "queryGroup": "WorkInProgress"
      },
      {
        "name": "fn_cumulative_cost",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Function"
          }
        ],
        "expression": [
          "let ",
          "",
          "Source = (Input as table) =>",
          "",
          "let",
          "",
          "    Sorting = Table.Sort(Input,{{\"Dato\", Order.Ascending}}),",
          "    added_Index = Table.AddIndexColumn(Sorting, \"Index\", 1, 1),",
          "    cumulativ_total = Table.AddColumn(added_Index, \"Cost\", each List.Sum(List.Range(added_Index[Kostnader],0,[Index]))),",
          "",
          "",
          "    extract_total = cumulativ_total[Cost]",
          "    ",
          "    ",
          "in",
          "    extract_total",
          "    ",
          "in",
          "",
          "    Source"
        ],
        "kind": "m",
        "lineageTag": "1488f2b2-0b74-4674-a16b-72a8064184bb",
        "queryGroup": "WorkInProgress"
      },
      {
        "name": "HpPrognoseOld",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Table.NestedJoin(DatesFromProjects,{\"HovedArbeidProsjektNr\"},DatesFromForecast,{\"Hovedarbeidsprosjekt\"},\"DatesFromForecast\",JoinKind.RightOuter),",
          "    #\"Expanded DatesFromForecast\" = Table.ExpandTableColumn(Source, \"DatesFromForecast\", {\"Start\", \"Slutt\", \"Dato\"}, {\"Start.1\", \"Slutt.1\", \"Date\"}),",
          "    #\"Added Custom2\" = Table.AddColumn(#\"Expanded DatesFromForecast\", \"CStart\", each ",
          "\tif [Start] = null ",
          "\tthen ",
          "\t\tif [Start.1] = null ",
          "\t\tthen Date.StartOfMonth(DateTime.Date(DateTime.LocalNow()))",
          "\t\telse [Start.1]",
          "\telse [Start], type date),",
          "    #\"Added Custom3\" = Table.AddColumn(#\"Added Custom2\", \"CSlutt\", each ",
          "",
          "\tif Number.From(",
          "\t\tif [Slutt.1] = null ",
          "\t\tthen ",
          "\t\t\tif [Slutt] = null ",
          "\t\t\tthen DateTime.Date(DateTime.LocalNow())",
          "\t\t\telse [Slutt]",
          "\t\telse [Slutt.1]",
          "\t\t)\t< Number.From(DateTime.Date(DateTime.LocalNow())) ",
          "\tthen Date.EndOfMonth(DateTime.Date(DateTime.LocalNow()))",
          "\telse ",
          "\t\tif [Slutt.1] = null ",
          "\t\tthen ",
          "\t\t\tif [Slutt] = null ",
          "\t\t\tthen Date.EndOfMonth(DateTime.Date(DateTime.LocalNow()))",
          "\t\t\telse [Slutt]",
          "\t\telse [Slutt.1], type date),",
          "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Added Custom3\",{\"Start\", \"Slutt\", \"Start.1\", \"Slutt.1\"}),",
          "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Removed Columns1\",{{\"CStart\", \"Start\"}, {\"CSlutt\", \"Slutt\"}}),",
          "    #\"Added Custom\" = Table.AddColumn(#\"Renamed Columns1\", \"ListOfDates\", each List.Transform({Number.From([Date])..Number.From([Slutt])},each Date.From(_))),",
          "    #\"Expanded ListOfDates\" = Table.ExpandListColumn(#\"Added Custom\", \"ListOfDates\"),",
          "    #\"Inserted Start of Month\" = Table.AddColumn(#\"Expanded ListOfDates\", \"Dato\", each Date.StartOfMonth([ListOfDates]), type date),",
          "    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Start of Month\",{\"ListOfDates\", \"Date\"}),",
          "    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Columns\", {\"HovedArbeidProsjektNr\", \"Start\", \"Slutt\", \"Dato\"}),",
          "    #\"Added Custom1\" = Table.AddColumn(#\"Removed Duplicates\", \"Varighet\", each Number.From([Slutt])-Number.From([Start])+1),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Added Custom1\",{{\"HovedArbeidProsjektNr\", type text}, {\"Varighet\", Int64.Type}}),",
          "    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type\",{\"HovedArbeidProsjektNr\", \"Dato\"},ForecastFromForecast,{\"Hovedarbeidsprosjekt\", \"Dato\"},\"ForecastFromForecast\",JoinKind.LeftOuter),",
          "    #\"Expanded ForecastFromForecast\" = Table.ExpandTableColumn(#\"Merged Queries\", \"ForecastFromForecast\", {\"Inntekter\", \"Kostnader\"}, {\"Inntekter\", \"Kostnader\"}),",
          "    #\"Sorted Rows\" = Table.Sort(#\"Expanded ForecastFromForecast\",{{\"HovedArbeidProsjektNr\", Order.Ascending}, {\"Dato\", Order.Ascending}}),",
          "    #\"Filled Down\" = Table.FillDown(#\"Sorted Rows\",{\"Inntekter\", \"Kostnader\"}),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Filled Down\", each ([HovedArbeidProsjektNr] <> null))",
          "in",
          "    #\"Filtered Rows\""
        ],
        "kind": "m",
        "lineageTag": "9a84523b-f3a4-466e-8cfa-1c6f0fa27aa9",
        "queryGroup": "Fakta"
      },
      {
        "name": "SQL_ProjectMgrs",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "",
          "    table1 = \"LU_ProjectMgrs\",",
          "    sqlDatabase = Sql.Database(SQLserver1, SQLdatabase1),",
          "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data]",
          "",
          "",
          "in",
          "    sqlTbl1"
        ],
        "kind": "m",
        "lineageTag": "581fc899-234b-4e05-b0aa-49e345d9a64d",
        "queryGroup": "DataSources"
      },
      {
        "name": "Prosjektledere",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Table.NestedJoin(SQL_ProjectMgrs,{\"CompanyId\"},SQL_Company,{\"CompanyId\"},\"SQL_Company\",JoinKind.Inner),",
          "    #\"Removed Columns\" = Table.RemoveColumns(Source,{\"SQL_Company\"})",
          "in",
          "    #\"Removed Columns\""
        ],
        "kind": "m",
        "lineageTag": "14e83083-4f88-4f62-8e1a-aa77bcdf4913",
        "queryGroup": "Dimensjoner"
      },
      {
        "name": "Tekstkoder",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = Betalinger,",
          "    #\"Grouped Rows\" = Table.Group(Source, {\"TekstKode\", \"Tekst\"}, {{\"Count\", each Table.RowCount(_), type number}})",
          "in",
          "    #\"Grouped Rows\""
        ],
        "kind": "m",
        "lineageTag": "d1d93d25-bfb6-4248-bcbd-fb570059a63c"
      },
      {
        "name": "KalendarDynamisk",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "    Source = (SisteAar),",
          "    #\"Converted to Table\" = #table(1, {{Source}}),",
          "    #\"Added Custom\" = Table.AddColumn(#\"Converted to Table\", \"Dato\", each List.Dates(#date(SisteAar-AntallAar + 1, 1, 1),366*AntallAar,#duration(1,0,0,0))),",
          "    #\"Expanded Dato\" = Table.ExpandListColumn(#\"Added Custom\", \"Dato\"),",
          "    #\"Removed Columns\" = Table.RemoveColumns(#\"Expanded Dato\",{\"Column1\"}),",
          "    Dato = Table.TransformColumnTypes(#\"Removed Columns\",{{\"Dato\", type date}}),",
          "    År = Table.AddColumn(Dato, \"År\", each Date.Year([Dato]), Int64.Type),",
          "    #\"Filtered Rows\" = Table.SelectRows(År, each [År] <= SisteAar),",
          "    MndNo = Table.AddColumn(#\"Filtered Rows\", \"MndNo\", each Date.Month([Dato]), Int64.Type),",
          "    Mnd = Table.AddColumn(MndNo, \"Mnd\", each Date.MonthName([Dato]), type text),",
          "    #\"Capitalized Each Word\" = Table.TransformColumns(Mnd,{{\"Mnd\", Text.Proper, type text}}),",
          "    KortMnd = Table.AddColumn(#\"Capitalized Each Word\", \"KortMnd\", each Text.Start([Mnd], 3), type text),",
          "    Kvartal = Table.AddColumn(KortMnd, \"Kvartal\", each \"Q\"&Text.From(Number.RoundUp( [MndNo] / 3 ) ), type text ),",
          "    Tertial = Table.AddColumn(Kvartal, \"Tertial\", each \"T\"&Text.From(Number.RoundUp( [MndNo] / 4 ) ), type text ),",
          "    TxYY = Table.AddColumn(Tertial, \"TxYY\", each [Tertial]&\"-\"&Text.End(Text.From([År]),2), type text),",
          "    YYYYMM = Table.AddColumn(TxYY, \"Custom\", each [År]*100 + [MndNo], Int64.Type)",
          "in",
          "    YYYYMM"
        ],
        "kind": "m",
        "lineageTag": "20cd0cc8-54f5-4b3f-9260-50710a8d04c5",
        "queryGroup": "Dimensjoner"
      },
      {
        "name": "KalenderORG",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigasjon"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "expression": [
          "let",
          "   ",
          "table1 = \"Calendar\",",
          "",
          "    sqlDatabase = Sql.Database(\"a2insight.database.windows.net\", \"a2dmHallmaker\"),",
          "",
          "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data],",
          "    removeEnglishTxt = Table.RemoveColumns(sqlTbl1,{\"Month\", \"ShortMth\"}),",
          "    columns2Norwegian = Table.RenameColumns(removeEnglishTxt,{{\"Date\", \"Dato\"}, {\"Quarter\", \"Kvartal\"}, {\"Year\", \"År\"}, {\"MonthNo\", \"MndNo\"}}),",
          "    #\"Added Custom\" = Table.AddColumn(columns2Norwegian, \"YY-Tx\", each Text.End(Text.From([År]),2)&\"0\"&Text.End([Tertial],1)),",
          "    #\"Added Custom1\" = Table.AddColumn(#\"Added Custom\", \"YYYYMM\", each [År]*100+[MndNo]),",
          "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Added Custom1\",{{\"YY-Tx\", Int64.Type}}),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Changed Type\", each [År] >= SisteAar - AntallAar and [År] <= SisteAar)",
          "in",
          "    #\"Filtered Rows\""
        ],
        "kind": "m",
        "lineageTag": "1905fc77-d967-4712-b0bb-0a883e6f74a5",
        "queryGroup": "Dimensjoner"
      },
      {
        "name": "KundePosterDoble",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "expression": [
          "let",
          "    Source = Sql.Database(SQLserver1, SQLdatabase1),",
          "    dbo_KundeReskontro = Source{[Schema=\"dbo\",Item=\"PostMotPostLogg\"]}[Data],",
          "    #\"Merged Queries\" = Table.NestedJoin(dbo_KundeReskontro, {\"F_FIRMA\", \"ReskontroNummer\"}, SQL_Customers, {\"FirmaId\", \"KundeId\"}, \"SQL_Company\", JoinKind.LeftOuter),",
          "    #\"Expanded SQL_Company\" = Table.ExpandTableColumn(#\"Merged Queries\", \"SQL_Company\", {\"KundeId\"}, {\"KundeId\"}),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded SQL_Company\", each [KundeId] <> null),",
          "    Poster = Table.SelectRows(#\"Filtered Rows\", each ([DatoSisteAvreg] = null) and ([Belop] <> 0)),",
          "    #\"Kept Duplicates\" = let columnNames = {\"BilagsNummer\"}, addCount = Table.Group(Poster, columnNames, {{\"Count\", Table.RowCount, type number}}), selectDuplicates = Table.SelectRows(addCount, each [Count] > 1), removeCount = Table.RemoveColumns(selectDuplicates, \"Count\") in Table.Join(Poster, columnNames, removeCount, columnNames, JoinKind.Inner),",
          "    #\"Sorted Rows\" = Table.Sort(#\"Kept Duplicates\",{{\"FaktBelopOrginal\", Order.Ascending}}),",
          "    #\"Removed Duplicates\" = Table.Distinct(#\"Sorted Rows\", {\"BilagsNummer\"})",
          "in",
          "    #\"Removed Duplicates\""
        ],
        "kind": "m",
        "lineageTag": "552a4b21-b042-4c75-8a27-cfc1dd394cb2"
      },
      {
        "name": "KundeMotposter",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "expression": [
          "let",
          "    Source = Sql.Database(SQLserver1 , SQLdatabase1),",
          "    dbo_KundeReskontro = Source{[Schema=\"dbo\",Item=\"PostMotPostLogg\"]}[Data],",
          "    #\"Merged Queries1\" = Table.NestedJoin(dbo_KundeReskontro, {\"F_FIRMA\", \"ReskontroNummer\"}, SQL_Customers, {\"FirmaId\", \"KundeId\"}, \"SQL_Customers\", JoinKind.LeftOuter),",
          "    #\"Expanded SQL_Customers\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"SQL_Customers\", {\"KundeId\"}, {\"KundeId\"}),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded SQL_Customers\", each [KundeId] <> null),",
          "    Poster = Table.SelectRows(#\"Filtered Rows\", each ([DatoSisteAvreg] <> null)),",
          "    #\"Appended Query\" = Table.Combine({Poster, #\"KundePosterDoble\"}),",
          "    #\"Merged Queries\" = Table.NestedJoin(#\"Appended Query\", {\"BilagsNummer\"}, BilagProsjektLink, {\"BilagsNummer\"}, \"BilagProsjektLink\", JoinKind.LeftOuter),",
          "    #\"Expanded BilagProsjektLink\" = Table.ExpandTableColumn(#\"Merged Queries\", \"BilagProsjektLink\", {\"ProsjektId\"}, {\"ProsjektId\"})",
          "in",
          "    #\"Expanded BilagProsjektLink\""
        ],
        "kind": "m",
        "lineageTag": "67562a11-430b-4e0d-812c-fca3937c46be"
      },
      {
        "name": "BilagProsjektLink",
        "annotations": [
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "expression": [
          "let",
          "    Source = Sql.Database(SQLserver1, SQLdatabase1),",
          "    dbo_KundeReskontro = Source{[Schema=\"dbo\",Item=\"Hovedbok\"]}[Data],",
          "    #\"Merged Queries\" = Table.NestedJoin(dbo_KundeReskontro, {\"FirmaId\"}, SQL_Company, {\"InfoEasyId\"}, \"SQL_Company\", JoinKind.LeftOuter),",
          "    #\"Expanded SQL_Company\" = Table.ExpandTableColumn(#\"Merged Queries\", \"SQL_Company\", {\"InfoEasyId\"}, {\"InfoEasyId\"}),",
          "    #\"Filtered Rows1\" = Table.SelectRows(#\"Expanded SQL_Company\", each [InfoEasyId] <> null),",
          "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Filtered Rows1\",{\"BilagsNummer\", \"ProsjektId\"}),",
          "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Other Columns\", each ([ProsjektId] <> null)),",
          "    #\"Removed Duplicates\" = Table.Distinct(#\"Filtered Rows\", {\"BilagsNummer\"})",
          "in",
          "    #\"Removed Duplicates\""
        ],
        "kind": "m",
        "lineageTag": "8b1d82c0-97e7-4edb-ace9-c045cf063a55"
      }
    ],
    "queryGroups": [
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Parametere"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "3"
          }
        ],
        "folder": "Dimensjoner"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "4"
          }
        ],
        "folder": "Fakta"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "5"
          }
        ],
        "folder": "Hjelpetabeller"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "6"
          }
        ],
        "folder": "Transform File from ProPrognose"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transform File from ProPrognose\\Sample Query"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "7"
          }
        ],
        "folder": "Transform File from ProNummerEndring"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "0"
          }
        ],
        "folder": "Transform File from ProNummerEndring\\Sample Query"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "2"
          }
        ],
        "folder": "DataSources"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "8"
          }
        ],
        "folder": "WorkInProgress"
      },
      {
        "annotations": [
          {
            "name": "PBI_QueryGroupOrder",
            "value": "1"
          }
        ],
        "folder": "DirectQ"
      }
    ],
    "relationships": [
      {
        "name": "1f8c2216-f91d-443f-8ed2-988aa2bda8ea",
        "fromColumn": "Aar",
        "fromTable": "Regnskap",
        "toColumn": "Aar",
        "toTable": "IB"
      },
      {
        "name": "458b7c9f-7eab-44b8-bb1d-64b1d278b7c0",
        "fromColumn": "Sett",
        "fromTable": "Budsjett",
        "toColumn": "Sett",
        "toTable": "Datasett"
      },
      {
        "name": "c41dc91d-7573-4f3d-9d01-cca3acfdbb91",
        "fromColumn": "SettId",
        "fromTable": "Regnskap",
        "toColumn": "SettId",
        "toTable": "Datasett"
      },
      {
        "name": "6e233d46-a370-4ff3-b5a3-de28d0653569",
        "fromColumn": "Nivå1",
        "fromTable": "Kontoplan",
        "toColumn": "Nivå1",
        "toTable": "KR_Resultat"
      },
      {
        "name": "4a3aa091-22aa-4b93-bc39-d9f384dbe607",
        "fromColumn": "Nivå2",
        "fromTable": "Kontoplan",
        "toColumn": "Nivå2",
        "toTable": "KR_Balanse"
      },
      {
        "name": "33bc96d4-9087-48a5-ba4a-aba8389916e7",
        "fromColumn": "KontoLnk",
        "fromTable": "Regnskap",
        "toColumn": "KontoLnk",
        "toTable": "Kontoplan"
      },
      {
        "name": "06cca1e3-5732-4826-afcf-d7cfbe81c155",
        "fromColumn": "LevLnk",
        "fromTable": "Regnskap",
        "toColumn": "LevLnk",
        "toTable": "Leverandører"
      },
      {
        "name": "1a1e1325-94ec-420a-90d8-cbf6d97bfbdc",
        "fromColumn": "KundeLnk",
        "fromTable": "Regnskap",
        "toColumn": "KundeLnk",
        "toTable": "Kunder"
      },
      {
        "name": "cf88f3bb-7cf6-4117-ac33-24a80db934c5",
        "fromColumn": "SelskapsId",
        "fromTable": "Regnskap",
        "toColumn": "SelskapsId",
        "toTable": "Selskap"
      },
      {
        "name": "135ff491-336a-4630-bdfb-1e80c7535b49",
        "fromColumn": "KontoLnk",
        "fromTable": "Regnskap",
        "toColumn": "KontoLnk1",
        "toTable": "NyeKontoer"
      },
      {
        "name": "0a7d0ff8-0d9d-4674-bfee-a9587ace4ec0",
        "fromColumn": "ProsjektLnk",
        "fromTable": "Regnskap",
        "toColumn": "ProsjektLnk",
        "toTable": "Prosjekt"
      },
      {
        "name": "bf8f00ac-1972-4a32-b4be-fd75e7a8f350",
        "fromColumn": "CompanyId",
        "fromTable": "Budsjett",
        "toColumn": "SelskapsId",
        "toTable": "Selskap"
      },
      {
        "name": "055b25c5-563e-4013-a3ce-fa1b040c9426",
        "fromColumn": "KontoLnk",
        "fromTable": "Budsjett",
        "toColumn": "KontoLnk",
        "toTable": "Kontoplan"
      },
      {
        "name": "65ff4602-d9e9-4444-a77b-1660e7125c8f",
        "fromColumn": "ProsjektLnk",
        "fromTable": "ProPrognose",
        "toColumn": "ProsjektLnk",
        "toTable": "Prosjekt"
      },
      {
        "name": "018c755c-e073-4957-8cba-6bee08196b69",
        "fromColumn": "HovedArbeidProsjektNr",
        "fromTable": "HpPrognose",
        "toColumn": "ProsjektNummer",
        "toTable": "Prosjekt"
      },
      {
        "name": "ecc2ca41-80f2-44f4-b813-62c8442280a2",
        "fromColumn": "CompanyId",
        "fromTable": "ProPrognose",
        "toColumn": "SelskapsId",
        "toTable": "Selskap"
      },
      {
        "name": "dc5066cf-9a2e-459d-ac9f-3569b9fe7352",
        "fromColumn": "ProsjektLnk",
        "fromTable": "Ordreinngang",
        "toColumn": "ProsjektLnk",
        "toTable": "Prosjekt"
      },
      {
        "name": "8b3e94f5-a87c-492a-9bcf-0e11e427f98c",
        "fromColumn": "CompanyId",
        "fromTable": "Ordreinngang",
        "toColumn": "SelskapsId",
        "toTable": "Selskap"
      },
      {
        "name": "4b772d21-0d72-4995-9444-9665c80fcc01",
        "crossFilteringBehavior": "bothDirections",
        "fromColumn": "HovedArbeidProsjektNr",
        "fromTable": "Prosjekt",
        "toColumn": "HovedArbeidProsjektNr",
        "toTable": "Tmp_ProsjektPowerApps"
      },
      {
        "name": "67ae8980-2a83-429f-acdd-52f39c928c3d",
        "fromColumn": "ProjectId",
        "fromTable": "IN_ProjectForecast",
        "toColumn": "ProjectId",
        "toTable": "Prosjekt"
      },
      {
        "name": "b7839e8d-11fb-4ebc-8629-bee0c847cef2",
        "fromColumn": "KundeLnk",
        "fromTable": "Betalinger",
        "toColumn": "KundeLnk",
        "toTable": "Kunder"
      },
      {
        "name": "9fb40977-56e2-4c29-8715-e7d9e143cdce",
        "fromColumn": "ProsjektLnk",
        "fromTable": "Betalinger",
        "toColumn": "ProsjektLnk",
        "toTable": "Prosjekt"
      },
      {
        "name": "31ee8c6f-3625-450e-9fd1-55db40c2905b",
        "crossFilteringBehavior": "bothDirections",
        "fromCardinality": "one",
        "fromColumn": "ProjectId",
        "fromTable": "Prosjekt",
        "toColumn": "ProjectId",
        "toTable": "LiveProjectForecast"
      },
      {
        "name": "1b4240b0-2294-41fc-bbeb-3a2b8d82016c",
        "fromColumn": "Dato",
        "fromTable": "Budsjett",
        "toColumn": "Dato",
        "toTable": "Kalender"
      },
      {
        "name": "2232d6d7-a604-4701-b72e-f1c9468206b1",
        "fromColumn": "Dato",
        "fromTable": "Regnskap",
        "toColumn": "Dato",
        "toTable": "Kalender"
      },
      {
        "name": "7791cd06-5883-47df-bb57-1392995a9258",
        "fromColumn": "FakturaDato",
        "fromTable": "Regnskap",
        "isActive": false,
        "toColumn": "Dato",
        "toTable": "Kalender"
      },
      {
        "name": "6130962b-de71-411b-a108-60904679ce18",
        "fromColumn": "Dato",
        "fromTable": "Betalinger",
        "toColumn": "Dato",
        "toTable": "Kalender"
      },
      {
        "name": "33ac99a4-799b-4356-a146-9ce31e947afa",
        "fromColumn": "Date",
        "fromTable": "ProPrognose",
        "toColumn": "Dato",
        "toTable": "Kalender"
      },
      {
        "name": "1667e667-0b05-4be3-a846-c790489c23fc",
        "fromColumn": "Dato",
        "fromTable": "HpPrognose",
        "toColumn": "Dato",
        "toTable": "Kalender"
      },
      {
        "name": "a6055a18-5999-4b82-b844-86afbda9222a",
        "fromColumn": "Date",
        "fromTable": "Ordreinngang",
        "toColumn": "Dato",
        "toTable": "Kalender"
      },
      {
        "name": "91a9f34a-4e1e-4a4d-81fe-f228bf86bd5f",
        "fromColumn": "ProsjektId",
        "fromTable": "KundePoster",
        "toColumn": "ProsjektNummer",
        "toTable": "Prosjekt"
      },
      {
        "name": "cac8aee5-21c2-44f8-b945-0a8311f74090",
        "fromColumn": "ReskontroNummer",
        "fromTable": "KundePoster",
        "toColumn": "KundeId",
        "toTable": "Kunder"
      }
    ],
    "roles": [
      {
        "name": "Alt",
        "annotations": [
          {
            "name": "PBI_Id",
            "value": "7077c72f481d4c5c8f14c142c2d181b2"
          }
        ],
        "modelPermission": "read"
      }
    ],
    "sourceQueryCulture": "nb-NO",
    "tables": [
      {
        "name": "Betalinger",
        "annotations": [
          {
            "name": "PBI_QueryRelationships",
            "value": "{\"columnCount\":14,\"keyColumnNames\":[],\"queryRelationships\":[{\"keyColumnCount\":1,\"keyColumn\":0,\"otherKeyColumnIdentity\":\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/Companies.{InfoEasyId,3}\",\"KeyColumnCount\":1}],\"columnIdentities\":[\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{FirmaId,0}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{KundeId,1}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{BilagsNummer,2}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{PostNummer,3}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{NOK,5}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{TekstKode,6}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{Tekst,7}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{ForfallsDato,8}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{BokfDato,9}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/Companies.{CompanyId,0}\",\"Section1/Betalinger/Added Custom.{Custom,11}\",\"Section1/Regnskap/Appended Query1.{Belop,4}\",\"Section1/Regnskap/Appended Query1.{ProsjektLnk,10}\",\"Section1/Betalinger/Changed Type.{Old,13}\"],\"ColumnCount\":14,\"KeyColumnNames\":[],\"ColumnIdentities\":[\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{FirmaId,0}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{KundeId,1}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{BilagsNummer,2}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{PostNummer,3}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{NOK,5}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{TekstKode,6}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{Tekst,7}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{ForfallsDato,8}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/KundeReskontro.{BokfDato,9}\",\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/Companies.{CompanyId,0}\",\"Section1/Betalinger/Added Custom.{Custom,11}\",\"Section1/Regnskap/Appended Query1.{Belop,4}\",\"Section1/Regnskap/Appended Query1.{ProsjektLnk,10}\",\"Section1/Betalinger/Changed Type.{Old,13}\"],\"RelationshipInfo\":[{\"keyColumnCount\":1,\"keyColumn\":0,\"otherKeyColumnIdentity\":\"Server.Database\\\\/2/SQL/a2insight.database.windows.net;a2dmHallmaker/dbo/Companies.{InfoEasyId,3}\",\"KeyColumnCount\":1}]}"
          },
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Belop",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "87b55237-e19e-4301-833e-38803c510a70",
            "sourceColumn": "Belop",
            "summarizeBy": "sum"
          },
          {
            "name": "BilagsNummer",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "9c606076-ac15-4d65-9702-75209db3a325",
            "sourceColumn": "BilagsNummer",
            "summarizeBy": "sum"
          },
          {
            "name": "BokfDato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "3c75aeac-a7c0-43cf-9614-0ed79e3c41da",
            "sourceColumn": "BokfDato",
            "summarizeBy": "none"
          },
          {
            "name": "CompanyId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "0857bf07-6db1-42bf-b783-e7081fc90e03",
            "sourceColumn": "CompanyId",
            "summarizeBy": "count"
          },
          {
            "name": "Dato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "491ac08b-ba30-4bbf-89f8-08847f9024de",
            "sourceColumn": "Dato",
            "summarizeBy": "none"
          },
          {
            "name": "FirmaId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "f400490d-f445-42b9-86fe-3d6d3ff64147",
            "sourceColumn": "FirmaId",
            "summarizeBy": "count"
          },
          {
            "name": "ForfallsDato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "bea205a1-f668-42c5-a26a-20da1fca51f7",
            "sourceColumn": "ForfallsDato",
            "summarizeBy": "none"
          },
          {
            "name": "KundeId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "4c519e31-7ddb-4dae-8901-8d16443f484e",
            "sourceColumn": "KundeId",
            "summarizeBy": "count"
          },
          {
            "name": "KundeLnk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2a3000cf-0902-47cd-a18c-66c32150d663",
            "sourceColumn": "KundeLnk",
            "summarizeBy": "none"
          },
          {
            "name": "NOK",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "d647a303-14fd-46eb-8780-9b0bd97902cc",
            "sourceColumn": "NOK",
            "summarizeBy": "sum"
          },
          {
            "name": "PostNummer",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "327a9d9f-4c44-418e-963d-bc9a6900667b",
            "sourceColumn": "PostNummer",
            "summarizeBy": "sum"
          },
          {
            "name": "ProsjektLnk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f4f2f468-e0e7-4a05-b7e6-f0aba3c1e6c6",
            "sourceColumn": "ProsjektLnk",
            "summarizeBy": "none"
          },
          {
            "name": "Tekst",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "bf714deb-7d58-44ce-b830-80cd20506645",
            "sourceColumn": "Tekst",
            "summarizeBy": "none"
          },
          {
            "name": "TekstKode",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "25387fc1-dd71-4c09-9e26-ee86d7241d95",
            "sourceColumn": "TekstKode",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "73c58d50-7fc6-437f-9368-565358dc5c19",
        "measures": [
          {
            "name": "UtgFakturaNOK",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE(-SUM(Betalinger[Belop]),FILTER(Betalinger,Betalinger[TekstKode] in {3, 4, 43}))",
            "lineageTag": "09cea8db-0590-41c2-96f7-904af1918389"
          }
        ],
        "partitions": [
          {
            "name": "Betalinger-d5153bac-a5e2-4ccc-9e06-9e3d87bc95a1",
            "mode": "import",
            "queryGroup": "Fakta",
            "source": {
              "expression": [
                "let",
                "   ",
                "//Procedure",
                "    #\"Merged Queries\" = Table.NestedJoin(SQL_CustomersAccounts,{\"FirmaId\"},SQL_Company,{\"InfoEasyId\"},\"Temp\",JoinKind.Inner),",
                "    #\"Expanded Temp\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Temp\", {\"CompanyId\"}, {\"CompanyId\"}),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Expanded Temp\", \"Custom\", each if Text.Length(Text.From([KundeId])) = 0 then null else Text.From([CompanyId])&\"-\"&Text.From([KundeId])),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Added Custom\",{{\"Custom\", \"KundeLnk\"}}),",
                "    #\"Sorted Rows\" = Table.Sort(#\"Renamed Columns\",{{\"Dato\", Order.Descending}}),",
                "    Custom1 = Regnskap,",
                "    #\"Extracted Text After Delimiter\" = Table.TransformColumns(Custom1, {{\"KontoLnk\", each Text.AfterDelimiter(_, \"-\"), type text}}),",
                "    #\"Filtered Rows2\" = Table.SelectRows(#\"Extracted Text After Delimiter\", each Text.StartsWith([KontoLnk], \"3\")),",
                "    #\"Merged Queries1\" = Table.NestedJoin(#\"Renamed Columns\",{\"CompanyId\", \"BilagsNummer\"},#\"Filtered Rows2\",{\"SelskapsId\", \"BilagsId\"},\"Regnskap\",JoinKind.LeftOuter),",
                "    #\"Expanded Regnskap\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"Regnskap\", {\"Belop\", \"ProsjektLnk\"}, {\"Belop\", \"ProsjektLnk\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded Regnskap\", each ([ProsjektLnk] <> null)),",
                "    #\"Inserted Year\" = Table.AddColumn(#\"Filtered Rows\", \"Old\", each if Date.Year([Dato]) < (SisteAar - AntallAar) then #date(SisteAar - AntallAar,1,1) else [Dato]),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Year\",{\"Dato\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Columns\",{{\"Old\", type date}}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Changed Type\",{{\"Old\", \"Dato\"}})",
                "in",
                "    #\"Renamed Columns1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Budsjett",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "CompanyId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "be8072f0-b44a-406e-bfef-ef2c1cbfbb07",
            "sourceColumn": "CompanyId",
            "summarizeBy": "none"
          },
          {
            "name": "Dato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "034646fc-f814-42d6-9853-092e3f77624b",
            "sourceColumn": "Dato",
            "summarizeBy": "none"
          },
          {
            "name": "Konto",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "fab7736d-7301-4a62-b4ef-6ba63515e20f",
            "sourceColumn": "Konto",
            "summarizeBy": "sum"
          },
          {
            "name": "KontoLnk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "fb0991bc-3033-4bde-89c7-704b501dca09",
            "sourceColumn": "KontoLnk",
            "summarizeBy": "none"
          },
          {
            "name": "NOK",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "25c212d3-dc2e-4332-b003-4ec79bdbb9c9",
            "sourceColumn": "NOK",
            "summarizeBy": "sum"
          },
          {
            "name": "SetId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "\"Bud\"",
            "isDataTypeInferred": true,
            "lineageTag": "e3900531-775e-4d9d-9b06-cd4bd83f5ce0",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Sett",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5aadc33c-98a0-425b-a016-ffcbaf3d6517",
            "sourceColumn": "Sett",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "35d9753b-2329-4615-b4aa-a7be530be919",
        "measures": [
          {
            "name": "Budsjett",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "SUM(Budsjett[NOK])",
            "lineageTag": "24ccae6b-cab3-401d-a3f1-ac96ffc08e6f"
          },
          {
            "name": "BudsjettUtenFortegn",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "SUMX(Budsjett,Budsjett[NOK]*RELATED(Kontoplan[Fortegn]))",
            "lineageTag": "5eb0d9de-0e60-492a-965e-f2d486a4f3be"
          }
        ],
        "partitions": [
          {
            "name": "Budsjett",
            "mode": "import",
            "queryGroup": "Fakta",
            "source": {
              "expression": [
                "let",
                "   ",
                "    Custom1 = Table.NestedJoin(SQL_Budget ,{\"CompanyId\"}, SQL_Company,{\"Company\"}, \"SelskapsId\",JoinKind.Inner),",
                "    #\"Removed Columns\" = Table.RemoveColumns(Custom1,{\"CompanyId\"}),",
                "    #\"Expanded SelskapsId\" = Table.ExpandTableColumn(#\"Removed Columns\", \"SelskapsId\", {\"CompanyId\"}, {\"CompanyId\"}),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Expanded SelskapsId\", \"KontoLnk\", each if Text.Length([Konto]) > 0 then Text.From([CompanyId])&\"-\"&Text.From([Konto]) else null),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Added Custom\",{{\"Konto\", Int64.Type}, {\"NOK\", type number}, {\"Dato\", type date}, {\"Sett\", type text}, {\"CompanyId\", Int64.Type}, {\"KontoLnk\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Datasett",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Sett",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "d024bde1-c6c0-48ae-909e-de49a58c8039",
            "sourceColumn": "Sett",
            "summarizeBy": "none"
          },
          {
            "name": "SettId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f5d038f7-1aca-4fba-a65e-a29ac89f647c",
            "sourceColumn": "SettId",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "11ece4a8-7a03-4c66-9888-b2a774c26aa1",
        "partitions": [
          {
            "name": "Datasett-3e2013ac-0fe1-4f81-8544-29c7b312bff8",
            "mode": "import",
            "queryGroup": "Dimensjoner",
            "source": {
              "expression": [
                "let",
                "   ",
                "table1 = \"Datasett\",",
                "",
                "    sqlDatabase = Sql.Database(\"a2insight.database.windows.net\", \"a2dmHallmaker\"),",
                "",
                "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data]",
                "in",
                "    sqlTbl1"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "ExcelMeasures",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ],
        "columns": [
          {
            "name": "ExcelMeasures",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9a2962c8-8963-41fe-9109-4357f053fa8f",
            "sourceColumn": "ExcelMeasures",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "52e62fe3-609b-432a-8ff8-5c06fc355bcd",
        "measures": [
          {
            "name": "Prosjekt inntekt",
            "expression": [
              "",
              "CALCULATE(",
              "    SUMX(",
              "        CALCULATETABLE(",
              "            VALUES( 'Prosjekt'[ProsjektNummer] ),",
              "            'Prosjekt'[WIPfilter] = 1",
              "        ),",
              "        -[Regnskap] / MIN( 'Faktorer'[Faktor] )",
              "    ),",
              "    'Kontoplan'[Nivå1] = \"Inntekter\"",
              ")"
            ],
            "formatString": "#,0",
            "lineageTag": "08955b21-d73e-4844-a124-ceefce3089ae"
          },
          {
            "name": "Prosjekt kostnad",
            "expression": [
              "",
              "CALCULATE(",
              "    SUMX(",
              "        CALCULATETABLE(",
              "            VALUES( 'Prosjekt'[ProsjektNummer] ),",
              "            'Prosjekt'[WIPfilter] = 1",
              "        ),",
              "        -[Regnskap] / MIN( 'Faktorer'[Faktor] )",
              "    ),",
              "    'Kontoplan'[Nivå1] <> \"Inntekter\"",
              ")"
            ],
            "formatString": "#,0",
            "lineageTag": "c0df767c-bf47-4c47-b2b8-b61b1ca71c37"
          },
          {
            "name": "Prosjekt bidrag",
            "expression": [
              "",
              "[Prosjekt inntekt] + [Prosjekt kostnad]"
            ],
            "formatString": "#,0",
            "lineageTag": "dd0aa948-538d-4c96-b10b-bced37c8aba1"
          }
        ],
        "partitions": [
          {
            "name": "ExcelMeasures-2407a1f6-824c-48d9-8e15-84aa627cabf4",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = \"\"",
                "in",
                "    Source"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Faktorer",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Enhet",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "7b71efb0-7dce-44d7-b9a6-239ccc2ece8c",
            "sourceColumn": "Enhet",
            "summarizeBy": "none"
          },
          {
            "name": "Faktor",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "int64",
            "lineageTag": "7843c5e3-014e-4101-9cf7-ec864f8d48ef",
            "sourceColumn": "Faktor",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "74118f34-2cfc-4c37-8274-13c7a6f33727",
        "measures": [
          {
            "name": "Rapportfaktor",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE(Min(Faktorer[Faktor]),FILTER(Faktorer, Faktorer[Faktor]=[Unit]))",
            "lineageTag": "6fc71449-4f50-4ddb-acb5-ada4f9d7b94b"
          },
          {
            "name": "Unit",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "MAX(Faktorer[Faktor])",
            "lineageTag": "191f2c2d-d379-4967-ac9a-6918cc32e2c1"
          }
        ],
        "partitions": [
          {
            "name": "Faktorer",
            "mode": "import",
            "queryGroup": "Dimensjoner",
            "source": {
              "expression": [
                "let",
                "   ",
                "table1 = \"Factors\",",
                "",
                "    sqlDatabase = Sql.Database(\"a2insight.database.windows.net\", \"a2dmHallmaker\"),",
                "",
                "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data],",
                "",
                "    columns2Norwegian = Table.RenameColumns(sqlTbl1,{{\"Unit\", \"Enhet\"}, {\"Factor\", \"Faktor\"}})",
                "in",
                "    columns2Norwegian"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "HpPrognose",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Exception"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "columns": [
          {
            "name": "Dato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "cd2d0432-79c5-49cc-bba1-cf2829e9f18f",
            "sourceColumn": "Dato",
            "summarizeBy": "none"
          },
          {
            "name": "FirstDate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "expression": "MINX(FILTER(HpPrognose,HpPrognose[HovedArbeidProsjektNr]=EARLIER(HpPrognose[HovedArbeidProsjektNr])),HpPrognose[Dato])",
            "formatString": "General Date",
            "isDataTypeInferred": true,
            "lineageTag": "1796406a-5385-4d8a-93e9-65c3acee8acd",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "HovedArbeidProsjektNr",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "8cfb7113-d8b3-47ed-9a38-2828a92e8daf",
            "sourceColumn": "HovedArbeidProsjektNr",
            "summarizeBy": "none"
          },
          {
            "name": "Inntekter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "dataType": "double",
            "formatString": "#,0",
            "lineageTag": "c592cea5-419d-4e36-8f9f-6643c4ba7cb2",
            "sourceColumn": "Inntekter",
            "summarizeBy": "sum"
          },
          {
            "name": "Kostnader",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "dataType": "double",
            "formatString": "#,0",
            "lineageTag": "a372fe2b-1190-496f-a4a6-d3575b56cffb",
            "sourceColumn": "Kostnader",
            "summarizeBy": "sum"
          },
          {
            "name": "Slutt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "fa247d09-fbee-4d0e-8b01-12438efb1201",
            "sourceColumn": "Slutt",
            "summarizeBy": "none"
          },
          {
            "name": "Start",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "16a29a32-75ca-4fa6-9faf-c4115df21803",
            "sourceColumn": "Start",
            "summarizeBy": "none"
          },
          {
            "name": "Varighet",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "7323b111-0c69-473d-a0cc-8747505d927b",
            "sourceColumn": "Varighet",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "a8626a3a-36d0-4c30-bae1-8d7163082f3a",
        "measures": [
          {
            "name": "DGprogGraf",
            "expression": "DIVIDE([InntProgGraf]-[KostProgGraf],[InntProgGraf])",
            "formatString": "0.00\\ %;-0.00\\ %;0.00\\ %",
            "lineageTag": "4fa7e6d8-737a-417f-9d32-f5d4a1c0a94b"
          },
          {
            "name": "InntProgGraf",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "DIVIDE(SUM(HpPrognose[Inntekter]),Faktorer[Rapportfaktor])",
            "lineageTag": "581ebee1-31e7-4fd4-a604-bf21062fe9db"
          },
          {
            "name": "KostProgGraf",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "DIVIDE(SUM(HpPrognose[Kostnader]),Faktorer[Rapportfaktor])",
            "formatString": "#,0",
            "lineageTag": "27061355-d88f-4fcf-844e-5958c186a1c6"
          },
          {
            "name": "AntattFerdigDte",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDateTimeCustom\":true}"
              }
            ],
            "expression": "MAX(HpPrognose[Slutt])",
            "lineageTag": "65ea7e1e-cb16-41b6-8cd7-ac66ba50e634"
          },
          {
            "name": "Measure",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE(SUM(HpPrognose[Inntekter]),FIRSTDATE(Kalender[Dato])) ",
            "lineageTag": "52f37506-3c83-4d8c-bfd7-11f7121bfe9e"
          }
        ],
        "partitions": [
          {
            "name": "HpPrognose-ed06083f-2d77-477b-b135-a5cb0ba52aad",
            "mode": "import",
            "queryGroup": "Fakta",
            "source": {
              "expression": [
                "let",
                "    Source = Table.NestedJoin(DatesFromProjects,{\"HovedArbeidProsjektNr\"},DatesFromForecast,{\"Hovedarbeidsprosjekt\"},\"DatesFromForecast\",JoinKind.RightOuter),",
                "    #\"Expanded DatesFromForecast\" = Table.ExpandTableColumn(Source, \"DatesFromForecast\", {\"Start\", \"Slutt\", \"Dato\"}, {\"Start.1\", \"Slutt.1\", \"Date\"}),",
                "    #\"Added Custom2\" = Table.AddColumn(#\"Expanded DatesFromForecast\", \"CStart\", each ",
                "\tif [Start] = null ",
                "\tthen ",
                "\t\tif [Start.1] = null ",
                "\t\tthen Date.StartOfMonth(DateTime.Date(DateTime.LocalNow()))",
                "\t\telse [Start.1]",
                "\telse [Start], type date),",
                "    #\"Added Custom3\" = Table.AddColumn(#\"Added Custom2\", \"CSlutt\", each if Number.From(",
                "\t\tif Number.From([Slutt.1]) = null ",
                "\t\tthen ",
                "\t\t\tif Number.From([Slutt]) = null ",
                "\t\t\tthen DateTime.Date(DateTime.LocalNow())",
                "\t\t\telse [Slutt]",
                "\t\telse [Slutt.1]",
                "\t\t)\t< Number.From(DateTime.Date(DateTime.LocalNow())) ",
                "\tthen Date.EndOfMonth(DateTime.Date(DateTime.LocalNow()))",
                "\telse ",
                "\t\tif Number.From([Slutt.1]) = null ",
                "\t\tthen ",
                "\t\t\tif Number.From([Slutt]) = null ",
                "\t\t\tthen Date.EndOfMonth(DateTime.Date(DateTime.LocalNow()))",
                "\t\t\telse [Slutt]",
                "\t\telse [Slutt.1], type date),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Added Custom3\",{\"Start\", \"Slutt\", \"Start.1\", \"Slutt.1\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Removed Columns1\",{{\"CStart\", \"Start\"}, {\"CSlutt\", \"Slutt\"}}),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Renamed Columns1\", \"ListOfDates\", each List.Transform({Number.From([Date])..Number.From([Slutt])},each Date.From(_))),",
                "    #\"Expanded ListOfDates\" = Table.ExpandListColumn(#\"Added Custom\", \"ListOfDates\"),",
                "    #\"Inserted Start of Month\" = Table.AddColumn(#\"Expanded ListOfDates\", \"Dato\", each Date.StartOfMonth([ListOfDates]), type date),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Inserted Start of Month\",{\"ListOfDates\", \"Date\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Columns\", {\"HovedArbeidProsjektNr\", \"Start\", \"Slutt\", \"Dato\"}),",
                "    #\"Added Custom1\" = Table.AddColumn(#\"Removed Duplicates\", \"Varighet\", each Number.From([Slutt])-Number.From([Start])+1),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Added Custom1\",{{\"HovedArbeidProsjektNr\", type text}, {\"Varighet\", Int64.Type}}),",
                "    #\"Merged Queries\" = Table.NestedJoin(#\"Changed Type\",{\"HovedArbeidProsjektNr\", \"Dato\"},ProjectForecast,{\"Hovedarbeidsprosjekt\", \"Date\"},\"ForecastFromForecast\",JoinKind.LeftOuter),",
                "    #\"Expanded ForecastFromForecast\" = Table.ExpandTableColumn(#\"Merged Queries\", \"ForecastFromForecast\", {\"CostAcc\", \"RevenueAcc\"}, {\"CostAcc\", \"RevenueAcc\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Expanded ForecastFromForecast\",{{\"CostAcc\", \"Kostnader\"}, {\"RevenueAcc\", \"Inntekter\"}}),",
                "    #\"Sorted Rows\" = Table.Sort(#\"Renamed Columns\",{{\"HovedArbeidProsjektNr\", Order.Ascending}, {\"Dato\", Order.Ascending}}),",
                "    #\"Filled Down\" = Table.FillDown(#\"Sorted Rows\",{\"Inntekter\", \"Kostnader\"})",
                "in",
                "    #\"Filled Down\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "IB",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Aar",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "0050a87b-f671-42be-a260-a116319b2096",
            "sourceColumn": "Aar",
            "summarizeBy": "none"
          },
          {
            "name": "IB",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "58561557-8807-46b9-8696-b4cfa24c0896",
            "sourceColumn": "IB",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "05d9b879-f4e0-4173-9caa-6dada33299df",
        "measures": [
          {
            "name": "RegnskapPer",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "SUM(Regnskap[Belop])",
            "formatString": "#,0",
            "lineageTag": "d26e7e45-5443-447a-9e98-2fb2f92c8b9b"
          },
          {
            "name": "RegnskapAkk",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "TOTALYTD([RegnskapPer],Kalender[Dato])",
            "formatString": "#,0",
            "lineageTag": "d8194df6-e2f6-4659-be8b-809be0fea249"
          }
        ],
        "partitions": [
          {
            "name": "IB",
            "mode": "import",
            "queryGroup": "Hjelpetabeller",
            "source": {
              "expression": [
                "let",
                "",
                "//Procedure",
                "    FilterSelskap = Table.NestedJoin(SQL_Company,{\"InfoEasyId\"}, SQL_GeneralLedger,{\"FirmaId\"},\"SelskapsId\",JoinKind.Inner),",
                "    #\"Filtered Rows\" = Table.SelectRows(FilterSelskap, each [Company] = companyId),",
                "    HentData = Table.ExpandTableColumn(#\"Filtered Rows\", \"SelskapsId\", {\"HovedbokId\", \"KontoId\", \"BilagsNummer\", \"Dato\", \"DimensjonA\", \"DimensjonB\", \"DimensjonC\", \"DimensjonD\", \"ProsjektId\", \"MomsKode\", \"MotkontoType\", \"MotKonto\", \"NettoBelop\", \"TekstKode\", \"Tekst\", \"Periode\", \"Aar\", \"BunkeNummer\", \"RegistreringId\", \"Mengde\", \"KontoLnk\", \"Eyeshare\", \"LevLnk\", \"KundeLnk\", \"DimAlnk\", \"ProsjektLnk\", \"DateLnk\"}, {\"HovedbokId\", \"KontoId\", \"BilagsNummer\", \"Dato\", \"DimensjonA\", \"DimensjonB\", \"DimensjonC\", \"DimensjonD\", \"ProsjektId\", \"MomsKode\", \"MotkontoType\", \"MotKonto\", \"NettoBelop\", \"TekstKode\", \"Tekst\", \"Periode\", \"Aar\", \"BunkeNummer\", \"RegistreringId\", \"Mengde\", \"KontoLnk\", \"Eyeshare\", \"LevLnk\", \"KundeLnk\", \"DimAlnk\", \"ProsjektLnk\", \"DateLnk\"}),",
                "    FilterData = Table.SelectRows(HentData, each [Aar] <= SisteAar and [Aar] >= ((SisteAar)-5)),",
                "    #\"Grupperte rader\" = Table.Group(FilterData, {\"TekstKode\", \"Aar\"}, {{\"Antall\", each Table.RowCount(_), type number}}),",
                "    #\"Filtrerte rader2\" = Table.SelectRows(#\"Grupperte rader\", each ([TekstKode] = 19)),",
                "    #\"Trukket fra kolonne\" = Table.TransformColumns(#\"Filtrerte rader2\", {{\"Aar\", each _ - 1, type number}}),",
                "    #\"Andre kolonner fjernet\" = Table.SelectColumns(#\"Trukket fra kolonne\",{\"Aar\"}),",
                "    #\"Egendefinert lagt til\" = Table.AddColumn(#\"Andre kolonner fjernet\", \"IB\", each \"IB\", type text)",
                "in",
                "    #\"Egendefinert lagt til\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "IN_ProjectForecast",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Comments",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ff3f33d8-0fdc-45c5-9206-38b912e91057",
            "sourceColumn": "Comments",
            "sourceProviderType": "varchar(max)",
            "summarizeBy": "none"
          },
          {
            "name": "Cost",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "ec621a03-63d9-4f45-b7a0-803c7a59a41c",
            "sourceColumn": "Cost",
            "sourceProviderType": "float",
            "summarizeBy": "sum"
          },
          {
            "name": "LineKey",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isNullable": false,
            "lineageTag": "4fe89cae-9c22-4a2e-85b4-c1ea80e16e4f",
            "sourceColumn": "LineKey",
            "sourceProviderType": "bigint",
            "summarizeBy": "count"
          },
          {
            "name": "MonthNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isNullable": false,
            "lineageTag": "8cb58fbc-689e-403e-b00b-0e9bd9e4ff62",
            "sourceColumn": "MonthNo",
            "sourceProviderType": "float",
            "summarizeBy": "sum"
          },
          {
            "name": "ParentProjectNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ba81a68c-d7d9-4217-b999-b63f2e39eb8c",
            "sourceColumn": "ParentProjectNo",
            "sourceProviderType": "varchar(50)",
            "summarizeBy": "none"
          },
          {
            "name": "ProjectId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isNullable": false,
            "lineageTag": "5a1964af-64bc-4490-b5c4-79b0eccb9c88",
            "sourceColumn": "ProjectId",
            "sourceProviderType": "float",
            "summarizeBy": "none"
          },
          {
            "name": "Revenue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "61d88126-2c19-48b2-9189-05d234f16c22",
            "sourceColumn": "Revenue",
            "sourceProviderType": "float",
            "summarizeBy": "sum"
          },
          {
            "name": "Year",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "isNullable": false,
            "lineageTag": "780c9ab9-57d1-4afc-a9a9-d70940dae663",
            "sourceColumn": "Year",
            "sourceProviderType": "float",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "536b1204-28ac-4eee-80e3-630a9ee62c4c",
        "partitions": [
          {
            "name": "IN_ProjectForecast-69dc90f5-2b43-44f4-a9f4-96d90ac7ef49",
            "mode": "directQuery",
            "source": {
              "expression": [
                "let",
                "    Source = Sql.Database(\"a2insight.database.windows.net\", \"a2dmHallmaker\"),",
                "    dbo_IN_ProjectForecast = Source{[Schema=\"dbo\",Item=\"IN_ProjectForecast\"]}[Data]",
                "in",
                "    dbo_IN_ProjectForecast"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "KR_Balanse",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "CompanyId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c5992281-5ea6-41bd-bbf5-c7333f58fa40",
            "sourceColumn": "CompanyId",
            "summarizeBy": "none"
          },
          {
            "name": "Detaljer",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "int64",
            "lineageTag": "7fb9cf85-e135-49b9-b0d8-98e016765d18",
            "sourceColumn": "Detaljer",
            "summarizeBy": "none"
          },
          {
            "name": "EnglishDescription",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5b7f2e74-68cb-465a-b2d4-2555904f6bc9",
            "sourceColumn": "EnglishDescription",
            "summarizeBy": "none"
          },
          {
            "name": "Grp1",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "498ab3d8-1fab-4c19-ad15-1ef392409097",
            "sourceColumn": "Grp1",
            "summarizeBy": "none"
          },
          {
            "name": "Grp2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "e2f4b152-ea84-49e0-8d93-a0f81ef99202",
            "sourceColumn": "Grp2",
            "summarizeBy": "none"
          },
          {
            "name": "Nivå",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "84f6eb7e-b1e6-4043-b1f6-d3e43beb4369",
            "sourceColumn": "Nivå",
            "summarizeBy": "none"
          },
          {
            "name": "Nivå2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e933af0a-bee1-4677-b356-a1ce10d0a1b4",
            "sourceColumn": "Nivå2",
            "summarizeBy": "none"
          },
          {
            "name": "Rapport",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "1746f3ba-d5f1-4324-aeba-eb62f0fefa85",
            "sourceColumn": "Rapport",
            "summarizeBy": "none"
          },
          {
            "name": "Rekkefølge",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "int64",
            "lineageTag": "52793db6-e7ff-4e72-949c-89b2210aedc2",
            "sourceColumn": "Rekkefølge",
            "summarizeBy": "none"
          },
          {
            "name": "TransferDate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "fa22ffb1-80d4-4b56-83c0-7d5d5e8d4b90",
            "sourceColumn": "TransferDate",
            "summarizeBy": "none"
          },
          {
            "name": "Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "int64",
            "lineageTag": "88984221-8fe1-45cc-ad7c-6ea5050719dc",
            "sourceColumn": "Type",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "44634a28-1e14-48bb-ab0a-9685e5c6a73d",
        "measures": [
          {
            "name": "BalType",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "SUM(KR_Balanse[Type])",
            "lineageTag": "bb53348d-4a59-4dba-9cea-af79de3fc32e"
          },
          {
            "name": "DelSum1",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "IF (",
              "    HASONEFILTER(KR_Balanse[Nivå2]),",
              "    CALCULATE (",
              "        [BalanseFraRegnskap],",
              "        ALL ( KR_Balanse[Nivå2] ),",
              "        KR_Balanse[Rekkefølge] < VALUES ( KR_Balanse[Rekkefølge]),KR_Balanse[Grp1]=VALUES(KR_Balanse[Grp1])",
              "    ),",
              "    BLANK ()",
              ")"
            ],
            "lineageTag": "f5475c30-e1b9-470b-8ebe-385c49b7b9cf"
          },
          {
            "name": "DelSum2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "IF (",
              "    HASONEFILTER(KR_Balanse[Nivå2]),",
              "    CALCULATE (",
              "        [BalanseFraRegnskap],",
              "        ALL ( KR_Balanse[Nivå2] ),",
              "        KR_Balanse[Rekkefølge] < VALUES ( KR_Balanse[Rekkefølge]),KR_Balanse[Grp2]=VALUES(KR_Balanse[Grp2])",
              "    ),",
              "    BLANK ()",
              ")"
            ],
            "lineageTag": "cb9ad2c6-dfd8-4563-bdb4-f2948b9a341a"
          },
          {
            "name": "Egenkapitalandel",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "DIVIDE (",
              "    CALCULATE (",
              "        [BalanseFraRegnskap],",
              "        FILTER ( ALL ( Kontoplan ), Kontoplan[Nivå1] = \"Egenkapital\" )",
              "    ),",
              "    CALCULATE (",
              "        [BalanseFraRegnskap],",
              "        FILTER ( ALL ( Kontoplan ), Kontoplan[Side] = \"EIENDELER\" )",
              "    )",
              ")",
              "    * 100"
            ],
            "lineageTag": "466800b0-2c6e-4c0e-825b-bd63e62e5909"
          },
          {
            "name": "BalNOK",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "SWITCH (",
              "    [BalType],",
              "    BLANK (), BLANK (),",
              "    1 , [BalanseFraRegnskap],",
              "    2 , [DelSum2],",
              "    3 , [DelSum1],",
              "    4,[Egenkapitalandel]",
              ")"
            ],
            "lineageTag": "c64e4fdb-a4cb-4c58-985f-2ebccf6bfbdc"
          },
          {
            "name": "Balanse",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": [
              "IF (",
              "    AND (",
              "        MAX ( KR_Balanse[Detaljer] ) = 0,",
              "        ISFILTERED ( Kontoplan[Konto] ) || ISFILTERED ( Kontoplan[Kontonavn] )",
              "            || ISFILTERED ( Kontoplan[Nivå3] )",
              "    ),",
              "    BLANK (),",
              "    [BalNOK]",
              ")"
            ],
            "formatString": "#,0",
            "lineageTag": "14fc84a0-8c03-4c56-9f0d-44d76f181a4f"
          },
          {
            "name": "BT-1",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CLOSINGBALANCEYEAR(CALCULATE([Balanse],PREVIOUSYEAR(Kalender[Dato])),Kalender[Dato])",
            "formatString": "#,0",
            "lineageTag": "dcdd9f13-1001-4456-9a04-955297367d43"
          },
          {
            "name": "BT-2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CLOSINGBALANCEYEAR(CALCULATE([BT-1],PREVIOUSYEAR(Kalender[Dato])),Kalender[Dato])",
            "formatString": "#,0",
            "lineageTag": "445de08d-4eee-4802-8278-911d4bd7352b"
          },
          {
            "name": "BT-3",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CLOSINGBALANCEYEAR(CALCULATE([BT-2],PREVIOUSYEAR(Kalender[Dato])),Kalender[Dato])",
            "formatString": "#,0",
            "lineageTag": "cecfb568-12b5-4663-b83b-6cb01574d582"
          },
          {
            "name": "BT-4",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CLOSINGBALANCEYEAR(CALCULATE([BT-3],PREVIOUSYEAR(Kalender[Dato])),Kalender[Dato])",
            "formatString": "#,0",
            "lineageTag": "594df448-ee13-42fb-bc9e-d0b4d30b0a22"
          },
          {
            "name": "12m Endring",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[Balanse] - CALCULATE([Balanse],SAMEPERIODLASTYEAR(Kalender[Dato]))",
            "formatString": "#,0",
            "lineageTag": "72038da5-b284-49d4-aeda-096d0eb6a1f4"
          },
          {
            "name": "12m% endring",
            "expression": "IF(MAX(KR_Balanse[Type])=4,BLANK(),DIVIDE([12m Endring],[Balanse])*100)",
            "formatString": "#,0.0",
            "lineageTag": "d6f09474-6328-43db-8fe3-5fdd8d2ec756"
          },
          {
            "name": "Endring iår",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[Balanse]-[BT-1]",
            "formatString": "#,0",
            "lineageTag": "0a9d7f66-d502-479e-a2f0-6c3abda2651d"
          },
          {
            "name": "Endring% iår",
            "expression": "IF(MAX(KR_Balanse[Type])=4,BLANK(),DIVIDE([Endring iår],[Balanse])*100)",
            "formatString": "#,0.0",
            "lineageTag": "381ed822-c26a-4b1f-a324-7fa7038268cc"
          },
          {
            "name": "BalanseStatus",
            "expression": [
              "",
              "VAR Down =",
              "    UNICHAR ( 128681 )",
              "VAR Up =",
              "    UNICHAR ( 128176 )",
              "RETURN",
              "    IF ( ROUND(CALCULATE([Balanse],ALL(KR_Balanse),KR_Balanse[Nivå2]=\"Sum EIENDELER\"),0) = ROUND(CALCULATE([Balanse],ALL(KR_Balanse),KR_Balanse[Nivå2]=\"Sum GJELD OG EGENKAPITAL\"),0), \"\" ,CONCATENATE(Down,\" - Avvik balanseposter\"))"
            ],
            "lineageTag": "f86581d2-fea9-482f-aea1-6532ecec7e6c"
          },
          {
            "name": "Test2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE([Balanse],ALL(KR_Balanse),KR_Balanse[Nivå2]=\"Sum GJELD OG EGENKAPITAL\")",
            "lineageTag": "54302109-937f-46e7-9707-9cc4364e4539"
          },
          {
            "name": "BalanseLinjeNr",
            "expression": [
              "",
              "",
              "VAR  Test = SELECTEDVALUE(KR_Balanse[Nivå2])",
              "RETURN",
              "",
              "SWITCH(TRUE(),",
              "    Test = \"Sum omløpsmidler\",1,",
              "    Test = \"Sum anleggsmidler\",1,",
              "    Test = \"Sum egenkapital\",1,",
              "    Test = \"Sum gjeld\",1,",
              "    Test = \"Sum EIENDELER\",2,",
              "    Test = \"Sum GJELD OG EGENKAPITAL\",2",
              ")"
            ],
            "formatString": "0",
            "lineageTag": "7ca9642d-f239-4941-a67b-92cef173dcbf"
          },
          {
            "name": "Likviditetsgrad 2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "DIVIDE(CALCULATE([BalanseFraRegnskap],Kontoplan[Nivå1]=\"Omløpsmidler\",Kontoplan[Nivå3]<>\"Anlegg under utførelse (opptjent ikke fakturert)\",Kontoplan[Nivå3]<>\"Skattetrekkskonto\"),CALCULATE([BalanseFraRegnskap],Kontoplan[Nivå2]=\"Kortsiktig gjeld\",Kontoplan[Nivå3]<>\"Anlegg under utførelse (opptjent ikke fakturert)\",Kontoplan[Nivå3]<>\"Skattetrekkskonto\"))",
            "lineageTag": "ab77f464-f9bb-40fa-ac35-84d89132ccbd"
          },
          {
            "name": "Slett2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE([BalanseFraRegnskap],Kontoplan[Nivå2]=\"Kortsiktig gjeld\",Kontoplan[Nivå3]<>\"Anlegg under utførelse (opptjent ikke fakturert)\",Kontoplan[Nivå3]<>\"Skattetrekkskonto\")",
            "lineageTag": "6ffeadcc-3cda-4ae3-932b-f901b139359b"
          },
          {
            "name": "LiGr2LYT",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE([Likviditetsgrad 2],FILTER(ALL(Kalender),Kalender[År]=MAX(Kalender[År])-1),Kalender[MndNo]=12)",
            "lineageTag": "9175f675-cfe8-45c1-9edb-c3f8a093c00e"
          },
          {
            "name": "Cash",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE([BalanseFraRegnskap],Kontoplan[Nivå3] IN {\"Bankinnskudd\",\"Valutakonto\"})-CALCULATE([BalanseFraRegnskap],Kontoplan[Nivå3] = \"Kassekreditt DNB\")",
            "lineageTag": "aa2b18b4-03e2-4f67-a7e0-dc34b949b6b2"
          },
          {
            "name": "CashLYT",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE([Cash],FILTER(ALL(Kalender),Kalender[År]=MAX(Kalender[År])-1),Kalender[MndNo]=12)",
            "lineageTag": "be88f4d1-89b4-4029-9ce1-903dad6a48fe"
          },
          {
            "name": "Kundefordringer",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE([BalanseFraRegnskap],SEARCH(\"Kundefordring\",Kontoplan[Nivå3],1,0)>0)",
            "lineageTag": "a454b458-1517-4ebe-a82d-b55d8b794d4d"
          },
          {
            "name": "Kundefordringer LYT",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE([Kundefordringer],FILTER(ALL(Kalender),Kalender[År]=MAX(Kalender[År])-1),Kalender[MndNo]=12) ",
            "lineageTag": "a45f88d0-adea-43fb-a000-a9a6f4ce63d0"
          },
          {
            "name": "Leverandørgjeld",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE([BalanseFraRegnskap],SEARCH(\"Leverandørgjeld\",Kontoplan[Nivå3],1,0)>0)",
            "lineageTag": "e089a93b-51d9-4c34-980e-a8ca8cfcb29d"
          },
          {
            "name": "Leverandørgjeld LYT",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE([Leverandørgjeld],FILTER(ALL(Kalender),Kalender[År]=MAX(Kalender[År])-1),Kalender[MndNo]=12)",
            "lineageTag": "96a89037-1866-4be2-8ae9-8fbc52572a5f"
          },
          {
            "name": "Kassekreditt",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE([Cash], SEARCH(\"Kassekred\",Kontoplan[Nivå3],1,0)>0)",
            "lineageTag": "f04a62f6-5773-464f-af30-ca9e46b14f92"
          },
          {
            "name": "KKLimit",
            "expression": "-18000000/MIN(Faktorer[Faktor])",
            "formatString": "#,0",
            "lineageTag": "06160fa7-517c-4795-9e3b-8890babfcaf5"
          }
        ],
        "partitions": [
          {
            "name": "KR_Balanse",
            "mode": "import",
            "queryGroup": "Dimensjoner",
            "source": {
              "expression": [
                "let",
                "   ",
                "table1 = \"Reports\",",
                "",
                "    sqlDatabase = Sql.Database(\"a2insight.database.windows.net\", \"a2dmHallmaker\"),",
                "",
                "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data],",
                "",
                "    filterCompanyRecords = Table.SelectRows(sqlTbl1, each ([CompanyId] = companyId and [Rapport] = \"KR_Balanse\")),",
                "    setNivåLink = Table.RenameColumns(filterCompanyRecords,{{\"Nlink\", \"Nivå2\"}})",
                "in",
                "    setNivåLink"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "KR_Resultat",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "CompanyId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "6e4d00c0-dd05-45ba-a381-79875a33c01d",
            "sourceColumn": "CompanyId",
            "summarizeBy": "none"
          },
          {
            "name": "Detaljer",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "int64",
            "lineageTag": "125d1956-4978-4c2f-bbc2-3c23ddee7df4",
            "sourceColumn": "Detaljer",
            "summarizeBy": "none"
          },
          {
            "name": "EnglishDescription",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "b7206f9e-4226-460c-81e9-4be00fdb4598",
            "sourceColumn": "EnglishDescription",
            "summarizeBy": "none"
          },
          {
            "name": "Grp1",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "af80aea4-3934-4610-bfec-fac241e2c116",
            "sourceColumn": "Grp1",
            "summarizeBy": "none"
          },
          {
            "name": "Grp2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "225302d1-954b-495b-984d-308e323ba8bc",
            "sourceColumn": "Grp2",
            "summarizeBy": "none"
          },
          {
            "name": "Nivå",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2a0fba3c-46b7-47c6-b46e-02f1b2fd7594",
            "sourceColumn": "Nivå",
            "summarizeBy": "none"
          },
          {
            "name": "Nivå1",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "921c4eb5-bbe7-409b-97a6-de607933954b",
            "sourceColumn": "Nivå1",
            "summarizeBy": "none"
          },
          {
            "name": "Rapport",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "69d37ef2-8cf6-45f5-83cd-4f399b5e4838",
            "sourceColumn": "Rapport",
            "summarizeBy": "none"
          },
          {
            "name": "Rekkefølge",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "int64",
            "lineageTag": "86ab787e-35bf-4fb2-b532-cb8cc3a13235",
            "sourceColumn": "Rekkefølge",
            "summarizeBy": "none"
          },
          {
            "name": "TransferDate",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "7f9bcc41-b60d-492a-ac61-d9751d0089a3",
            "sourceColumn": "TransferDate",
            "summarizeBy": "none"
          },
          {
            "name": "Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "int64",
            "lineageTag": "c05c3238-6ab7-4662-9739-f92f3e1e7c04",
            "sourceColumn": "Type",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "35c6b53f-ad54-4b9b-982b-4bf25521563b",
        "measures": [
          {
            "name": "RegneType",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "MIN(KR_Resultat[Type])",
            "lineageTag": "4a315f94-0b6d-4001-8d4e-69c777a7ff65"
          },
          {
            "name": "Budsjett PER",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CALCULATE([Resultat],Datasett[Sett]=\"Budsjett\")",
            "formatString": "#,0",
            "lineageTag": "f35e9037-d99b-4691-afc2-d4f9df72999f"
          },
          {
            "name": "ResultatUtenFortegn",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "DIVIDE(CALCULATE([RegnskapUtenFortegn]+[BudsjettUtenFortegn],Kontoplan[Rapport]=\"Resultat\"),[Rapportfaktor])",
            "lineageTag": "37600427-6222-4f98-b35b-4897a194d3d7"
          },
          {
            "name": "ResultatMedFortegn",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "DIVIDE(CALCULATE(-[Regnskap]-[Budsjett],Kontoplan[Rapport]=\"Resultat\"),[Rapportfaktor])",
            "lineageTag": "31b2c814-b02a-46fd-85ed-59da64abe1a9"
          },
          {
            "name": "ResultatSummer",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "IF (",
              "    HASONEFILTER (KR_Resultat[Nivå1]),",
              "    CALCULATE (",
              "        [ResultatMedFortegn],",
              "        ALL ( KR_Resultat[Nivå1] ),",
              "        KR_Resultat[Rekkefølge] < VALUES ( KR_Resultat[Rekkefølge])",
              "    ),",
              "    BLANK ()",
              ")"
            ],
            "lineageTag": "c94e1963-bcbe-4f7a-ae70-a3b267515275"
          },
          {
            "name": "ProsentAvInntekt",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "DIVIDE([ResultatSummer],CALCULATE(KR_Resultat[ResultatMedFortegn],FILTER(ALL(KR_Resultat),KR_Resultat[Rekkefølge]=1)))*100",
            "lineageTag": "578d4586-2686-4074-87eb-f92eb99bffc4"
          },
          {
            "name": "ResultatRapport",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "SWITCH (",
              "    [RegneType],",
              "    BLANK (), BLANK (),",
              "    1 , [ResultatUtenFortegn],",
              "    2 , [ResultatSummer],",
              "    3, [ProsentAvInntekt]",
              ")"
            ],
            "lineageTag": "197d18ee-e924-4c18-9231-1be0c6b94aea"
          },
          {
            "name": "Resultat",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "IF (",
              "    AND (",
              "        MAX ( KR_Resultat[Detaljer] ) = 0,",
              "        ISFILTERED ( Kontoplan[Konto] ) || ISFILTERED ( Kontoplan[Kontonavn] )|| ISFILTERED ( Kontoplan[Nivå3])|| ISFILTERED ( Kontoplan[Nivå2] ) || ISFILTERED ( Kontoplan[Kontonavn] )",
              "    ),",
              "    BLANK (),",
              "    [ResultatRapport]",
              ")"
            ],
            "lineageTag": "74e56cab-18d0-4c59-9be5-802d7a4b7b87"
          },
          {
            "name": "Virkelig PER",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CALCULATE([Resultat],Datasett[Sett]=\"Virkelig\")",
            "formatString": "#,0",
            "lineageTag": "a346ffb6-610a-4d0e-9a6e-c03eb1f066ca"
          },
          {
            "name": "Virkelig YTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "TOTALYTD([Virkelig PER],Kalender[Dato])",
            "formatString": "#,0",
            "lineageTag": "cc3bc7ea-e97f-4705-a489-a4cbe924075c"
          },
          {
            "name": "Budsjett YTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "TOTALYTD([Budsjett PER],Kalender[Dato])",
            "formatString": "#,0",
            "lineageTag": "19465404-f075-427b-a8bb-f3d508198a53"
          },
          {
            "name": "Budsjett YT",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CLOSINGBALANCEYEAR([Budsjett YTD],Kalender[Dato])",
            "formatString": "#,0",
            "lineageTag": "51c26471-5916-46a2-9e21-ff6567cef38c"
          },
          {
            "name": "Avvik PER",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": [
              "( [Virkelig PER] - [Budsjett PER] )",
              "    * IF (",
              "        ( MAX ( Kontoplan[Nivå1] ) IN { \"Inntekter\", \"Kostnader\" } ),",
              "        1,",
              "        IF (",
              "            MAX ( KR_Resultat[Type] ) = 1,",
              "            -1,",
              "            IF ( MAX ( KR_Resultat[Type] ) = 3, BLANK (), 1 )",
              "        )",
              "    )"
            ],
            "formatString": "#,0",
            "lineageTag": "85f265ad-5c86-42dc-8fc6-3a52fbf84eb9"
          },
          {
            "name": "Avvik YTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": [
              "( [Virkelig YTD] - [Budsjett YTD] )",
              "    * IF (",
              "        ( MAX ( Kontoplan[Nivå1] ) IN { \"Inntekter\", \"Kostnader\" } ),",
              "        1,",
              "        IF (",
              "            MAX ( KR_Resultat[Type] ) = 1,",
              "            -1,",
              "            IF ( MAX ( KR_Resultat[Type] ) = 3, BLANK (), 1 )",
              "        )",
              "    )"
            ],
            "formatString": "#,0",
            "lineageTag": "a5a33103-5a5b-4953-9aa8-75098e0182cc"
          },
          {
            "name": "YT-1",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CLOSINGBALANCEYEAR(CALCULATE([Virkelig PER],PREVIOUSYEAR(Kalender[Dato])),Kalender[Dato])",
            "formatString": "#,0",
            "lineageTag": "df455c4a-af83-419d-b08d-e486fe16a441"
          },
          {
            "name": "YT-2",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CLOSINGBALANCEYEAR(CALCULATE([YT-1],PREVIOUSYEAR(Kalender[Dato])),Kalender[Dato])",
            "formatString": "#,0",
            "lineageTag": "ea1aeada-f781-4195-941e-e193518542aa"
          },
          {
            "name": "YT-3",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CLOSINGBALANCEYEAR(CALCULATE([YT-2],PREVIOUSYEAR(Kalender[Dato])),Kalender[Dato])",
            "formatString": "#,0",
            "lineageTag": "76208d52-54ab-4eae-aea1-67a9598c43b4"
          },
          {
            "name": "YT-4",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CLOSINGBALANCEYEAR(CALCULATE([YT-3],PREVIOUSYEAR(Kalender[Dato])),Kalender[Dato])",
            "formatString": "#,0",
            "lineageTag": "e388969d-c6f9-4776-897c-3bff03446528"
          },
          {
            "name": "ResultatLinjeNr",
            "expression": [
              "",
              "",
              "VAR  Test = SELECTEDVALUE(KR_Resultat[Nivå1])",
              "RETURN",
              "",
              "SWITCH(TRUE(),",
              "    Test = \"Dekningsbidrag\",1,",
              "    Test = \"DG\",2,",
              "    Test = \"Driftsresultat\",1,",
              "    Test = \"Resultat før skatt\",1",
              ")"
            ],
            "formatString": "0",
            "lineageTag": "c93f0f63-c397-4d9b-bc7e-29a31cdc5230"
          }
        ],
        "partitions": [
          {
            "name": "KR_Resultat",
            "mode": "import",
            "queryGroup": "Dimensjoner",
            "source": {
              "expression": [
                "let",
                "   ",
                "table1 = \"Reports\",",
                "",
                "    sqlDatabase = Sql.Database(SQLserver1, SQLdatabase1),",
                "",
                "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data],",
                "",
                "    filterCompanyRecords = Table.SelectRows(sqlTbl1, each ([CompanyId] = companyId and [Rapport] = \"KR_Resultat\")),",
                "    setNivåLink = Table.RenameColumns(filterCompanyRecords,{{\"Nlink\", \"Nivå1\"}})",
                "in",
                "    setNivåLink"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Kalender",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "columns": [
          {
            "name": "Dato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "ebdbaeda-0b0a-4c38-b079-c8f322e29a94",
            "sourceColumn": "Dato",
            "summarizeBy": "none"
          },
          {
            "name": "KortMnd",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "1d5eb2aa-69b7-4d1e-ba48-98ec03adc88d",
            "sourceColumn": "KortMnd",
            "summarizeBy": "none"
          },
          {
            "name": "KortÅr",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "RIGHT(Kalender[År],2)",
            "isDataTypeInferred": true,
            "lineageTag": "0499e4e0-7540-4771-a2ad-c4b0c6ff2f38",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Kvartal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "1e33aafd-3015-40b6-9e2a-cf54884f7aa2",
            "sourceColumn": "Kvartal",
            "summarizeBy": "none"
          },
          {
            "name": "Mnd",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c132e847-fc6f-4d44-b419-64cbb9b9fc98",
            "sourceColumn": "Mnd",
            "summarizeBy": "none"
          },
          {
            "name": "MndNo",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "5664db25-7eb5-4fed-a19f-bda472a57a79",
            "sourceColumn": "MndNo",
            "summarizeBy": "sum"
          },
          {
            "name": "Termin",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "expression": "ROUND(Kalender[MndNo] / 2, 0) ",
            "isDataTypeInferred": true,
            "lineageTag": "7ac16342-6348-46c4-b4a4-0ef62f675bd6",
            "summarizeBy": "sum",
            "type": "calculated"
          },
          {
            "name": "Tertial",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2432bc08-65a4-4150-a767-bbbac4ecf947",
            "sourceColumn": "Tertial",
            "summarizeBy": "none"
          },
          {
            "name": "TxYY",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "59fd7738-1e53-4b8d-8ae1-a7f06287df9b",
            "sourceColumn": "TxYY",
            "summarizeBy": "none"
          },
          {
            "name": "YYYYMM",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "8b8a211b-ee9f-4777-9c89-259ec37a4064",
            "sourceColumn": "YYYYMM",
            "summarizeBy": "sum"
          },
          {
            "name": "År",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "81fc455b-9067-4084-963f-7ee693f15508",
            "sourceColumn": "År",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "a76acc1b-4399-47d7-b36d-569a018ca8b2",
        "measures": [
          {
            "name": "EndOf",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "MAX(Kalender[Dato])",
            "lineageTag": "69fb7af4-ddd1-4f08-9e66-85e7cf136e81"
          },
          {
            "name": "Periode filter",
            "expression": "CONCATENATE(\"Periode : \",COMBINEVALUES(\"-\",SELECTEDVALUE(Kalender[KortMnd]),SELECTEDVALUE(Kalender[År])))",
            "lineageTag": "12e2d3a3-cb64-42c5-98f1-4eb22ec52c8a"
          }
        ],
        "partitions": [
          {
            "name": "Kalender",
            "mode": "import",
            "queryGroup": "Dimensjoner",
            "source": {
              "expression": [
                "let",
                "    Source = (SisteAar),",
                "    #\"Converted to Table\" = #table(1, {{Source}}),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Converted to Table\", \"Dato\", each List.Dates(#date(SisteAar-AntallAar, 1, 1),366*(AntallAar+1),#duration(1,0,0,0))),",
                "    #\"Expanded Dato\" = Table.ExpandListColumn(#\"Added Custom\", \"Dato\"),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Expanded Dato\",{\"Column1\"}),",
                "    Dato = Table.TransformColumnTypes(#\"Removed Columns\",{{\"Dato\", type date}}),",
                "    År = Table.AddColumn(Dato, \"År\", each Date.Year([Dato]), Int64.Type),",
                "    #\"Filtered Rows\" = Table.SelectRows(År, each [År] <= SisteAar),",
                "    MndNo = Table.AddColumn(#\"Filtered Rows\", \"MndNo\", each Date.Month([Dato]), Int64.Type),",
                "    Mnd = Table.AddColumn(MndNo, \"Mnd\", each Date.MonthName([Dato]), type text),",
                "    #\"Capitalized Each Word\" = Table.TransformColumns(Mnd,{{\"Mnd\", Text.Proper, type text}}),",
                "    KortMnd = Table.AddColumn(#\"Capitalized Each Word\", \"KortMnd\", each Text.Start([Mnd], 3), type text),",
                "    Kvartal = Table.AddColumn(KortMnd, \"Kvartal\", each \"Q\"&Text.From(Number.RoundUp( [MndNo] / 3 ) ), type text ),",
                "    Tertial = Table.AddColumn(Kvartal, \"Tertial\", each \"T\"&Text.From(Number.RoundUp( [MndNo] / 4 ) ), type text ),",
                "    TxYY = Table.AddColumn(Tertial, \"TxYY\", each [Tertial]&\"-\"&Text.End(Text.From([År]),2), type text),",
                "    YYYYMM = Table.AddColumn(TxYY, \"YYYYMM\", each [År]*100 + [MndNo], Int64.Type)",
                "in",
                "    YYYYMM"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Kontoplan",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "AccountId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "ec62a8ed-06b1-4862-8d5f-5e50a053f9d0",
            "sourceColumn": "AccountId",
            "summarizeBy": "count"
          },
          {
            "name": "AccountL0",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "1f433da0-520b-4af9-86ef-b9ca51937f3b",
            "sourceColumn": "AccountL0",
            "summarizeBy": "none"
          },
          {
            "name": "AccountL1",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e14d20aa-295d-4fcb-a979-bee4c8804256",
            "sourceColumn": "AccountL1",
            "summarizeBy": "none"
          },
          {
            "name": "Eliminering",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "71f20537-81a0-4b05-9f93-b34ffd9e4738",
            "sourceColumn": "Eliminering",
            "summarizeBy": "none"
          },
          {
            "name": "Fortegn",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "df6446b8-83ac-4813-9f2f-29209898bafa",
            "sourceColumn": "Fortegn",
            "summarizeBy": "sum"
          },
          {
            "name": "Konto",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "d41b6a68-ed56-4cce-8ae2-61f26224f053",
            "sourceColumn": "Konto",
            "summarizeBy": "sum"
          },
          {
            "name": "KontoBeskrivelse",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "692cf069-1b8c-47fa-8550-268fe7e3e50d",
            "sourceColumn": "KontoBeskrivelse",
            "summarizeBy": "none"
          },
          {
            "name": "KontoFilter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "1b4ad02f-9078-41c3-9a0b-f759c58d563b",
            "sourceColumn": "KontoFilter",
            "summarizeBy": "sum"
          },
          {
            "name": "KontoLnk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "fc00df99-f89a-4b92-aad0-fa96a3ed6563",
            "sourceColumn": "KontoLnk",
            "summarizeBy": "none"
          },
          {
            "name": "Kontonavn",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f872cf39-ecaf-42c2-8d79-072687070982",
            "sourceColumn": "Kontonavn",
            "summarizeBy": "none"
          },
          {
            "name": "N1Sort",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "15dbe17d-aa96-4696-9ab2-56d0d7e5ce1d",
            "sourceColumn": "N1Sort",
            "summarizeBy": "sum"
          },
          {
            "name": "N2Sort",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "f1d177d6-1644-4e01-ae9e-22c7b9286b95",
            "sourceColumn": "N2Sort",
            "summarizeBy": "sum"
          },
          {
            "name": "N3Sort",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "5808626c-5960-48d8-9af5-0964a6eef607",
            "sourceColumn": "N3Sort",
            "summarizeBy": "sum"
          },
          {
            "name": "Nivå1",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "fffd5d92-1a54-4477-9edf-b5be65cb84ea",
            "sourceColumn": "Nivå1",
            "summarizeBy": "none"
          },
          {
            "name": "Nivå2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a40c4bdd-52b3-4f4a-acb7-0fe7a95ba8e8",
            "sourceColumn": "Nivå2",
            "summarizeBy": "none"
          },
          {
            "name": "Nivå3",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e43d2859-bf8d-4da9-a5c5-1d764370755d",
            "sourceColumn": "Nivå3",
            "summarizeBy": "none"
          },
          {
            "name": "ProsjektGruppe",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "7a4b5c18-83b6-4c01-986f-1a234c75a9be",
            "sourceColumn": "ProsjektGruppe",
            "summarizeBy": "none"
          },
          {
            "name": "RappSort",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "5dd1580f-3fe2-463b-941d-7b71a2f22ce6",
            "sourceColumn": "RappSort",
            "summarizeBy": "sum"
          },
          {
            "name": "Rapport",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "523f0fd8-fa80-4f03-9c12-0815f139bb6b",
            "sourceColumn": "Rapport",
            "summarizeBy": "none"
          },
          {
            "name": "Side",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "80630e5b-38d9-464a-ba3f-e15a323748d8",
            "sourceColumn": "Side",
            "summarizeBy": "none"
          },
          {
            "name": "SideSort",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "eeed3afd-d59a-400f-8756-1df940a65f44",
            "sourceColumn": "SideSort",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "926b73ee-1e52-4fbb-bad6-ecc77d81c1bb",
        "partitions": [
          {
            "name": "Kontoplan",
            "mode": "import",
            "queryGroup": "Dimensjoner",
            "source": {
              "expression": [
                "let",
                "",
                "//Procedure",
                "",
                "    joinSharepointAndSql = Table.NestedJoin(SQL_ReportingCOA,{\"SelskapsId\"},SQL_Company,{\"Company\"},\"Companies\",JoinKind.Inner),",
                "    CompanyId = Table.ExpandTableColumn(joinSharepointAndSql, \"Companies\", {\"CompanyId\"}, {\"CompanyId\"}),",
                "    KontoLnk = Table.AddColumn(CompanyId, \"KontoLnk\", each Text.From([CompanyId])&\"-\"&Text.From([Konto]), type text),",
                "    RemoveColumns = Table.RemoveColumns(KontoLnk,{\"SelskapsId\", \"CompanyId\", \"TransferDate\"}),",
                "    AddAccountFilter = Table.AddColumn(RemoveColumns, \"KontoFilter\", each Number.From(Text.Start([Konto],1)), Int64.Type),",
                "    AddAccountDesc = Table.AddColumn(AddAccountFilter, \"KontoBeskrivelse\", each Text.From([Konto])&\" - \"&[Kontonavn]),",
                "    #\"Sorted Rows\" = Table.Sort(AddAccountDesc,{{\"Konto\", Order.Ascending}})",
                "in",
                "    #\"Sorted Rows\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "KundePoster",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Ar",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "137e602b-7e16-4e4c-b634-f2248a1b17f8",
            "sourceColumn": "Ar",
            "summarizeBy": "sum"
          },
          {
            "name": "Belop",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "8db93b55-c5c5-4fee-984c-ce013615ccd4",
            "sourceColumn": "Belop",
            "summarizeBy": "sum"
          },
          {
            "name": "BelopInnenlandsk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "10ea48d7-c202-44b7-ba1c-816b260b3ce5",
            "sourceColumn": "BelopInnenlandsk",
            "summarizeBy": "sum"
          },
          {
            "name": "Betalingsdato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "706ef585-84cb-487e-971f-cd7f43a718b9",
            "sourceColumn": "Betalingsdato",
            "summarizeBy": "none"
          },
          {
            "name": "Betalt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "491ff12d-fd30-45d8-891b-48685ce72b6e",
            "sourceColumn": "Betalt",
            "summarizeBy": "sum"
          },
          {
            "name": "BilagsDato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "d92abbae-7683-41c8-8492-0e4300348928",
            "sourceColumn": "BilagsDato",
            "summarizeBy": "none"
          },
          {
            "name": "BilagsNummer",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "DataType"
              }
            ],
            "dataType": "string",
            "lineageTag": "8f0ecb28-f73f-424d-bb87-1c7b8aa313b5",
            "sourceColumn": "BilagsNummer",
            "summarizeBy": "none"
          },
          {
            "name": "DatoSisteAvreg",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "475a5705-6431-4138-806b-ab591012dff8",
            "sourceColumn": "DatoSisteAvreg",
            "summarizeBy": "none"
          },
          {
            "name": "DaysOverdue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "5b3c3ae2-e3dd-4b8d-abdf-e7c80ea9d837",
            "sourceColumn": "DaysOverdue",
            "summarizeBy": "sum"
          },
          {
            "name": "DimensjonA",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "d9849cf6-629c-40b8-868e-48102130f1d7",
            "sourceColumn": "DimensjonA",
            "summarizeBy": "sum"
          },
          {
            "name": "DimensjonB",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "8b68cff4-1a86-4785-8084-5bd434152eba",
            "sourceColumn": "DimensjonB",
            "summarizeBy": "sum"
          },
          {
            "name": "FaktBelopNorsk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "f133e15a-4aeb-4264-81c4-bd4145e7620b",
            "sourceColumn": "FaktBelopNorsk",
            "summarizeBy": "sum"
          },
          {
            "name": "FaktBelopOrginal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "412a0972-975d-476d-a1d8-125f7ae6e7fd",
            "sourceColumn": "FaktBelopOrginal",
            "summarizeBy": "sum"
          },
          {
            "name": "ForfallsDato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "00a739e5-fd36-43bf-a821-062ffb3c76d8",
            "sourceColumn": "ForfallsDato",
            "summarizeBy": "none"
          },
          {
            "name": "Kredittid",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "083b49ea-0c45-4364-9733-cb92583e6d48",
            "sourceColumn": "Kredittid",
            "summarizeBy": "sum"
          },
          {
            "name": "NetOutstanding",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "dd835a09-f559-4164-bc68-68588880016d",
            "sourceColumn": "NetOutstanding",
            "summarizeBy": "sum"
          },
          {
            "name": "Periode",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "0e907df0-fa27-4144-b105-5839a58df95a",
            "sourceColumn": "Periode",
            "summarizeBy": "sum"
          },
          {
            "name": "ProsjektId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "21ffffe5-7da7-484a-a8e7-78829951026d",
            "sourceColumn": "ProsjektId",
            "summarizeBy": "none"
          },
          {
            "name": "ReskontroNummer",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "2e42300b-5516-4ca5-91a2-7bc90dd7c059",
            "sourceColumn": "ReskontroNummer",
            "summarizeBy": "none"
          },
          {
            "name": "RestBelopNorsk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "8fb0cfe2-b38a-4dbc-a142-9bd8fa5627a9",
            "sourceColumn": "RestBelopNorsk",
            "summarizeBy": "sum"
          },
          {
            "name": "RestBelopOrginal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "c21dbaad-87fd-4ea9-92fd-42b26703bf56",
            "sourceColumn": "RestBelopOrginal",
            "summarizeBy": "sum"
          },
          {
            "name": "Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "488fbf21-0451-4fbf-84cb-81ecc5490f21",
            "sourceColumn": "Status",
            "summarizeBy": "none"
          },
          {
            "name": "ValutaKode",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "b4fcb0a7-fbb1-42a3-a35d-67c12edd68a0",
            "sourceColumn": "ValutaKode",
            "summarizeBy": "none"
          },
          {
            "name": "ValutaKurs",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "400832e9-264b-4ee9-a5a5-46b8f4ecab16",
            "sourceColumn": "ValutaKurs",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "b07ece1d-549b-4690-8042-19a82e1daa3c",
        "partitions": [
          {
            "name": "KundePoster-adffa674-1bc5-44b8-ae7a-614c1be4861c",
            "mode": "import",
            "queryGroup": "WorkInProgress",
            "source": {
              "expression": [
                "let",
                "",
                "    Source = Sql.Database(SQLserver1, SQLdatabase1),",
                "    dbo_KundeReskontro = Source{[Schema=\"dbo\",Item=\"PostMotPostLogg\"]}[Data],",
                "    #\"Merged Queries3\" = Table.NestedJoin(dbo_KundeReskontro, {\"F_FIRMA\", \"ReskontroNummer\"}, SQL_Customers, {\"FirmaId\", \"KundeId\"}, \"SQL_Customers\", JoinKind.LeftOuter),",
                "    #\"Expanded SQL_Customers\" = Table.ExpandTableColumn(#\"Merged Queries3\", \"SQL_Customers\", {\"KundeId\"}, {\"KundeId\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded SQL_Customers\", each [KundeId] <> null),",
                "",
                "    ",
                "    Poster = Table.SelectRows(#\"Filtered Rows\", each ([DatoSisteAvreg] = null) and ([Belop] <> 0)),",
                "    #\"Merged Queries\" = Table.NestedJoin(Poster, {\"PostMotPostLog_ID\"}, KundePosterDoble, {\"PostMotPostLog_ID\"}, \"KundePosterDoble\", JoinKind.LeftAnti),",
                "    UnikeKPoster = Table.RemoveColumns(#\"Merged Queries\",{\"KundePosterDoble\"}),",
                "",
                "    FromPayments = Table.Group(KundeMotposter, {\"BilagsNummer\"}, {{\"Betalingsdato\", each List.Max([BilagsDato2]), type nullable datetime}, {\"Betalt\", each List.Sum([Belop]), type nullable number}}),",
                "    #\"Merged Queries1\" = Table.NestedJoin(UnikeKPoster, {\"BilagsNummer\"}, FromPayments, {\"BilagsNummer\"}, \"FromPayments\", JoinKind.LeftOuter),",
                "    #\"Expanded FromPayments\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"FromPayments\", {\"Betalingsdato\", \"Betalt\"}, {\"Betalingsdato\", \"Betalt\"}),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Expanded FromPayments\", \"Status\", each if [Belop] = -[Betalt] then \"Oppgjort\" else \"Utestående\", type text),",
                "    #\"Added Custom1\" = Table.AddColumn(#\"Added Custom\", \"Kredittid\", each if [Status] = \"Oppgjort\" then Number.From([Betalingsdato])-Number.From([BilagsDato])+1 else Number.From(Date.From (DateTime.LocalNow())) - Number.From([BilagsDato]) + 1, Int64.Type),",
                "    #\"Added Custom2\" = Table.AddColumn(#\"Added Custom1\", \"DaysOverdue\", each if [Status] = \"Utestående\" then if [ForfallsDato] <> null then if Date.From(DateTime.LocalNow())>Date.From([ForfallsDato]) then Number.From(Date.From((DateTime.LocalNow())))-Number.From(Date.From([ForfallsDato])) else null else Number.From(Date.From((DateTime.LocalNow())))-Number.From(Date.From([BilagsDato])) else null),",
                "    #\"Added Custom3\" = Table.AddColumn(#\"Added Custom2\", \"NetOutstanding\", each if [Status] = \"Utestående\" then [Belop] + ( if [Betalt] = null then 0 else [Betalt] ) else null, type number),",
                "    #\"Merged Queries2\" = Table.NestedJoin(#\"Added Custom3\", {\"BilagsNummer\"}, BilagProsjektLink, {\"BilagsNummer\"}, \"Kunder (2)\", JoinKind.LeftOuter),",
                "    #\"Expanded Kunder (2)\" = Table.ExpandTableColumn(#\"Merged Queries2\", \"Kunder (2)\", {\"ProsjektId\"}, {\"ProsjektId\"}),",
                "    #\"Removed Other Columns\" = Table.SelectColumns(#\"Expanded Kunder (2)\",{\"ReskontroNummer\", \"BilagsDato\", \"BilagsNummer\", \"ValutaKode\", \"ValutaKurs\", \"FaktBelopOrginal\", \"FaktBelopNorsk\", \"RestBelopOrginal\", \"RestBelopNorsk\", \"DatoSisteAvreg\", \"ForfallsDato\", \"DimensjonA\", \"DimensjonB\", \"Ar\", \"Periode\", \"Belop\", \"BelopInnenlandsk\", \"Betalingsdato\", \"Betalt\", \"Status\", \"Kredittid\", \"DaysOverdue\", \"NetOutstanding\", \"ProsjektId\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Other Columns\",{{\"ForfallsDato\", type date}, {\"DatoSisteAvreg\", type date}, {\"BilagsDato\", type date}, {\"Betalingsdato\", type date}, {\"DaysOverdue\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Kunder",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "IC Kunder",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "boolean",
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\"",
            "lineageTag": "2d592f60-ac13-407f-86d8-743580492c08",
            "sourceColumn": "IC Kunder",
            "summarizeBy": "none"
          },
          {
            "name": "Kunde",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "797a1986-71a2-4fd0-a362-2b64acf7b4ad",
            "sourceColumn": "Kunde",
            "summarizeBy": "none"
          },
          {
            "name": "KundeId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "455e3bc7-1bf0-43f6-9e5c-ba8f417843f4",
            "sourceColumn": "KundeId",
            "summarizeBy": "none"
          },
          {
            "name": "KundeLnk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "02f22fd0-1f17-4617-a02b-dec8c83c6333",
            "sourceColumn": "KundeLnk",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "73ca1be3-7b76-4d6f-8d96-31fc0706d1e4",
        "partitions": [
          {
            "name": "Kunder-64b9bc3e-fe2f-4c2a-95db-7fd38cb258bf",
            "mode": "import",
            "queryGroup": "Dimensjoner",
            "source": {
              "expression": [
                "let",
                "",
                "/*",
                "//SharePoint",
                "",
                "    SharePoint = SharePoint.Tables(SharePointSite1, [ApiVersion = 15]),",
                "    CompanyTbl = SharePoint{[Id=\"c6c05096-82a1-486e-af74-d9aca84f2740\"]}[Items],",
                "    SelectColumns = Table.RemoveColumns(CompanyTbl,{\"FileSystemObjectType\", \"Id\", \"ServerRedirectedEmbedUri\", \"ServerRedirectedEmbedUrl\", \"ContentTypeId\", \"ComplianceAssetId\", \"Modified\", \"Created\", \"AuthorId\", \"EditorId\", \"OData__UIVersionString\", \"Attachments\", \"GUID\", \"FirstUniqueAncestorSecurableObject\", \"RoleAssignments\", \"Activities\", \"AttachmentFiles\", \"ContentType\", \"GetDlpPolicyTip\", \"FieldValuesAsHtml\", \"FieldValuesAsText\", \"FieldValuesForEdit\", \"File\", \"Folder\", \"LikedByInformation\", \"ParentList\", \"Properties\", \"Versions\", \"Author\", \"Editor\", \"ID\"}),",
                "    RenameColumns = Table.RenameColumns(SelectColumns,{{\"Title\", \"Company\"}}),",
                "    Company = Table.SelectRows(RenameColumns, each [Company] = companyId),",
                "",
                "//SQL",
                "",
                "    table1 = \"Kunder\",",
                "    sqlDatabase = Sql.Database(SQLserver1, SQLdatabase1),",
                "    sqlTbl1 = sqlDatabase{[Schema=\"dbo\",Item=(table1)]}[Data],",
                "*/",
                "",
                "//Procedure",
                "    #\"Merged Queries\" = Table.NestedJoin(SQL_Customers,{\"FirmaId\"},SQL_Company,{\"InfoEasyId\"},\"Temp\",JoinKind.Inner),",
                "    #\"Expanded Temp\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Temp\", {\"CompanyId\"}, {\"CompanyId\"}),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Expanded Temp\", \"Custom\", each if Text.Length(Text.From([KundeId])) = 0 then null else Text.From([CompanyId])&\"-\"&Text.From([KundeId])),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Added Custom\",{\"FirmaId\", \"KundeLnk\", \"CompanyId\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns1\",{{\"Custom\", \"KundeLnk\"}}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Renamed Columns\",null,\"\",Replacer.ReplaceValue,{\"Kunde\"}),",
                "    #\"Duplicated Column\" = Table.DuplicateColumn(#\"Replaced Value\", \"Kunde\", \"Kunde - Copy\"),",
                "    #\"Uppercased Text\" = Table.TransformColumns(#\"Duplicated Column\",{{\"Kunde - Copy\", Text.Upper, type text}}),",
                "    #\"Added Conditional Column\" = Table.AddColumn(#\"Uppercased Text\", \"IC Kunder\", each if Text.Contains([#\"Kunde - Copy\"], \"HALLMAKER\") then 1 else if Text.Contains([#\"Kunde - Copy\"], \"RUBB\") then 1 else 0),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Added Conditional Column\",{\"Kunde - Copy\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Removed Columns\",{{\"KundeId\", Int64.Type}, {\"Kunde\", type text}, {\"KundeLnk\", type text}, {\"IC Kunder\", type logical}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Leverandører",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Land",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "061cb071-630d-4062-9d22-3d365d828f5a",
            "sourceColumn": "Land",
            "summarizeBy": "none"
          },
          {
            "name": "LevId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "c317f44b-ff34-41a3-ba29-9d18960ffae8",
            "sourceColumn": "LevId",
            "summarizeBy": "none"
          },
          {
            "name": "LevLnk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "db612218-2491-4768-83fa-d5c56c5b2f77",
            "sourceColumn": "LevLnk",
            "summarizeBy": "none"
          },
          {
            "name": "Leverandor",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "45f0db6e-b86c-4527-840f-451884b24d82",
            "sourceColumn": "Leverandor",
            "summarizeBy": "none"
          },
          {
            "name": "LeverandorBeskrivelse",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "6f8391de-5d03-49f1-b000-9f8e778e63f4",
            "sourceColumn": "LeverandorBeskrivelse",
            "summarizeBy": "none"
          },
          {
            "name": "PostStedNummer",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "18c84cc8-b1c6-4604-aa51-805dde94afc7",
            "sourceColumn": "PostStedNummer",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "9a11d8c5-74c6-4681-a87b-f67874cd0920",
        "partitions": [
          {
            "name": "Leverandører-1f2ab0a9-b9e9-4ad6-82b2-2651f4e7720b",
            "mode": "import",
            "queryGroup": "Dimensjoner",
            "source": {
              "expression": [
                "let",
                "   ",
                "",
                "//Procedure",
                "",
                "    #\"Merged Queries\" = Table.NestedJoin(SQL_Suppliers,{\"FirmaId\"},SQL_Company,{\"InfoEasyId\"},\"Temp\",JoinKind.Inner),",
                "    #\"Expanded Temp\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Temp\", {\"CompanyId\"}, {\"CompanyId\"}),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Expanded Temp\", \"Custom\", each if Text.Length(Text.From([LevId])) = 0 then null else Text.From([CompanyId])&\"-\"&Text.From([LevId])),",
                "    #\"Added Custom1\" = Table.AddColumn(#\"Added Custom\", \"LeverandorBeskrivelse\", each if Text.Length(Text.From([LevId])) = 0 then null else Text.From([LevId])&\" - \"&Text.From([Leverandor])),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(#\"Added Custom1\",{\"FirmaId\", \"LevLnk\", \"CompanyId\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns1\",{{\"Custom\", \"LevLnk\"}})",
                "",
                "in",
                "    #\"Renamed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "LiveProjectForecast",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Cost",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "f04bc99c-f2f9-43f5-80b7-ae5c6b5ce744",
            "sourceColumn": "Cost",
            "sourceProviderType": "float",
            "summarizeBy": "sum"
          },
          {
            "name": "NickName",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "d7bbb503-6fd8-4563-a5b3-b367c38c819f",
            "sourceColumn": "NickName",
            "sourceProviderType": "varchar(50)",
            "summarizeBy": "none"
          },
          {
            "name": "ProjectId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "isNullable": false,
            "lineageTag": "6df1c6fc-01b2-4bc0-93a9-a9698bc06a8b",
            "sourceColumn": "ProjectId",
            "sourceProviderType": "bigint",
            "summarizeBy": "none"
          },
          {
            "name": "ProjectManagerId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "82915c4d-f075-4c87-b8ed-65b10c1a805d",
            "sourceColumn": "ProjectManagerId",
            "sourceProviderType": "bigint",
            "summarizeBy": "count"
          },
          {
            "name": "Revenue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "e29bccc7-b66c-403c-b51f-1f14d101f786",
            "sourceColumn": "Revenue",
            "sourceProviderType": "float",
            "summarizeBy": "sum"
          },
          {
            "name": "Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "065b708c-72cf-4853-aee9-8fa8816aa686",
            "sourceColumn": "Status",
            "sourceProviderType": "varchar(1)",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "04922191-2826-4211-acd9-37f7e65051d1",
        "measures": [
          {
            "name": "LiveStage",
            "expression": "CONCATENATE(IF(HASONEVALUE(Prosjekt[HP Beskrivelse]),MAX(LiveProjectForecast[Status]),BLANK()),BLANK())",
            "lineageTag": "9c1a55c4-04e0-4d40-996a-dc6ccf53f30b"
          },
          {
            "name": "RevenueForecastLive",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "SUM(LiveProjectForecast[Revenue])",
            "formatString": "#,0",
            "lineageTag": "abc4ce85-025e-48d8-bda9-137208f5ac0c"
          },
          {
            "name": "CostForecastLive",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "SUM(LiveProjectForecast[Cost])",
            "formatString": "#,0",
            "lineageTag": "3eb54b59-dff0-4533-b470-30a094f84c76"
          },
          {
            "name": "Justert",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "ABS([Inntektsprognose]-[RevenueForecastLive])+ABS([Kostnadsprognose]-[CostForecastLive])",
            "lineageTag": "d311d017-593d-447d-b2f9-aa3bcb86edd5"
          },
          {
            "name": "RevenueForecastAdj",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "IF([Justert]>0,[RevenueForecastLive],\" \")",
            "formatString": "#,0",
            "lineageTag": "ffa8a77a-a62b-4647-a3a0-058824dedc29"
          },
          {
            "name": "CostForecastAdj",
            "expression": "IF([Justert]>0,[CostForecastLive],\" \")",
            "lineageTag": "b6e9571e-124e-4777-8d97-1e4d0aa51c5d"
          },
          {
            "name": "GrossContributionForecastAdj",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "IF([Justert]>0,[RevenueForecastLive]-[CostForecastLive],\" \")",
            "formatString": "#,0",
            "lineageTag": "59d9ee4e-aef6-4895-9458-15fd4782042a"
          },
          {
            "name": "GrossMarginForecastAdj",
            "expression": "IF([Justert]>0,DIVIDE([GrossContributionForecastAdj],[RevenueForecastAdj]),\" \")",
            "formatString": "0.0\\ %;-0.0\\ %;0.0\\ %",
            "lineageTag": "a18ff142-3df0-4d8c-9181-5cea4b981c16"
          },
          {
            "name": "CostAdj",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[CostForecastLive]-[Kostnadsprognose]",
            "formatString": "#,0",
            "lineageTag": "1518fe9a-8570-46e4-9c93-4d6833b3023f"
          }
        ],
        "partitions": [
          {
            "name": "LiveProjectForecast-6b5691de-b6d2-4b19-9467-4a99b687452c",
            "mode": "directQuery",
            "queryGroup": "DirectQ",
            "source": {
              "expression": [
                "let",
                "    Source = Sql.Database(\"a2insight.database.windows.net\", \"a2dmHallmaker\"),",
                "    dbo_LU_Projects = Source{[Schema=\"dbo\",Item=\"LU_Projects\"]}[Data],",
                "    dbo_LU_ProjectMgrs = Source{[Schema=\"dbo\",Item=\"LU_ProjectMgrs\"]}[Data],",
                "    dbo_FA_ProjectForecastChanges = Source{[Schema=\"dbo\",Item=\"FA_ProjectForecastChanges\"]}[Data],",
                "",
                "    #\"Merged Queries\" = Table.NestedJoin(dbo_LU_Projects,{\"ProjectManagerId\"},dbo_LU_ProjectMgrs,{\"ProjectMgrId\"},\"dbo_LU_ProjectMgrs\",JoinKind.LeftOuter),",
                "    #\"Expanded dbo_LU_ProjectMgrs\" = Table.ExpandTableColumn(#\"Merged Queries\", \"dbo_LU_ProjectMgrs\", {\"NickName\"}, {\"NickName\"}),",
                "    #\"Grouped Rows\" = Table.Group(dbo_FA_ProjectForecastChanges, {\"ProjectId\"}, {{\"Revenue\", each List.Sum([Revenue]), type number}, {\"Cost\", each List.Sum([Cost]), type number}}),",
                "    #\"Merged Queries1\" = Table.NestedJoin(#\"Expanded dbo_LU_ProjectMgrs\",{\"ProjectId\"},#\"Grouped Rows\",{\"ProjectId\"},\"Grouped Rows\",JoinKind.LeftOuter),",
                "    #\"Expanded Grouped Rows\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"Grouped Rows\", {\"Revenue\", \"Cost\"}, {\"Revenue\", \"Cost\"}),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Expanded Grouped Rows\", each ([CompanyId] = 3)),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Filtered Rows\",{\"ProjectNo\", \"Project\", \"ParentProjectNo\", \"PlanStart\", \"PlanFinish\", \"ActualStart\", \"ActualFinish\", \"SalesmenId\", \"ProjectCateoryId\", \"CustomerId\", \"DepartmentId\", \"CompanyId\", \"ProjectRef\"})",
                "in",
                "    #\"Removed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "NyeKontoer",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "KontoBeskrivelse",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "5b67920e-d829-413e-9c13-f8948261d466",
            "sourceColumn": "KontoBeskrivelse",
            "summarizeBy": "none"
          },
          {
            "name": "KontoLnk1",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "f91e30fb-786b-427a-92c9-c1a9cbfe5844",
            "sourceColumn": "KontoLnk1",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "b3f873ef-b1e5-473b-bc19-a0cd75d6926c",
        "partitions": [
          {
            "name": "NyeKontoer-24a616d6-9528-4b96-b60b-0f8888837c79",
            "mode": "import",
            "queryGroup": "Hjelpetabeller",
            "source": {
              "expression": [
                "let",
                "",
                "",
                "    SelskapsKontoplan = Table.NestedJoin(SQL_ChartOfAccounts,{\"FirmaId\"},SQL_Company,{\"InfoEasyId\"},\"sqlTbl2\",JoinKind.Inner),",
                "    #\"Expanded sqlTbl2\" = Table.ExpandTableColumn(SelskapsKontoplan, \"sqlTbl2\", {\"Company\", \"CompanyId\"}, {\"Company\", \"CompanyId\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Expanded sqlTbl2\",{{\"KontoId\", type text}, {\"Company\", type text}}),",
                "    Source1 = Table.NestedJoin(#\"Changed Type\",{\"Company\",\"KontoId\"},SQL_ReportingCOA,{\"SelskapsId\",\"Konto\"},\"Kontoplan\",JoinKind.LeftAnti),",
                "    #\"Added Custom\" = Table.AddColumn(Source1, \"KontoLnk1\", each Text.From([CompanyId])&\"-\"&Text.From([KontoId])),",
                "    #\"Added Custom1\" = Table.AddColumn(#\"Added Custom\", \"KontoBeskrivelse\", each Text.From([KontoId])&\" - \"&Text.From([Konto])),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Added Custom1\",{\"FirmaId\", \"Type\", \"KontoLnk\", \"Company\", \"CompanyId\", \"Kontoplan\", \"KontoId\", \"Konto\"})",
                "",
                "in",
                "    #\"Removed Columns\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "OrdreKPI",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ],
        "columns": [
          {
            "name": "OrdreKPI",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "667537f5-04e2-4175-bb04-3ef32929a3bb",
            "sourceColumn": "OrdreKPI",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "78fe2eec-e6dc-4ddf-bf7e-136f1c914cef",
        "measures": [
          {
            "name": "InntektsGap",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[InntektBudYT]-[InntektTY]-[orTY]",
            "formatString": "#,0",
            "lineageTag": "e584d7ee-083d-49c0-9528-be31013c3a14"
          },
          {
            "name": "InntektBudYT",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CALCULATE([Budsjett YT],Kontoplan[Nivå1]=\"Inntekter\") ",
            "formatString": "#,0",
            "lineageTag": "a290b747-7469-4bf2-a37d-a319d79b8d13"
          },
          {
            "name": "Salg",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "-SUM(Ordreinngang[Inntekter]) / MIN ( Faktorer[Faktor] )",
            "formatString": "#,0",
            "lineageTag": "b33481c4-4b5e-4aaa-9abc-4b50ec3b1ac1"
          },
          {
            "name": "SalgYTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "TOTALYTD([Salg],Kalender[Dato])",
            "formatString": "#,0",
            "lineageTag": "4e5b7656-6a64-4b87-be4e-c490f477502e"
          },
          {
            "name": "OrdreVekst",
            "expression": "-SUM(ProPrognose[RevenueChange])",
            "formatString": "0",
            "lineageTag": "6578eeb6-b4fd-4038-9c08-d5d76fa1048a"
          },
          {
            "name": "OrdreVekstYTD",
            "expression": "TOTALYTD([OrdreVekst],Kalender[Dato])",
            "formatString": "#,0",
            "lineageTag": "fb16668b-e95e-4486-b617-c78c1b98878c"
          },
          {
            "name": "orTY",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "SUMX(VALUES(Prosjekt[HP Beskrivelse]),CALCULATE(IF(YEAR(MAX(HpPrognose[Slutt]))<=YEAR(MAX(Kalender[Dato])),[Ordrereserve],[Ordrereserve]*(1-DIVIDE(MAX(HpPrognose[Slutt])-DATE(YEAR(MAX(Kalender[Dato])),12,31),SUM(HpPrognose[Varighet]))))))",
            "formatString": "#,0",
            "lineageTag": "8ccf1467-d5ac-42ae-b18c-ddbab474cddd"
          },
          {
            "name": "Ordrereserve",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[ProInntektEst]-[ProInntektTD]",
            "formatString": "#,0",
            "lineageTag": "145fe776-5f50-48c2-b258-b37aed63e683"
          },
          {
            "name": "Ordreinngang",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[SalgYTD]+[OrdreVekstYTD]",
            "lineageTag": "b2186c1c-2c85-4d55-8f36-a2737801ad38"
          },
          {
            "name": "PrognoseOrdre",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[ProInntektYTD]+[orTY]",
            "formatString": "#,0",
            "lineageTag": "abd3d53d-d53c-4415-ae4e-a627af128977"
          },
          {
            "name": "ProsjektInntektYTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[FakturertHIÅ] + [VIAendringYtd]",
            "lineageTag": "f1df94d7-a3af-4a3b-9769-39d9bf38d8eb"
          },
          {
            "name": "TotalInntektYTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE(-[RegnskapAkk],KR_Resultat[Nivå1]=\"Inntekter\")",
            "lineageTag": "e438737a-28f1-4d30-8d72-84047dd536ee"
          },
          {
            "name": "SalgEtterPeriode",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CALCULATE([Salg],ALL(Kalender[KortMnd]))-[SalgYTD]",
            "formatString": "#,0",
            "lineageTag": "a2ec1e65-ec00-4675-bed3-2a652a611cb4"
          },
          {
            "name": "TotalBidragYTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CALCULATE(-[RegnskapAkk],KR_Resultat[Rekkefølge]<4) ",
            "formatString": "#,0",
            "lineageTag": "1ce771d5-ce87-4fc8-9fd7-04783482178d"
          },
          {
            "name": "OrdrereserveAll",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[Ordrereserve]+[SalgEtterPeriode]",
            "lineageTag": "f739e522-4c57-4fd6-a0b6-4c5101e743c1"
          },
          {
            "name": "OrdreinngangYT",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[Ordreinngang]+[SalgEtterPeriode]",
            "lineageTag": "c10fb821-cf8d-43c8-8b46-c3db61dfa5e7"
          }
        ],
        "partitions": [
          {
            "name": "OrdreKPI-1b0098d6-068a-45c5-b80a-7880d8e6f2c5",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = \"\"",
                "in",
                "    Source"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Ordreinngang",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "columns": [
          {
            "name": "Company",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9d6edbf3-6ecf-4b59-9ec9-156a294ea4dd",
            "sourceColumn": "Company",
            "summarizeBy": "none"
          },
          {
            "name": "CompanyId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "b6e001b4-0c15-476e-b176-7edffc8909d5",
            "sourceColumn": "CompanyId",
            "summarizeBy": "none"
          },
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "d9f1a828-1ffe-4832-835a-4caba249363c",
            "sourceColumn": "Date",
            "summarizeBy": "none"
          },
          {
            "name": "Description",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "2a109ccd-819a-41a2-b789-c2a58cf32a29",
            "sourceColumn": "Description",
            "summarizeBy": "none"
          },
          {
            "name": "Duration",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "8f764551-753d-4fff-829f-c904a5768472",
            "sourceColumn": "Duration",
            "summarizeBy": "none"
          },
          {
            "name": "FerdigDato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "3c72070d-d569-4aaa-94b7-1c3b3c884925",
            "sourceColumn": "FerdigDato",
            "summarizeBy": "none"
          },
          {
            "name": "Hovedarbeidsprosjekt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "db1e2f8d-7046-4be1-9426-1d00a4070ceb",
            "sourceColumn": "Hovedarbeidsprosjekt",
            "summarizeBy": "none"
          },
          {
            "name": "Inntekter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "int64",
            "lineageTag": "0e2036cf-5f6d-4047-aef5-b319eac596ab",
            "sourceColumn": "Inntekter",
            "summarizeBy": "sum"
          },
          {
            "name": "Kostnader",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "569ed7f1-8be9-4092-b634-3d2377d9eb7f",
            "sourceColumn": "Kostnader",
            "summarizeBy": "sum"
          },
          {
            "name": "ProsjektId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "197c80a8-4474-403c-9963-55d502f4f91a",
            "sourceColumn": "ProsjektId",
            "summarizeBy": "count"
          },
          {
            "name": "ProsjektLnk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "28cde34f-3fa8-4f54-b72e-2ef19888b3c4",
            "sourceColumn": "ProsjektLnk",
            "summarizeBy": "none"
          },
          {
            "name": "StartDato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "bcf4ddbc-8cef-40a9-8711-e2aa40df477b",
            "sourceColumn": "StartDato",
            "summarizeBy": "none"
          },
          {
            "name": "Version",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "49c5f948-c704-49a9-b28f-e2550b113e4b",
            "sourceColumn": "Version",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "82ad1a4e-1fda-4a47-989f-31ac7686c98e",
        "partitions": [
          {
            "name": "Ordreinngang-82916fd4-1ded-4175-81c3-da18ba8cbf02",
            "mode": "import",
            "queryGroup": "Fakta",
            "source": {
              "expression": [
                "let",
                "    Source = Table.NestedJoin(SQL_Company,{\"InfoEasyId\"},SQL_Projects,{\"FirmaId\"},\"Added Custom3\",JoinKind.Inner),",
                "    #\"Expanded Added Custom3\" = Table.ExpandTableColumn(Source, \"Added Custom3\", {\"ProsjektId\", \"StartDato\", \"PlanFerdigDato\", \"OrdreVerdi\", \"DG\", \"OrdreDato\", \"HovedArbeidProsjektNr\"}, {\"ProsjektId\", \"StartDato\", \"PlanFerdigDato\", \"OrdreVerdi\", \"DG\", \"OrdreDato\", \"HovedArbeidProsjektNr\"}),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Expanded Added Custom3\", \"FilterHP\", each if [ProsjektId]=[HovedArbeidProsjektNr] then 1 else 0),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Added Custom\", each ([FilterHP] = 1) and ([OrdreDato] <> null) and ([OrdreVerdi] > 0)),",
                "    #\"Added Custom1\" = Table.AddColumn(#\"Filtered Rows\", \"ProsjektLnk\", each Text.From([CompanyId])&\"-\"&Text.From([ProsjektId])),",
                "    #\"Added Custom2\" = Table.AddColumn(#\"Added Custom1\", \"Kostnader\", each [OrdreVerdi]*(1-[DG])),",
                "    #\"Added Custom3\" = Table.AddColumn(#\"Added Custom2\", \"Version\", each \"Sales\"),",
                "    #\"Added Custom4\" = Table.AddColumn(#\"Added Custom3\", \"Duration\", each Number.From([PlanFerdigDato])-Number.From([StartDato])+1),",
                "    #\"Multiplied Column\" = Table.TransformColumns(#\"Added Custom4\", {{\"OrdreVerdi\", each _ * -1, type number}}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Multiplied Column\",{\"FilterHP\", \"InfoEasyId\", \"DG\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"OrdreDato\", \"Date\"}, {\"OrdreVerdi\", \"Inntekter\"}, {\"HovedArbeidProsjektNr\", \"Hovedarbeidsprosjekt\"}, {\"PlanFerdigDato\", \"FerdigDato\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"Company\", type text}, {\"CompanyId\", Int64.Type}, {\"ProsjektId\", Int64.Type}, {\"Date\", type date}, {\"Inntekter\", Int64.Type}, {\"ProsjektLnk\", type text}, {\"Kostnader\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "ProPrognose",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "CompanyId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "1e81593b-834a-4b92-9499-9377030e8b8b",
            "sourceColumn": "CompanyId",
            "summarizeBy": "none"
          },
          {
            "name": "CostChange",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "c7aa1efa-4aa0-43e5-ae6a-e713b16c5fb2",
            "sourceColumn": "CostChange",
            "summarizeBy": "sum"
          },
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "fdbeb662-d06b-4a5f-adde-6a3ac361ce58",
            "sourceColumn": "Date",
            "summarizeBy": "none"
          },
          {
            "name": "Description",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "50551d46-e18a-4944-a050-73ad9904c252",
            "sourceColumn": "Description",
            "summarizeBy": "none"
          },
          {
            "name": "Duration",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "9281a263-a098-4dc7-8147-cd34c8ec9bfa",
            "sourceColumn": "Duration",
            "summarizeBy": "none"
          },
          {
            "name": "FerdigDato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "b5b561dc-8b27-4512-9828-607ac6090834",
            "sourceColumn": "FerdigDato",
            "summarizeBy": "none"
          },
          {
            "name": "Hovedarbeidsprosjekt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c2587712-f831-48b3-996d-a1f26755d3cd",
            "sourceColumn": "Hovedarbeidsprosjekt",
            "summarizeBy": "none"
          },
          {
            "name": "PlanSlutt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "3634d767-5c0d-4d82-9a7e-77f1ba6f4e77",
            "sourceColumn": "PlanSlutt",
            "summarizeBy": "none"
          },
          {
            "name": "PlanStart",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "909d4f95-61f8-436a-853f-818ec4aae094",
            "sourceColumn": "PlanStart",
            "summarizeBy": "none"
          },
          {
            "name": "ProsjektLnk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "54147348-bd9e-402e-ad5a-9c80f4952673",
            "sourceColumn": "ProsjektLnk",
            "summarizeBy": "none"
          },
          {
            "name": "RevenueChange",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "52adf99d-b491-4385-b31e-8d44cc13d7fe",
            "sourceColumn": "RevenueChange",
            "summarizeBy": "sum"
          },
          {
            "name": "StartDato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "7385cca3-f7db-46bb-a16d-d995c5c430ba",
            "sourceColumn": "StartDato",
            "summarizeBy": "none"
          },
          {
            "name": "Type",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "48b6c05f-e263-4521-92eb-a77ed1f40d35",
            "sourceColumn": "Type",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "6be9a7cd-f2b6-4c5e-b8a1-758e18a1c069",
        "measures": [
          {
            "name": "MaxDate",
            "expression": "CLOSINGBALANCEMONTH(MAX(ProPrognose[PlanSlutt]),Kalender[Dato])",
            "formatString": "General Date",
            "lineageTag": "1d78ff4c-2000-42f9-8841-1d9f36bafd8f"
          }
        ],
        "partitions": [
          {
            "name": "ProPrognose-af242314-e067-49ba-bed4-bc7dc85957bf",
            "mode": "import",
            "queryGroup": "Fakta",
            "source": {
              "expression": [
                "let",
                "//Per",
                "    #\"_1Merged Queries1\" = Table.NestedJoin(SQL_Forecast,{\"Company\"},SQL_Company,{\"Company\"},\"Added Custom3\",JoinKind.Inner),",
                "    #\"_Expanded Added Custom3\" = Table.ExpandTableColumn(#\"_1Merged Queries1\", \"Added Custom3\", {\"CompanyId\"}, {\"CompanyId\"}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"_Expanded Added Custom3\",{{\"Date\", type date}}),",
                "    #\"Appended Query\" = Table.Combine({#\"Changed Type\", Ordreinngang}),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Appended Query\",{\"ProsjektLnk\"}),",
                "",
                "    #\"_Changed Type\" = Table.TransformColumnTypes(#\"Removed Columns\",{{\"Date\", type date}, {\"ProsjektId\", type text}}),",
                "    Custom1 = Table.AddColumn(#\"_Changed Type\", \"SortSales\", each if [Version] = \"Sales\" then 0 else 1),",
                "    #\"Renamed Columns\" = Table.RenameColumns(Custom1,{{\"Inntekter\", \"RevenueChange\"}, {\"Kostnader\", \"CostChange\"}}),",
                "#\"_Added Custom2\" = Table.AddColumn(#\"Renamed Columns\", \"Filter\", each [RevenueChange]*[RevenueChange]+[CostChange]*[CostChange]),",
                "    #\"_1Added Custom4\" = Table.AddColumn(#\"_Added Custom2\", \"ProsjektLnk\", each Text.From([CompanyId])&\"-\"&Text.From([ProsjektId])),",
                "    #\"_Filtered Rows\" = Table.SelectRows(#\"_1Added Custom4\", each ([Filter] <> 0)),",
                "    #\"_1Removed Columns1\" = Table.RemoveColumns(#\"_Filtered Rows\",{\"Filter\", \"Company\", \"ProsjektId\", \"Version\", \"SortSales\"}),",
                "    #\"Changed Type1\" = Table.TransformColumnTypes(#\"_1Removed Columns1\",{{\"Date\", type date}, {\"CompanyId\", Int64.Type}, {\"RevenueChange\", type number}, {\"CostChange\", type number}, {\"ProsjektLnk\", type text}, {\"PlanStart\", type date}, {\"PlanSlutt\", type date}}),",
                "    #\"Inserted Day\" = Table.AddColumn(#\"Changed Type1\", \"Type\", each if Date.Day([Date]) = 1 then \"Kalkyle\" else \"Prognose\", type text)",
                "in",
                "    #\"Inserted Day\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "ProjectForecast",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "columns": [
          {
            "name": "Cost",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "cdd9aa49-7c0a-492e-a30b-8d0f897d877a",
            "sourceColumn": "Cost",
            "summarizeBy": "sum"
          },
          {
            "name": "CostAcc",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "cd50b644-625f-44c6-9682-b3134e17bb81",
            "sourceColumn": "CostAcc",
            "summarizeBy": "sum"
          },
          {
            "name": "Date",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "8ab73239-4eff-4a02-a7e6-1877a4276cc3",
            "sourceColumn": "Date",
            "summarizeBy": "none"
          },
          {
            "name": "Hovedarbeidsprosjekt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "d5081b6e-3829-4185-b19d-c40fb540f65f",
            "sourceColumn": "Hovedarbeidsprosjekt",
            "summarizeBy": "none"
          },
          {
            "name": "Revenue",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "fafe60eb-f6fd-4220-96a6-2668fda1901d",
            "sourceColumn": "Revenue",
            "summarizeBy": "sum"
          },
          {
            "name": "RevenueAcc",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "cf5346eb-3d77-43c2-9a1b-19271f214f49",
            "sourceColumn": "RevenueAcc",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "d3d61147-858f-462e-85f0-bce37dbfc8d0",
        "partitions": [
          {
            "name": "ProjectForecast-8fcff79f-c7b4-4a4f-8ac3-cdbff06097bd",
            "mode": "import",
            "queryGroup": "WorkInProgress",
            "source": {
              "expression": [
                "let",
                "    Source = Table.Combine({ProjectRevenueForecast, ProjectCostForecast}),",
                "    #\"Grouped Rows\" = Table.Group(Source, {\"Hovedarbeidsprosjekt\", \"Date\"}, {{\"Revenue\", each List.Sum([Revenue]), type number}, {\"RevenueAcc\", each List.Sum([RevenueAcc]), type number}, {\"Cost\", each List.Sum([Cost]), type number}, {\"CostAcc\", each List.Sum([CostAcc]), type number}})",
                "in",
                "    #\"Grouped Rows\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Prosjekt",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "columns": [
          {
            "name": "Adresse",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "1d4fb448-30b1-4d32-8d7b-93b15b7f5906",
            "sourceColumn": "Adresse",
            "summarizeBy": "none"
          },
          {
            "name": "Avdeling",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "64447e06-1d1e-4f94-a9fe-3c40073ee306",
            "sourceColumn": "Avdeling",
            "summarizeBy": "sum"
          },
          {
            "name": "CompanyId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "ca939531-bc5d-4ea6-ae66-a611b00352cc",
            "sourceColumn": "CompanyId",
            "summarizeBy": "count"
          },
          {
            "name": "DG",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "591fe7ea-c9a5-4544-86ca-3294bb8e433c",
            "sourceColumn": "DG",
            "summarizeBy": "sum"
          },
          {
            "name": "DP Beskrivelse",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "4d7bf242-3c93-401b-8ffd-0546be393334",
            "sourceColumn": "DP Beskrivelse",
            "summarizeBy": "none"
          },
          {
            "name": "Delprosjekt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "af2e261a-5b2b-4ea8-bc08-34ed28924685",
            "sourceColumn": "Delprosjekt",
            "summarizeBy": "none"
          },
          {
            "name": "DelprosjektNummer",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "139d4a7b-8ca4-447d-9da5-ecfe68906854",
            "sourceColumn": "DelprosjektNummer",
            "summarizeBy": "none"
          },
          {
            "name": "FerdigDato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "d6ba82b8-3e03-4cab-b19e-133334061682",
            "sourceColumn": "FerdigDato",
            "summarizeBy": "none"
          },
          {
            "name": "FriTekst2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "cd70a780-17d7-4817-9bf7-961f0bf89bb5",
            "sourceColumn": "FriTekst2",
            "summarizeBy": "none"
          },
          {
            "name": "FriTekst3",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "df7ea7f8-05bb-4e89-806d-0a0d159fae03",
            "sourceColumn": "FriTekst3",
            "summarizeBy": "none"
          },
          {
            "name": "HP Beskrivelse",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "431c6b4e-a0a1-4303-8022-32d670aa82b2",
            "sourceColumn": "HP Beskrivelse",
            "summarizeBy": "none"
          },
          {
            "name": "HovedArbeidProsjektNr",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "598844f6-a038-4b23-8620-52ce697a587c",
            "sourceColumn": "HovedArbeidProsjektNr",
            "summarizeBy": "none"
          },
          {
            "name": "HovedProsjekt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "87144d0f-e7c3-4fc5-b38b-412ac44ec46b",
            "sourceColumn": "HovedProsjekt",
            "summarizeBy": "none"
          },
          {
            "name": "HovedProsjektNummer",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "e5752fa8-2549-4d5f-a020-70a3c318493e",
            "sourceColumn": "HovedProsjektNummer",
            "summarizeBy": "none"
          },
          {
            "name": "KundeNummer",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "bc708364-9b5a-4009-9f1e-e5baffee3f3e",
            "sourceColumn": "KundeNummer",
            "summarizeBy": "sum"
          },
          {
            "name": "OrdreVerdi",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "24176a10-55fd-44dc-84d2-d846376933a5",
            "sourceColumn": "OrdreVerdi",
            "summarizeBy": "sum"
          },
          {
            "name": "OrgVarighet",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "e3983e0a-e6ca-40ee-ab82-8c137ad18c65",
            "sourceColumn": "OrgVarighet",
            "summarizeBy": "sum"
          },
          {
            "name": "PlanFerdigDato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "13731b0b-fc7c-4f3b-987f-17ee2f8e046e",
            "sourceColumn": "PlanFerdigDato",
            "summarizeBy": "none"
          },
          {
            "name": "ProjectId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "05132253-6447-4ddd-b7a9-13d29d9a9f62",
            "sourceColumn": "ProjectId",
            "summarizeBy": "none"
          },
          {
            "name": "ProsjType",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "575973bd-84cf-4f3f-ad5e-a11a4aa447e7",
            "sourceColumn": "ProsjType",
            "summarizeBy": "sum"
          },
          {
            "name": "Prosjekt",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "1637dea5-bfbb-4456-bddd-99ab6dd3d902",
            "sourceColumn": "Prosjekt",
            "summarizeBy": "none"
          },
          {
            "name": "ProsjektLnk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "97e00110-5a9a-411a-8706-986d5edb33c3",
            "sourceColumn": "ProsjektLnk",
            "summarizeBy": "none"
          },
          {
            "name": "ProsjektNummer",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "7b325b37-82c2-416e-99ac-ad5d65546375",
            "sourceColumn": "ProsjektNummer",
            "summarizeBy": "none"
          },
          {
            "name": "Prosjektleder",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "bfd5069a-46e1-40f1-907f-70e4b4c4d3b7",
            "sourceColumn": "Prosjektleder",
            "summarizeBy": "none"
          },
          {
            "name": "ProsjektlederId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "40509ba2-e6b0-4326-8ab6-4a731db35838",
            "sourceColumn": "ProsjektlederId",
            "summarizeBy": "none"
          },
          {
            "name": "Selger",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ef0fabcd-34f3-4351-acdb-586ce0d32d47",
            "sourceColumn": "Selger",
            "summarizeBy": "none"
          },
          {
            "name": "SelgerId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "8b373c5c-01e7-4a6f-aa28-51d8799e9975",
            "sourceColumn": "SelgerId",
            "summarizeBy": "none"
          },
          {
            "name": "SisteFøring",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "759aecfa-eba9-47b3-a621-5e437dca2ac5",
            "sourceColumn": "SisteFøring",
            "summarizeBy": "none"
          },
          {
            "name": "StartDato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "ecc7fd7d-0493-49f1-b93e-b202108be03f",
            "sourceColumn": "StartDato",
            "summarizeBy": "none"
          },
          {
            "name": "Status",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "933c9968-89bb-4f6f-9665-a7b97721c0b3",
            "sourceColumn": "Status",
            "summarizeBy": "none"
          },
          {
            "name": "WIPfilter",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "expression": "IF(ISBLANK(LOOKUPVALUE(ProPrognose[Hovedarbeidsprosjekt],ProPrognose[Hovedarbeidsprosjekt],Prosjekt[HovedArbeidProsjektNr])),0,1) ",
            "formatString": "0",
            "isDataTypeInferred": true,
            "lineageTag": "90921cf2-616b-4150-8f0d-c477355bf93b",
            "summarizeBy": "sum",
            "type": "calculated"
          }
        ],
        "lineageTag": "e885331f-04f4-4721-b91f-efcd504c4d0d",
        "measures": [
          {
            "name": "Varighet",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "(MAX(Prosjekt[PlanFerdigDato])-MAX(Prosjekt[StartDato]))*1",
            "lineageTag": "d0a02135-8954-4eca-b556-2547a6b83f46"
          },
          {
            "name": "Valgt HP",
            "expression": "SELECTEDVALUE(Prosjekt[HP Beskrivelse])",
            "lineageTag": "21990824-7ecd-4ac4-a98e-9e28258b77a4"
          },
          {
            "name": "Tull",
            "expression": "CALCULATE(COUNT(HpPrognose[HovedArbeidProsjektNr]),ALLEXCEPT(Prosjekt,Prosjekt[HovedArbeidProsjektNr]))",
            "formatString": "0",
            "lineageTag": "358fa454-d72d-413a-b272-ceaba9bbebdc"
          }
        ],
        "partitions": [
          {
            "name": "Prosjekt",
            "mode": "import",
            "queryGroup": "Dimensjoner",
            "source": {
              "expression": [
                "let",
                "   ",
                "",
                "//FindLastDate",
                "    GetParent = Table.NestedJoin(Regnskap, {\"ProsjektLnk\"}, Projects, {\"ProsjektLnk\"}, \"Prosjekt\", JoinKind.LeftOuter),",
                "    ExpandParent = Table.ExpandTableColumn(GetParent, \"Prosjekt\", {\"Status\", \"HovedArbeidProsjektNr\"}, {\"Status\", \"HovedArbeidProsjektNr\"}),",
                "    GroupParent = Table.Group(ExpandParent, {\"SelskapsId\", \"HovedArbeidProsjektNr\", \"Status\"}, {{\"SisteDato\", each List.Max([Dato]), type nullable date}}),",
                "    FilterClosed = Table.SelectRows(GroupParent, each ([Status] = \"A\")),",
                "    //Procedure",
                "    #\"Merged Queries\" = Table.NestedJoin(SQL_Projects,{\"FirmaId\"},SQL_Company,{\"InfoEasyId\"},\"Companies\",JoinKind.Inner),",
                "    #\"Expanded Companies\" = Table.ExpandTableColumn(#\"Merged Queries\", \"Companies\", {\"CompanyId\"}, {\"CompanyId\"}),",
                "    #\"Sorted Rows1\" = Table.Sort(#\"Expanded Companies\",{{\"ProsjektId\", Order.Ascending}}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Sorted Rows1\",{{\"ProsjektLnk\", \"ProsjektLnkOld\"}}),",
                "",
                "    #\"Added Custom\" = Table.AddColumn(#\"Renamed Columns\", \"ProsjektLnk\", each Text.From([CompanyId])&\"-\"&Text.From([ProsjektId])),",
                "    filterColumns = Table.RemoveColumns(#\"Added Custom\",{\"FirmaId\", \"ProsjektLnkOld\"}),",
                "    columns2Norwegian = Table.RenameColumns(filterColumns,{{\"ProsjektId\", \"ProsjektNummer\"}}),",
                "    #\"Added Custom1\" = Table.AddColumn(columns2Norwegian, \"Custom\", each if [HovedArbeidProsjektNr] <> null then [HovedArbeidProsjektNr] else [ProsjektNummer]),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Added Custom1\",{\"HovedArbeidProsjektNr\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(#\"Removed Columns\",{{\"Custom\", \"HovedArbeidProsjektNr\"}}),",
                "    #\"Sorted Rows\" = Table.Sort(#\"Renamed Columns1\",{{\"ProsjektLnk\", Order.Ascending}}),",
                "    #\"Replaced Value\" = Table.ReplaceValue(#\"Sorted Rows\",\",,,,,,,,,,,,,,,,,,,,\",\"SLETT\",Replacer.ReplaceText,{\"ProsjektNummer\"}),",
                "    #\"Filtered Rows1\" = Table.SelectRows(#\"Replaced Value\", each ([ProsjektNummer] <> \"SLETT\")),",
                "    #\"Added Custom2\" = Table.AddColumn(#\"Filtered Rows1\", \"HovedProsjekt\", each if [Prosjekt] = null then \"\" else if [ProsjektNummer] = [HovedArbeidProsjektNr] then [Prosjekt] else null),",
                "    #\"Filled Down\" = Table.FillDown(#\"Added Custom2\",{\"HovedProsjekt\"}),",
                "    #\"Added Custom3\" = Table.AddColumn(#\"Filled Down\", \"HP Beskrivelse\", each if Text.Length([HovedProsjekt])>0 then [HovedArbeidProsjektNr]&\" - \"&[HovedProsjekt] else [HovedArbeidProsjektNr]),",
                "    #\"Added Custom4\" = Table.AddColumn(#\"Added Custom3\", \"Delprosjekt\", each Text.AfterDelimiter([Prosjekt], \"_\", {0, RelativePosition.FromEnd})),",
                "    #\"Added Custom5\" = Table.AddColumn(#\"Added Custom4\", \"DelprosjektNummer\", each Text.AfterDelimiter([ProsjektNummer], \"-\", {0, RelativePosition.FromEnd})),",
                "    #\"Added Custom6\" = Table.AddColumn(#\"Added Custom5\", \"DP Beskrivelse\", each if [HovedArbeidProsjektNr] = [DelprosjektNummer] then \" \"&[DelprosjektNummer] &\"   \"&[Delprosjekt] else [DelprosjektNummer]&\"-\"&[Delprosjekt], type text),",
                "    #\"Added Custom7\" = Table.AddColumn(#\"Added Custom6\", \"OrgVarighet\", each if [StartDato] = null then 0 else if [PlanFerdigDato] = null then 0 else Number.From([PlanFerdigDato])-Number.From([StartDato])),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Added Custom7\",{{\"StartDato\", type date}, {\"PlanFerdigDato\", type date}, {\"FerdigDato\", type date}, {\"OrgVarighet\", Int64.Type}, {\"HovedArbeidProsjektNr\", type text}, {\"HP Beskrivelse\", type text}, {\"HovedProsjekt\", type text}, {\"ProsjektLnk\", type text}}),",
                "    Projects = Table.RemoveColumns(#\"Changed Type\",{\"OrdreDato\"}),",
                "    #\"Merged Queries1\" = Table.NestedJoin(Projects, {\"HovedArbeidProsjektNr\"}, FilterClosed, {\"HovedArbeidProsjektNr\"}, \"Removed Columns1\", JoinKind.LeftOuter),",
                "    #\"Expanded Removed Columns1\" = Table.ExpandTableColumn(#\"Merged Queries1\", \"Removed Columns1\", {\"SisteDato\"}, {\"SisteDato\"}),",
                "    SisteFøring = Table.AddColumn(#\"Expanded Removed Columns1\", \"SisteFøring\", each if [Status] = \"A\" then if [SisteDato] = null then \"Før \"&Text.From(List.Min(Kalender[År])) else Text.From(Date.Year([SisteDato])) else null, type text),",
                "    #\"Removed Columns1\" = Table.RemoveColumns(SisteFøring,{\"SisteDato\"})",
                "in",
                "    #\"Removed Columns1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "ProsjektKPI",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ],
        "columns": [
          {
            "name": "ProsjektKPI",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "d19a02e0-0b74-4049-967a-6fc99ccd47fb",
            "sourceColumn": "ProsjektKPI",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "f8b2ea3a-f85f-4281-9825-aac60fce883b",
        "measures": [
          {
            "name": "Kostnadsprognose",
            "expression": "CALCULATE([ProgKostEndring],FILTER(ALL(Kalender),Kalender[Dato]<=MAX(Kalender[Dato])))",
            "formatString": "#,0",
            "lineageTag": "15cf2292-4164-44b5-b6a6-bb58159d360e"
          },
          {
            "name": "Opptjent %",
            "expression": "DIVIDE([KostAkk],[Kostnadsprognose])",
            "formatString": "0.0\\ %;-0.0\\ %;0.0\\ %",
            "lineageTag": "742033ef-3bc0-4738-9f76-55ac322118bb"
          },
          {
            "name": "Inntektsprognose",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CALCULATE([ProgInntEndring],FILTER(ALL(Kalender),Kalender[Dato]<=MAX(Kalender[Dato])))",
            "formatString": "#,0",
            "lineageTag": "7b796bb7-bf6c-458e-ae92-f9ffb8be73cc"
          },
          {
            "name": "ProInntektIndikator",
            "expression": [
              "",
              "",
              "VAR Up =",
              "    UNICHAR ( 9650 )",
              "VAR Down =",
              "    UNICHAR ( 9660 )",
              "    ",
              "VAR Test = [ProgInntEndring]",
              "    ",
              "        ",
              "RETURN ",
              "    ",
              "    IF(HASONEVALUE(Prosjekt[HovedArbeidProsjektNr]),",
              "    MAXX(VALUES(ProPrognose[Hovedarbeidsprosjekt]),",
              "    IF ( Test > 1 , Up , IF(Test < -1 , Down , BLANK()))) ",
              "    ,BLANK())"
            ],
            "lineageTag": "2d5b6e1d-dd70-44f4-914b-4efde1c65f41"
          },
          {
            "name": "DG% prognose",
            "expression": "DIVIDE([Inntektsprognose]-[Kostnadsprognose],[Inntektsprognose])",
            "formatString": "0.0\\ %;-0.0\\ %;0.0\\ %",
            "lineageTag": "34a9a223-5f4b-4a49-ba66-802e1026c4c1"
          },
          {
            "name": "ProDGIndikator",
            "expression": [
              "",
              "",
              "VAR Up =",
              "    UNICHAR ( 9650 )",
              "VAR Down =",
              "    UNICHAR ( 9660 )",
              "VAR Test =     ",
              "    [ProgDGEndring]",
              "RETURN ",
              "    ",
              "    IF(HASONEVALUE(Prosjekt[HovedArbeidProsjektNr]),",
              "    MAXX(VALUES(ProPrognose[Hovedarbeidsprosjekt]),",
              "    IF ( Test > 1 , Up , IF ( Test < -1 , Down , BLANK()))),BLANK())"
            ],
            "lineageTag": "fd33d2be-414c-4249-900c-a15d19b99322"
          },
          {
            "name": "ProgDGEndring",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "ROUND(DIVIDE([Inntektsprognose]-[Kostnadsprognose],[Inntektsprognose])*10000,0)-CALCULATE( ROUND(DIVIDE([Inntektsprognose]-[Kostnadsprognose],[Inntektsprognose])*10000,0),DATEADD(Kalender[Dato],-1,MONTH))",
            "lineageTag": "6ab76a64-94e8-4bbe-933e-aa292485d43a"
          },
          {
            "name": "Bidrag",
            "expression": [
              "",
              "SWITCH (",
              "    MAX ( ProsjektStatus[Order] ),",
              "    \"1\", [BidragPer] + [VIAendringMnd],",
              "    \"2\", [BidragHIÅ] + [VIAendringYtd],",
              "    \"3\", [FakturertAkk] - [KostAkk] + [VIAakkumulert] - [ForskuddAkk],",
              "    \"4\", [Inntektsprognose]-[Kostnadsprognose] - ([FakturertAkk] - [KostAkk] + [VIAakkumulert] - [ForskuddAkk])",
              ")"
            ],
            "formatString": "#,0",
            "lineageTag": "82422912-6ac7-4ed2-889f-345eccaabe3d"
          },
          {
            "name": "Inntekt",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": [
              "",
              "SWITCH (",
              "    MAX ( ProsjektStatus[Order] ),",
              "    \"1\", [FaktturertPer] + [VIAendringMnd] - [ForskuddPer],",
              "    \"2\", [FakturertHIÅ] + [VIAendringYtd],",
              "    \"3\", [FakturertAkk] + [VIAakkumulert] - [ForskuddAkk],",
              "    \"4\", [Inntektsprognose] - ([FakturertAkk] + [VIAakkumulert] - [ForskuddAkk]),",
              "    [FakturertAkk] + [VIAakkumulert] - [ForskuddAkk]",
              ")"
            ],
            "formatString": "#,0",
            "lineageTag": "ab2c5ab1-f301-45c0-98aa-ea722dff8b01"
          },
          {
            "name": "DG %",
            "expression": "DIVIDE([Bidrag],[Inntekt])",
            "formatString": "0.0\\ %;-0.0\\ %;0.0\\ %",
            "lineageTag": "7364856d-39b5-4ed1-a213-dddc0a99b9a0"
          },
          {
            "name": "Fakturert",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": [
              "",
              "SWITCH (",
              "    MAX ( ProsjektStatus[Order] ),",
              "    \"1\", [FaktturertPer],",
              "    \"2\", [FakturertHIÅ],",
              "    \"3\", [FakturertAkk]",
              "    ",
              ")"
            ],
            "formatString": "#,0",
            "lineageTag": "6ef8c69d-1b49-4101-a130-2e091ad73eb2"
          },
          {
            "name": "Kostnad",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": [
              "",
              "SWITCH (",
              "    MAX ( ProsjektStatus[Order] ),",
              "    \"1\", [KostPer],",
              "    \"2\", [KostHIÅ],",
              "    \"3\", [KostAkk]",
              "    ",
              ")"
            ],
            "formatString": "#,0",
            "lineageTag": "c88d2f90-daa8-4859-a6c1-60182d095f9b"
          },
          {
            "name": "InntektsprognoseAll",
            "expression": "CALCULATE([ProgInntEndring],ALL(Kalender))",
            "formatString": "0",
            "lineageTag": "9616acba-2f8a-4f7d-b03b-295baef39e37"
          },
          {
            "name": "Inntektsbudsjett",
            "expression": "CALCULATE([ProgInntEndring],ALL(Kalender),ProPrognose[Type]=\"Kalkyle\")",
            "formatString": "#,0",
            "lineageTag": "397c39ce-1302-4605-9bca-273d79c93986"
          },
          {
            "name": "Kostnadsbudsjett",
            "expression": "CALCULATE([ProgKostEndring],ALL(Kalender),ProPrognose[Type]=\"Kalkyle\")",
            "formatString": "#,0",
            "lineageTag": "3a55dd4d-e169-4495-aa6c-370cfd0cf45d"
          },
          {
            "name": "DB budsjett",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[Inntektsbudsjett]-[Kostnadsbudsjett]",
            "formatString": "#,0",
            "lineageTag": "d1046c23-63ea-4586-90dd-b18c521584bc"
          },
          {
            "name": "DG budsjett",
            "expression": "DIVIDE([DB budsjett],[Inntektsbudsjett])",
            "formatString": "0.0\\ %;-0.0\\ %;0.0\\ %",
            "lineageTag": "a349ec93-b4f6-4d8b-b2c3-234cf37307a5"
          },
          {
            "name": "Rest %",
            "expression": "1-DIVIDE([KostAkk]+[EyeShare],[Kostnadsprognose]) ",
            "formatString": "0\\ %;-0\\ %;0\\ %",
            "lineageTag": "fa3d839b-749a-4e5a-bf59-34319664987e"
          },
          {
            "name": "DB Prognose",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[Inntektsprognose]-[Kostnadsprognose]",
            "formatString": "#,0",
            "lineageTag": "7da816b8-725e-4778-b43d-f610a069da96"
          },
          {
            "name": "VIA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": [
              "",
              "SWITCH (",
              "    MAX ( ProsjektStatus[Order] ),",
              "    \"1\", [VIAendringMnd],",
              "    \"2\", [VIAendringYtd],",
              "    \"3\", [VIAakkumulert],",
              "    \"4\", - [VIAakkumulert]",
              ")"
            ],
            "formatString": "#,0",
            "lineageTag": "eb67f770-ddd6-4cdd-b616-a1fcd0ffe332"
          },
          {
            "name": "Inntektsprognose2",
            "expression": [
              "CALCULATE (",
              "            - SUM ( ProPrognose[RevenueChange] ),",
              "            DATESBETWEEN (",
              "                Kalender[Dato],",
              "                FIRSTDATE ( ProPrognose[Date]+0 ),",
              "                LASTDATE ( Kalender[Dato] )",
              "            )",
              "        ) / MIN(Faktorer[Faktor])"
            ],
            "formatString": "0",
            "lineageTag": "0e257fec-93a8-442f-b599-67958301f866"
          },
          {
            "name": "InntektTY",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[FakturertHIÅ] + [VIAendringYtd]",
            "lineageTag": "340f4c99-d952-42ac-bdb2-f94b4dd8f087"
          },
          {
            "name": "Inntektsavvik",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[Inntektsprognose]-[Inntektsbudsjett]",
            "formatString": "#,0",
            "lineageTag": "e85e261a-72f7-4cf7-8ca6-371f852128f9"
          },
          {
            "name": "Påløpt",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[KostAkk]+[EyeShare]",
            "formatString": "#,0",
            "lineageTag": "847fe75e-cd7b-4fbe-bc73-c6f39b3f23d6"
          },
          {
            "name": "Rest",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[Kostnadsprognose]-[Påløpt]",
            "formatString": "#,0",
            "lineageTag": "c40a264b-9892-4444-a581-776fb9363464"
          },
          {
            "name": "ProgVsBud",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[Kostnadsbudsjett]-[Kostnadsprognose]",
            "formatString": "#,0",
            "lineageTag": "a49957e8-91eb-4dd5-8d85-76c5f4862709"
          },
          {
            "name": "DG% fper",
            "expression": "CALCULATE([DG %],DATEADD(Kalender[Dato],-1,MONTH))",
            "formatString": "0.0\\ %;-0.0\\ %;0.0\\ %",
            "lineageTag": "598bbcb9-9881-4f6f-b679-dfd00d4c8bef"
          },
          {
            "name": "Fakturert fper",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CALCULATE([Fakturert],DATEADD(Kalender[Dato],-1,MONTH))",
            "formatString": "#,0",
            "lineageTag": "cda0c3d9-770e-44cf-a628-3a8d2248d04a"
          },
          {
            "name": "Faktura reserve",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "ROUND([Inntektsprognose]-[Fakturert],2)",
            "formatString": "#,0",
            "lineageTag": "1caea482-9760-4e4d-99a1-036c115b8186"
          },
          {
            "name": "Inntekt fper",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CALCULATE([Inntekt],DATEADD(Kalender[Dato],-1,MONTH))",
            "formatString": "#,0",
            "lineageTag": "df6c6cae-1ece-40e2-9506-32714da06241"
          },
          {
            "name": "Inntektsreserve",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[Inntektsprognose]-[Inntekt]",
            "formatString": "#,0",
            "lineageTag": "9525cf60-e128-468e-b1c9-eb81fc26531a"
          },
          {
            "name": "Bidrag fper",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CALCULATE([Bidrag],DATEADD(Kalender[Dato],-1,MONTH))",
            "formatString": "#,0",
            "lineageTag": "26fa535d-4970-4c81-9aaf-3cb985b1e8ed"
          },
          {
            "name": "Ferdig fper",
            "expression": "CALCULATE([Opptjent %],DATEADD(Kalender[Dato],-1,MONTH))",
            "formatString": "0.0\\ %;-0.0\\ %;0.0\\ %",
            "lineageTag": "c4387f9e-6253-4a6f-b065-32c8c4e9bf35"
          },
          {
            "name": "Ferdig rest",
            "expression": "1-[Opptjent %]",
            "formatString": "0.0\\ %;-0.0\\ %;0.0\\ %",
            "lineageTag": "14343cdd-9f49-44d4-b109-f04b7f727ca3"
          },
          {
            "name": "DB Avvik",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": [
              "",
              "VAR Down =",
              "    UNICHAR ( 128681 )",
              "VAR Up =",
              "    UNICHAR ( 128176 )",
              "RETURN",
              "    IF ( [DB Prognose] - [DB budsjett] >= 0 , [DB Prognose] - [DB budsjett] ,CONCATENATE(Down,CONCATENATE(\" \",FORMAT([DB Prognose] - [DB budsjett],\"# ### ##0\"))))"
            ],
            "formatString": "#,0",
            "lineageTag": "6b532ee4-3361-4238-8ecb-ddf2c4c2bbf7"
          },
          {
            "name": "MaxDato",
            "expression": "MAX(Kalender[Dato])",
            "formatString": "General Date",
            "lineageTag": "feb5c541-effc-48c2-8afd-d710b0f99552"
          },
          {
            "name": "Fakturert Bidrag",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[Fakturert]-[Kostnad]",
            "lineageTag": "a7d382f3-cbab-446f-b334-4048dab7f596"
          },
          {
            "name": "Fakturert DG%",
            "expression": "DIVIDE([Fakturert Bidrag],[Fakturert])",
            "formatString": "0.0\\ %;-0.0\\ %;0.0\\ %",
            "lineageTag": "42ab9e15-059f-4590-9020-bdac46004a15"
          },
          {
            "name": "Blank",
            "expression": "BLANK()",
            "formatString": "0",
            "lineageTag": "ec026372-7b25-4879-a003-962323704b43"
          },
          {
            "name": "AvgDaysOutstanding",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "displayFolder": "Kunder",
            "expression": "AVERAGE('KundePoster'[Kredittid])",
            "formatString": "#,##0.0",
            "lineageTag": "b4f61493-513a-495d-9ac4-9b5e2e43a03a"
          },
          {
            "name": "AvgDaysOverdue",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "displayFolder": "Kunder",
            "expression": "AVERAGE('KundePoster'[DaysOverdue])",
            "formatString": "#,0.00",
            "lineageTag": "40a6245c-6fdf-4af7-b72f-e17706ff64f8"
          },
          {
            "name": "SaldoNet",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "displayFolder": "Kunder",
            "expression": "SUM(KundePoster[NetOutstanding])",
            "formatString": "#,##0",
            "lineageTag": "1c679500-4d51-4a41-8f1b-4c9b08a61808"
          },
          {
            "name": "Fakturabelop",
            "displayFolder": "Kunder",
            "expression": [
              "",
              "SUM('KundePoster'[FaktBelopNorsk])"
            ],
            "formatString": "#,##0",
            "lineageTag": "00a6a112-ebfa-440a-bcc2-c0b19c927037"
          },
          {
            "name": "Betalt",
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "displayFolder": "Kunder",
            "expression": [
              "",
              "-SUM('KundePoster'[Betalt])"
            ],
            "formatString": "#,##0",
            "lineageTag": "10371017-64b0-430b-9c10-d1bb3710be8e"
          }
        ],
        "partitions": [
          {
            "name": "ProsjektKPI-a2cfa9ee-fb5b-4133-9e6f-b7eb25d7e77d",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = \"\"",
                "in",
                "    Source"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "ProsjektLederFilter",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Select",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "1316d0d9-5121-48cf-997f-8ceb4de84542",
            "sourceColumn": "Select",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "11d2095e-3515-4b2f-a337-dbadba95d44c",
        "measures": [
          {
            "name": "ProMgr",
            "expression": "IF(SELECTEDVALUE(ProsjektLederFilter[Select],\"ME\")=\"ME\",IF(USERPRINCIPALNAME()=MAX(Prosjekt[ProsjektlederId]),0,BLANK()),0)",
            "formatString": "0",
            "lineageTag": "c693aaa9-3beb-4881-b3e6-5878fb671dcb"
          }
        ],
        "partitions": [
          {
            "name": "ProsjektLederFilter-e5e2d12d-e396-4daa-b9f0-2517dcec4fa2",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45W8nVVitWJVnL08VGKjQUA\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [Select = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Select\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "ProsjektMeasures",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ],
        "columns": [
          {
            "name": "ProsjektMeasures",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "a49cb4a3-297f-4d94-bdaa-1a673f2b8586",
            "sourceColumn": "ProsjektMeasures",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "2b25f6af-d2f0-49ce-9c57-c15aeae7c6b5",
        "measures": [
          {
            "name": "ProgInntEndring",
            "expression": "DIVIDE(SUM(ProPrognose[RevenueChange]),[Rapportfaktor])",
            "formatString": "0",
            "lineageTag": "12ec172d-7a46-4af5-9c42-12590649c175"
          },
          {
            "name": "VIAendringMnd",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[VIAakkumulert]-CALCULATE([VIAakkumulert],DATEADD(Kalender[Dato],-1,MONTH))",
            "formatString": "#,0",
            "lineageTag": "0a71fa5f-0f1c-4719-8b69-5b64adc69079"
          },
          {
            "name": "BidragPer",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[FaktturertPer]-[KostPer]",
            "lineageTag": "6e368d88-093e-4e46-8d11-f23db230f8bb"
          },
          {
            "name": "BidragHIÅ",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "TOTALYTD([BidragPer],Kalender[Dato])",
            "lineageTag": "86205f8b-3e9a-4493-a037-9c153cd668f5"
          },
          {
            "name": "VIAendringYtd",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[VIAakkumulert]-CALCULATE([VIAakkumulert],FILTER(ALL(Kalender),Kalender[År]=MAX(Kalender[År])-1),Kalender[MndNo]=12)",
            "lineageTag": "667b73a7-1866-416d-8cea-473a56ab5b75"
          },
          {
            "name": "FakturertHIÅ",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "TOTALYTD([FaktturertPer],Kalender[Dato])",
            "lineageTag": "c4e8a105-36fb-4281-b05c-114d3e5e6c16"
          },
          {
            "name": "FaktturertPer",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": [
              "CALCULATE (",
              "                    SUMX (",
              "                        CALCULATETABLE ( VALUES ( Prosjekt[ProsjektNummer] ), Prosjekt[WIPfilter]=1),",
              "                        - [Regnskap] / MIN ( Faktorer[Faktor] )",
              "                    ),",
              "                    Kontoplan[Nivå2] = \"Inntekter\"",
              "                )",
              ""
            ],
            "formatString": "#,0",
            "lineageTag": "394294ad-e1d3-4b50-9edd-d0273c54d623"
          },
          {
            "name": "FakturertAkk",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CALCULATE([FaktturertPer],FILTER(ALL(Kalender),Kalender[Dato]<=MAX(Kalender[Dato])))",
            "formatString": "#,0",
            "lineageTag": "1381e1fa-2358-449b-9444-e884020c7853"
          },
          {
            "name": "KostAkk",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CALCULATE([KostPer],FILTER(ALL(Kalender),Kalender[Dato]<=MAX(Kalender[Dato])))",
            "formatString": "#,0",
            "lineageTag": "576890db-4414-42d0-85b9-7adcf7dbdd89"
          },
          {
            "name": "KostPer",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": [
              "CALCULATE (",
              "            SUMX (",
              "                CALCULATETABLE ( VALUES ( Prosjekt[ProsjektNummer] ),Prosjekt[WIPfilter]=1), ",
              "                [Regnskap] / MIN ( Faktorer[Faktor] )",
              "            ),",
              "            Kontoplan[Rapport] = \"Resultat\",Kontoplan[Nivå1]<>\"Inntekter\"   ",
              "        )"
            ],
            "formatString": "#,0",
            "lineageTag": "6f83a0e3-3ddf-468d-96c0-ac74b2376197"
          },
          {
            "name": "KostHIÅ",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "TOTALYTD (",
              "            [KostPer],",
              "            Kalender[Dato]",
              "        )"
            ],
            "lineageTag": "3dc27a7a-5a72-47ba-a432-01d0ea43469b"
          },
          {
            "name": "ProgKostEndring",
            "expression": "DIVIDE(SUM(ProPrognose[CostChange]),Faktorer[Rapportfaktor])",
            "formatString": "0",
            "lineageTag": "ed3fcb00-0f03-485b-bb88-ea38600c09d1"
          },
          {
            "name": "EyeShare",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CALCULATE(DIVIDE(SUM(Regnskap[Belop2]),Faktorer[Rapportfaktor]),USERELATIONSHIP(Kalender[Dato],Regnskap[FakturaDato]))",
            "formatString": "#,0",
            "lineageTag": "a05881c5-61b2-4808-bb06-dc1a61ecdb40"
          },
          {
            "name": "Fakturabeløp",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[KostPer]+[EyeShare]",
            "lineageTag": "b901d60e-1cbe-411c-8112-11e96b7ae39c"
          },
          {
            "name": "Flagg",
            "expression": [
              "",
              "VAR Down =",
              "    UNICHAR ( 128681 )",
              "VAR Up =",
              "    UNICHAR ( 128176 )",
              "RETURN",
              "    IF ( ( [KostAkk]+[EyeShare] ) > ( [Kostnadsprognose] * 0.9) , IF ( ( [KostAkk]+[EyeShare] ) <= ( [Kostnadsprognose] ) , Down, CONCATENATE(Down, Down) ), \"\") "
            ],
            "lineageTag": "620e95c0-8a86-4520-b059-b197994e63ab"
          },
          {
            "name": "Filter",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[Inntekt]*[Inntekt]+[Bidrag]*[Bidrag]",
            "lineageTag": "1d9de121-54cc-4696-8467-855bf7c07e59"
          },
          {
            "name": "VIAakkumulert",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "SUMX(VALUES(Prosjekt[HovedArbeidProsjektNr]),[Inntektsprognose]*IF([Opptjent %]<=1,[Opptjent %],1)-[FakturertAkk]+[ForskuddAkk])",
            "formatString": "#,0",
            "lineageTag": "3d50eb55-9ac9-4319-9d6c-65fb497b887e"
          },
          {
            "name": "TestMaxDte",
            "expression": "MAX((ProPrognose[Date]))",
            "formatString": "General Date",
            "lineageTag": "7230a1b0-c637-457b-9628-9456978a4174"
          },
          {
            "name": "FilterVIA",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "ROUNDDOWN([VIAakkumulert]*[VIAakkumulert]+[VIAendringMnd]*[VIAendringMnd],0)",
            "lineageTag": "c78fc95d-4794-40fb-ad01-e90f56c77275"
          },
          {
            "name": "KostPerOther",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "CALCULATE (",
              "            SUMX (",
              "                CALCULATETABLE ( VALUES ( Prosjekt[ProsjektNummer] ),Prosjekt[WIPfilter]=0), ",
              "                [Regnskap] / MIN ( Faktorer[Faktor] )",
              "            ),",
              "            Kontoplan[Rapport] = \"Resultat\",Kontoplan[Nivå1]<>\"Inntekter\"   ",
              "        )"
            ],
            "lineageTag": "1da41122-ff8f-4237-8405-7d99ea55cac3"
          },
          {
            "name": "EyeShareTest",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "SUM(Regnskap[Belop2])",
            "lineageTag": "c72e5c57-7aac-4600-9b23-e5127e4faa4a"
          },
          {
            "name": "Slett1",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE([VIAakkumulert],FILTER(ALL(Kalender),Kalender[År]=MAX(Kalender[År])-1),Kalender[MndNo]=12)",
            "lineageTag": "8c73b93f-1979-4268-b0f3-ed29f986ac3f"
          },
          {
            "name": "ForskuddPer",
            "expression": [
              "CALCULATE (",
              "                    SUMX (",
              "                        CALCULATETABLE ( VALUES ( Prosjekt[ProsjektNummer] ), Prosjekt[WIPfilter]=1),",
              "                        - [Regnskap] / MIN ( Faktorer[Faktor] )",
              "                    ),",
              "                    Kontoplan[Konto] = 398",
              "                )"
            ],
            "formatString": "#,0",
            "lineageTag": "2407c6bd-95dc-429f-930e-cc656b8ef6fe"
          },
          {
            "name": "ForskuddAkk",
            "expression": "CALCULATE([ForskuddPer],FILTER(ALL(Kalender),Kalender[Dato]<=MAX(Kalender[Dato])))",
            "formatString": "#,0",
            "lineageTag": "5b9f3df4-3c5b-4906-ae45-fb0a36a658c7"
          },
          {
            "name": "InntektALL",
            "expression": [
              "CALCULATE (",
              "                    SUMX (",
              "                        CALCULATETABLE ( VALUES ( Prosjekt[ProsjektNummer] ), Prosjekt[WIPfilter]=1),",
              "                        - [Regnskap] / MIN ( Faktorer[Faktor] )",
              "                    ),",
              "                    Kontoplan[Nivå1] = \"Inntekter\"",
              "                    ,ALL(Kalender)",
              "                )"
            ],
            "formatString": "#,0",
            "lineageTag": "2269c012-7d30-4014-888b-17555c59e05a"
          },
          {
            "name": "KostALL",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CALCULATE([KostPer],ALL(Kalender))",
            "formatString": "#,0",
            "lineageTag": "5ab63fa4-8ef2-437f-955b-0ba78b1f6952"
          },
          {
            "name": "BidragALL",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[InntektALL]-[KostALL]",
            "formatString": "#,0",
            "lineageTag": "036cbb9e-b0c4-4180-a230-e80e05ae71d0"
          },
          {
            "name": "dgAll",
            "expression": "DIVIDE([BidragALL],[InntektALL])",
            "formatString": "0.0\\ %;-0.0\\ %;0.0\\ %",
            "lineageTag": "b53298c1-78ba-49e9-93d1-95e51a193cb3"
          },
          {
            "name": "AvsluttetProsjekt",
            "expression": "CONCATENATE(CONCATENATE(MAX(Prosjekt[Status]),\" \"),SELECTEDVALUE(Prosjekt[HP Beskrivelse]))",
            "lineageTag": "036f9dcb-ca30-4a45-9ae9-2e9aa549fe80"
          }
        ],
        "partitions": [
          {
            "name": "ProsjektMeasures-6327e255-3b50-4ef5-b88e-05c2fcc89e94",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = \"\"",
                "in",
                "    Source"
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "ProsjektStatus",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "Order",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "737e87c1-b8d1-4594-8c64-e375bf2d4dce",
            "sourceColumn": "Order",
            "summarizeBy": "none"
          },
          {
            "name": "Statusperioder",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "c15d69f9-fb63-4bed-b967-8fe9dace9c56",
            "sourceColumn": "Statusperioder",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "caaf453d-f0ad-4ecc-b77a-abbfda5c1c99",
        "partitions": [
          {
            "name": "ProsjektStatus-388a10dd-925d-415d-a79d-77d1a7f2fded",
            "mode": "import",
            "queryGroup": "Hjelpetabeller",
            "source": {
              "expression": [
                "let",
                "    Source = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText(\"i45WCkgtysxPSVXSUTJUitWJVvLILCnJzFHIVDi8tAgoaIQqWFCUX5yVml2SWgKUMwbLBaUWlwCF0/Pyi0GmmIAFA6DqFErySxJzQIpNlWJjAQ==\", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type text) meta [Serialized.Text = true]) in type table [Statusperioder = _t, Order = _t]),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(Source,{{\"Statusperioder\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Prosjektoversikt",
        "calculationGroup": {
          "calculationItems": [
            {
              "name": "Inntekt",
              "expression": [
                "",
                "CALCULATE(",
                "    SELECTEDMEASURE( ),",
                "    DATESYTD( 'Kalender'[Dato] )",
                ")"
              ],
              "ordinal": 1
            },
            {
              "name": "Kostnad",
              "expression": [
                "",
                "CALCULATE(",
                "    [Prosjekt kostnad],",
                "    DATESYTD( 'Kalender'[Dato] )",
                ")"
              ],
              "ordinal": 2
            },
            {
              "name": "Bidrag",
              "expression": [
                "",
                "CALCULATE(",
                "    [Prosjekt bidrag],",
                "    DATESYTD( 'Kalender'[Dato] )",
                ")"
              ],
              "ordinal": 3
            },
            {
              "name": "Kalkyle:",
              "expression": [
                "",
                "BLANK()"
              ],
              "ordinal": 8
            },
            {
              "name": "Inntekt ",
              "expression": [
                "",
                "VAR _Selected =",
                "    CALCULATE(",
                "        SELECTEDMEASURE( ),",
                "        'Prosjektoversikt'[Name] = \"Bidrag\"",
                "    )",
                "RETURN",
                "    IF( ISBLANK( _Selected ), BLANK( ), [Inntektsbudsjett] )"
              ],
              "ordinal": 9
            },
            {
              "name": "HIÅ:",
              "expression": [
                "",
                "BLANK()"
              ],
              "ordinal": 0
            },
            {
              "name": "Kostnad ",
              "expression": [
                "",
                "VAR _Selected =",
                "    CALCULATE(",
                "        SELECTEDMEASURE( ),",
                "        'Prosjektoversikt'[Name] = \"Bidrag\"",
                "    )",
                "RETURN",
                "    IF( ISBLANK( _Selected ), BLANK( ), [Kostnadsbudsjett] )"
              ],
              "ordinal": 10
            },
            {
              "name": "Bidrag ",
              "expression": [
                "",
                "VAR _Selected =",
                "    CALCULATE(",
                "        SELECTEDMEASURE( ),",
                "        'Prosjektoversikt'[Name] = \"Bidrag\"",
                "    )",
                "RETURN",
                "    IF( ISBLANK( _Selected ), BLANK( ), [DB budsjett] )"
              ],
              "ordinal": 11
            },
            {
              "name": "Prognose:",
              "expression": [
                "",
                "BLANK()"
              ],
              "ordinal": 12
            },
            {
              "name": "Inntekt  ",
              "expression": [
                "",
                "VAR _Selected =",
                "    CALCULATE(",
                "        SELECTEDMEASURE( ),",
                "        'Prosjektoversikt'[Name] = \"Bidrag\"",
                "    )",
                "RETURN",
                "    IF( ISBLANK( _Selected ), BLANK( ), [Inntektsprognose] )"
              ],
              "ordinal": 13
            },
            {
              "name": "Kostnad  ",
              "expression": [
                "",
                "VAR _Selected =",
                "    CALCULATE(",
                "        SELECTEDMEASURE( ),",
                "        'Prosjektoversikt'[Name] = \"Bidrag\"",
                "    )",
                "RETURN",
                "    IF( ISBLANK( _Selected ), BLANK( ), [Kostnadsprognose] )"
              ],
              "ordinal": 14
            },
            {
              "name": "Bidrag  ",
              "expression": [
                "CALCULATE(",
                "    SELECTEDMEASURE( ),",
                "    'Prosjektoversikt'[Name] = \"Inntekt  \"",
                ")",
                "    - CALCULATE(",
                "        SELECTEDMEASURE( ),",
                "        'Prosjektoversikt'[Name] = \"Kostnad  \"",
                "    )"
              ],
              "ordinal": 15
            },
            {
              "name": "HIP:",
              "expression": [
                "",
                "BLANK()"
              ],
              "ordinal": 4
            },
            {
              "name": "Inntekt   ",
              "expression": [
                "",
                "VAR _Selected =",
                "    CALCULATE(",
                "        SELECTEDMEASURE( ),",
                "        'Prosjektoversikt'[Name] = \"Bidrag\"",
                "    )",
                "VAR _Inntekt =",
                "    CALCULATE(",
                "        SELECTEDMEASURE( ),",
                "        FILTER(",
                "            ALL( 'Kalender' ),",
                "            'Kalender'[Dato] <= MAX( 'Kalender'[Dato] )",
                "        )",
                "    )",
                "RETURN",
                "    IF( ISBLANK( _Selected ), BLANK( ), _Inntekt )"
              ],
              "ordinal": 5
            },
            {
              "name": "Kostnad     ",
              "expression": [
                "",
                "VAR _Selected =",
                "    CALCULATE(",
                "        SELECTEDMEASURE( ),",
                "        'Prosjektoversikt'[Name] = \"Bidrag\"",
                "    )",
                "VAR _Inntekt =",
                "    CALCULATE(",
                "        [Prosjekt kostnad],",
                "        FILTER(",
                "            ALL( 'Kalender' ),",
                "            'Kalender'[Dato] <= MAX( 'Kalender'[Dato] )",
                "        )",
                "    )",
                "RETURN",
                "    IF( ISBLANK( _Selected ), BLANK( ), _Inntekt )"
              ],
              "ordinal": 6
            },
            {
              "name": "Bidrag      ",
              "expression": [
                "",
                "VAR _Selected =",
                "    CALCULATE(",
                "        SELECTEDMEASURE( ),",
                "        'Prosjektoversikt'[Name] = \"Bidrag\"",
                "    )",
                "VAR _Inntekt =",
                "    CALCULATE(",
                "        [Prosjekt bidrag],",
                "        FILTER(",
                "            ALL( 'Kalender' ),",
                "            'Kalender'[Dato] <= MAX( 'Kalender'[Dato] )",
                "        )",
                "    )",
                "RETURN",
                "    IF( ISBLANK( _Selected ), BLANK( ), _Inntekt )"
              ],
              "ordinal": 7
            }
          ]
        },
        "columns": [
          {
            "name": "Name",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "ea562847-f958-4ad7-9910-fd2d5ff40a95",
            "sortByColumn": "Ordinal",
            "sourceColumn": "Name",
            "summarizeBy": "none"
          },
          {
            "name": "Ordinal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "isHidden": true,
            "lineageTag": "4da1edc6-60e7-4877-8379-cbe8d752661b",
            "sourceColumn": "Ordinal",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "376c587f-1824-4606-8c46-6089bd9ac20c",
        "partitions": [
          {
            "name": "Partition",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "Regnskap",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          },
          {
            "name": "PBI_NavigationStepName",
            "value": "Navigation"
          }
        ],
        "columns": [
          {
            "name": "Aar",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "int64",
            "expression": "YEAR(Regnskap[Dato])",
            "isDataTypeInferred": true,
            "lineageTag": "e35e2614-693b-4ea4-94b7-bdc5a5925c49",
            "summarizeBy": "none",
            "type": "calculated"
          },
          {
            "name": "Belop",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "double",
            "formatString": "#,0.00",
            "lineageTag": "1c22eddb-e5e2-4238-bf4a-4e946d18c78c",
            "sourceColumn": "Belop",
            "summarizeBy": "sum"
          },
          {
            "name": "Belop2",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "dataType": "double",
            "lineageTag": "5caa57fc-0ea4-42a7-abaf-8eb4d3462451",
            "sourceColumn": "Belop2",
            "summarizeBy": "sum"
          },
          {
            "name": "BilagsId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "PostalCode",
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "6ab8dd44-08b8-4374-bd13-465b1d05d8d6",
            "sourceColumn": "BilagsId",
            "summarizeBy": "count"
          },
          {
            "name": "Dato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "changedProperties": [
              {
                "property": "FormatString"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Short Date",
            "lineageTag": "3a585baf-7935-4a8e-ad9b-79ddc1660824",
            "sourceColumn": "Dato",
            "summarizeBy": "none"
          },
          {
            "name": "Description",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a0dd5184-ce9e-4cde-ade8-2b4b3d42ca4e",
            "sourceColumn": "Description",
            "summarizeBy": "none"
          },
          {
            "name": "Eyeshare",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "WebUrl",
            "dataType": "string",
            "lineageTag": "9c41479f-2755-4b7a-928d-217d06d40860",
            "sourceColumn": "Eyeshare",
            "summarizeBy": "none"
          },
          {
            "name": "FakturaDato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "dateTime",
            "formatString": "General Date",
            "lineageTag": "d7234918-23da-4f6a-b09e-67ede1a4ebca",
            "sourceColumn": "FakturaDato",
            "summarizeBy": "none"
          },
          {
            "name": "FakturaId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "3fbe2d07-ab54-4f32-b9b1-8df4d5ede977",
            "sourceColumn": "FakturaId",
            "summarizeBy": "none"
          },
          {
            "name": "KontoLnk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "1d5caeee-0a19-4823-a69e-fa747fac96e8",
            "sourceColumn": "KontoLnk",
            "summarizeBy": "none"
          },
          {
            "name": "KundeLnk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "PostalCode",
            "dataType": "string",
            "lineageTag": "db05ca13-7304-4002-9fa1-2f786c4ff192",
            "sourceColumn": "KundeLnk",
            "summarizeBy": "none"
          },
          {
            "name": "LevLnk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataCategory": "PostalCode",
            "dataType": "string",
            "lineageTag": "3cbf8166-5aa4-4d5e-a40a-851f96359018",
            "sourceColumn": "LevLnk",
            "summarizeBy": "none"
          },
          {
            "name": "PostDato",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              },
              {
                "name": "UnderlyingDateTimeDataType",
                "value": "Date"
              }
            ],
            "dataType": "dateTime",
            "formatString": "Long Date",
            "lineageTag": "371dd361-e545-4af7-8a0a-8b907d90daae",
            "sourceColumn": "PostDato",
            "summarizeBy": "none"
          },
          {
            "name": "ProsjektLnk",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "a8a3f71d-55f4-4155-9fa8-323499e11d64",
            "sourceColumn": "ProsjektLnk",
            "summarizeBy": "none"
          },
          {
            "name": "SelskapsId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "cd3c0bbd-02c8-4df0-b591-1c72437bc0ea",
            "sourceColumn": "SelskapsId",
            "summarizeBy": "none"
          },
          {
            "name": "SettId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "expression": "\"Act\"",
            "isDataTypeInferred": true,
            "lineageTag": "59e4ac18-ff64-44c8-99d2-dc62b7029b59",
            "summarizeBy": "none",
            "type": "calculated"
          }
        ],
        "lineageTag": "6038b756-ded7-4865-bc72-41e90296aa81",
        "measures": [
          {
            "name": "Regnskap",
            "expression": "SUM(Regnskap[Belop])",
            "formatString": "#,0",
            "lineageTag": "d8cd861d-59d0-4c4d-b689-fa5cdac3b990"
          },
          {
            "name": "RegnskapUtenFortegn",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "SUMX(Regnskap,Regnskap[Belop]*RELATED(Kontoplan[Fortegn]))",
            "lineageTag": "f5003bd8-b422-46d8-94f6-51523b9b13aa"
          },
          {
            "name": "Totalbalanse",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE([RegnskapUtenFortegn],Kontoplan[Konto]<>\"99\")-CALCULATE([Regnskap],Kontoplan[Konto]=\"99\")",
            "lineageTag": "b7f5f053-60ae-4570-a181-7ab35db45ed2"
          },
          {
            "name": "BalanseFraRegnskap",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "DIVIDE(CALCULATE(TOTALYTD([RegnskapUtenFortegn],Kalender[Dato]),Kontoplan[Rapport]=\"Balanse\")+CALCULATE([RegnskapUtenFortegn],Kontoplan[Rapport]=\"Balanse\",FILTER(ALL(Kalender),Kalender[År]=MAX(Kalender[År])-1),NOT(IB[IB]=\"IB\")),[Rapportfaktor])",
            "lineageTag": "aee05cb7-d1d8-467f-bb50-3a34fe860fe7"
          },
          {
            "name": "CompanyId_",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CONCATENATE(\"\",MAX(Regnskap[SelskapsId]))",
            "lineageTag": "1952d958-fdcd-49c7-b7af-965ed0889cb0"
          },
          {
            "name": "Test",
            "expression": "CALCULATE([RegnskapUtenFortegn],Kontoplan[Rapport]=\"Balanse\",FILTER(ALL(Kalender),Kalender[År]=MAX(Kalender[År])-1),NOT(IB[IB]=\"IB\"))",
            "formatString": "#,0",
            "lineageTag": "f3e0e20f-a9ab-4321-8cff-e4374493fd15"
          },
          {
            "name": "Antall av SelskapsId",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "COUNTA('Regnskap'[SelskapsId])",
            "lineageTag": "d982230d-51fc-4939-a553-a85f6b712ba5"
          },
          {
            "name": "Saldobalanse",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "DIVIDE([SaldoResultat]+[SaldoBal],[Rapportfaktor])",
            "formatString": "#,0",
            "lineageTag": "37410272-a289-45e1-a6a3-4e71c22bd8b7"
          },
          {
            "name": "SaldoResultat",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "SUMX(VALUES(Kontoplan),CALCULATE(SUMX(FILTER(Kontoplan,LEFT(Kontoplan[Konto],1)>\"2\"),SUM(Regnskap[Belop])),FILTER(ALL(Kalender),Kalender[YY-Tx]<=MAX(Kalender[YY-Tx])&&Kalender[År]=MAX(Kalender[år]))))",
            "lineageTag": "f6da2a7f-fdb1-4cda-b4eb-ed8f0a23a65e"
          },
          {
            "name": "SaldoBal",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "SUMX(VALUES(Kontoplan),CALCULATE(TOTALYTD(SUM(Regnskap[Belop]),Kalender[Dato]),Kontoplan[Rapport]=\"Balanse\")+CALCULATE(SUM(Regnskap[Belop]),Kontoplan[Rapport]=\"Balanse\",FILTER(ALL(Kalender),Kalender[År]=MAX(Kalender[År])-1),NOT(IB[IB]=\"IB\")))",
            "formatString": "#,0",
            "lineageTag": "8de18b17-438d-4ba1-8630-6176de850705"
          },
          {
            "name": "Test99",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "CALCULATE (",
              "        SUM ( Regnskap[Belop] ),",
              "        CALCULATETABLE ( VALUES ( Prosjekt[HovedArbeidProsjektNr] ), ProPrognose )",
              "    )"
            ],
            "lineageTag": "341b388b-0f20-4613-af96-74148d1b43e4"
          }
        ],
        "partitions": [
          {
            "name": "Regnskap",
            "mode": "import",
            "queryGroup": "Fakta",
            "source": {
              "expression": [
                "let",
                "",
                "//Procedure",
                "    FilterSelskap = Table.NestedJoin(SQL_Company,{\"InfoEasyId\"}, SQL_GeneralLedger,{\"FirmaId\"},\"SelskapsId\",JoinKind.Inner),",
                "    HentData = Table.ExpandTableColumn(FilterSelskap, \"SelskapsId\", {\"HovedbokId\", \"KontoId\", \"BilagsNummer\", \"Dato\", \"DimensjonA\", \"DimensjonB\", \"DimensjonC\", \"DimensjonD\", \"ProsjektId\", \"MomsKode\", \"MotkontoType\", \"MotKonto\", \"NettoBelop\", \"TekstKode\", \"Tekst\", \"Periode\", \"Aar\", \"BunkeNummer\", \"RegistreringId\", \"Mengde\", \"KontoLnk\", \"Eyeshare\", \"LevLnk\", \"KundeLnk\", \"DimAlnk\", \"ProsjektLnk\", \"DateLnk\"}, {\"HovedbokId\", \"KontoId\", \"BilagsNummer\", \"Dato\", \"DimensjonA\", \"DimensjonB\", \"DimensjonC\", \"DimensjonD\", \"ProsjektId\", \"MomsKode\", \"MotkontoType\", \"MotKonto\", \"NettoBelop\", \"TekstKode\", \"Tekst\", \"Periode\", \"Aar\", \"BunkeNummer\", \"RegistreringId\", \"Mengde\", \"KontoLnk\", \"Eyeshare\", \"LevLnk\", \"KundeLnk\", \"DimAlnk\", \"ProsjektLnk\", \"DateLnk\"}),",
                "    HPlink = Table.AddColumn(HentData, \"HPlink\", each Text.BeforeDelimiter([ProsjektId], \"-\"), type text),",
                "    FilterData = Table.SelectRows(HPlink, each [Aar] <= SisteAar and [Aar] >= (SisteAar-AntallAar)),",
                "    Prosjektliste = Table.SelectColumns(FilterData,{\"HPlink\"}),",
                "    UnikeProsjekter = Table.Distinct(Prosjektliste),",
                "    KunProsjektId = Table.SelectRows(UnikeProsjekter, each ([HPlink] <> \"\")),",
                "    ProsjektPosterAlle = Table.NestedJoin(HPlink,{\"HPlink\"},KunProsjektId,{\"HPlink\"},\"Filtered Rows1\",JoinKind.Inner),",
                "    ProsjektPosterGml = Table.SelectRows(ProsjektPosterAlle, each [Aar] < SisteAar - AntallAar),",
                "    FjernProsjektLink = Table.RemoveColumns(ProsjektPosterGml,{\"Filtered Rows1\", \"DateLnk\"}),",
                "    ResetDato = Table.AddColumn(FjernProsjektLink, \"DateLnk\", each #date((SisteAar)-(AntallAar),1,1)),",
                "    Datasett = Table.Combine({FilterData, ResetDato}),",
                "    VelgKolonner = Table.RemoveColumns(Datasett,{\"InfoEasyId\", \"HovedbokId\", \"DimensjonA\", \"DimensjonB\", \"DimensjonC\", \"DimensjonD\", \"MomsKode\", \"MotkontoType\", \"MotKonto\", \"TekstKode\", \"Tekst\", \"Periode\", \"Aar\", \"BunkeNummer\", \"RegistreringId\", \"Mengde\", \"KontoLnk\", \"DimAlnk\", \"ProsjektLnk\", \"HPlink\"}),",
                "    LevNummer = Table.TransformColumns(VelgKolonner, {{\"LevLnk\", each Text.AfterDelimiter(_, \"-\"), type text}}),",
                "    KundeNr = Table.TransformColumns(LevNummer, {{\"KundeLnk\", each Text.AfterDelimiter(_, \"-\"), type text}}),",
                "    KolonneNavn = Table.RenameColumns(KundeNr,{{\"Dato\", \"PostDato\"}, {\"DateLnk\", \"Dato\"}, {\"NettoBelop\", \"Belop\"}, {\"BilagsNummer\", \"BilagsId\"}, {\"LevLnk\", \"Lev\"}, {\"KundeLnk\", \"Kunde\"}}),",
                "    Datatyper = Table.TransformColumnTypes(KolonneNavn,{{\"BilagsId\", type text}, {\"KontoId\", type text}}),",
                "    NyKundeLnk = Table.AddColumn(Datatyper, \"KundeLnk\", each if Text.Length([Kunde])>0 then Text.From([CompanyId])&\"-\"&Text.From([Kunde]) else null, type text),",
                "    NyLevLnk = Table.AddColumn(NyKundeLnk, \"LevLnk\", each if Text.Length([Lev])>0 then Text.From([CompanyId])&\"-\"&Text.From([Lev]) else null, type text),",
                "    NyProsjektLnk = Table.AddColumn(NyLevLnk, \"ProsjektLnk\", each if [ProsjektId]<> null then Text.From([CompanyId])&\"-\"&Text.From([ProsjektId]) else null, type text),",
                "    NyKontoLnk = Table.AddColumn(NyProsjektLnk, \"KontoLnk\", each if [KontoId]<> null then Text.From([CompanyId])&\"-\"&Text.From([KontoId]) else null, type text),",
                "    fraEngelsk2Norsk = Table.RenameColumns(NyKontoLnk,{{\"CompanyId\", \"SelskapsId\"}}),",
                "    FjernGmlLnkFelt = Table.RemoveColumns(fraEngelsk2Norsk,{\"ProsjektId\", \"Lev\", \"Kunde\", \"KontoId\"}),",
                "    FiltrerResultat = Table.SelectRows(fraEngelsk2Norsk, each not Text.StartsWith([KontoId], \"1\") and not Text.StartsWith([KontoId], \"2\")),",
                "    FjernKonto = Table.RemoveColumns(FiltrerResultat,{\"KontoId\", \"KontoLnk\"}),",
                "    LeggTilMotkonto = Table.AddColumn(FjernKonto, \"KontoLnk\", each Text.From([SelskapsId])&\"-99\"),",
                "    BalanseMotposter = Table.Group(LeggTilMotkonto, {\"SelskapsId\", \"Dato\", \"KontoLnk\"}, {{\"Belop\", each List.Sum([Belop]), type number}}),",
                "    Regnskap = Table.Combine({FjernGmlLnkFelt, BalanseMotposter}),",
                "    #\"Merged Queries\" = Table.NestedJoin(Regnskap,{\"Company\", \"BilagsId\"},SP_ProNummerEndring,{\"CompanyId\", \"GLEntryNo\"},\"ProNummerEndring\",JoinKind.LeftOuter),",
                "    #\"Expanded ProNummerEndring\" = Table.ExpandTableColumn(#\"Merged Queries\", \"ProNummerEndring\", {\"ProjectId\"}, {\"ProjectId\"}),",
                "    #\"Added Custom\" = Table.AddColumn(#\"Expanded ProNummerEndring\", \"Custom\", each if [ProjectId] = null then [ProsjektLnk] else Text.From([SelskapsId])&\"-\"&Text.From([ProjectId])),",
                "    #\"Removed Columns\" = Table.RemoveColumns(#\"Added Custom\",{\"ProsjektLnk\", \"ProjectId\", \"Company\"}),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Removed Columns\",{{\"Custom\", \"ProsjektLnk\"}}),",
                "    EyeShareSource = Table.NestedJoin(SQL_EyeShare,{\"FirmaId\"}, SQL_Company,{\"InfoEasyId\"}, \"SelskapsId\",JoinKind.Inner),",
                "    #\"Expanded SelskapsId\" = Table.ExpandTableColumn(EyeShareSource, \"SelskapsId\", {\"CompanyId\"}, {\"CompanyId\"}),",
                "    FilterZeroProId = Table.SelectRows(#\"Expanded SelskapsId\", each ([ProsjektId] <> null and [ProsjektId] <> \"\" and [KontoId] <> null and [KontoId] <> \"\" )),",
                "    LevLnk = Table.AddColumn(FilterZeroProId, \"LevLnk\", each if Text.Length([LevId]) > 0 then Text.From([CompanyId])&\"-\"&Text.From([LevId]) else null),",
                "    ProsjektLnk = Table.AddColumn(LevLnk, \"ProsjektLnk\", each if Text.Length([ProsjektId]) > 0 then Text.From([CompanyId])&\"-\"&Text.From([ProsjektId]) else null),",
                "    KontoLnk = Table.AddColumn(ProsjektLnk, \"KontoLnk\", each if Text.Length([KontoId]) > 0 then Text.From([CompanyId])&\"-\"&Text.From([KontoId]) else null),",
                "    RemoveCol = Table.RemoveColumns(KontoLnk,{\"FirmaId\", \"LevId\", \"KontoId\", \"ProsjektId\"}),",
                "    #\"Renamed Columns1\" = Table.RenameColumns(RemoveCol,{{\"EstNetAmount\", \"Belop2\"}, {\"CompanyId\", \"SelskapsId\"}, {\"EyeShare\", \"Eyeshare\"}}),",
                "    #\"Appended Query\" = Table.Combine({#\"Renamed Columns\", #\"Renamed Columns1\"}),",
                "    ORG = Table.TransformColumnTypes(#\"Appended Query\",{{\"SelskapsId\", Int64.Type}, {\"BilagsId\", Int64.Type}, {\"PostDato\", type date}, {\"Belop\", type number}, {\"Eyeshare\", type text}, {\"Dato\", type date}, {\"KundeLnk\", type text}, {\"LevLnk\", type text}, {\"KontoLnk\", type text}, {\"ProsjektLnk\", type text}, {\"FakturaId\", type text}, {\"FakturaDato\", type datetime}, {\"Belop2\", type number}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(ORG, each ([KontoLnk] = \"3-2900\") and ([ProsjektLnk] <> null)),",
                "    #\"Multiplied Column1\" = Table.TransformColumns(#\"Filtered Rows\", {{\"Belop\", each _ * 1, type number}}),",
                "    #\"398\" = Table.ReplaceValue(#\"Multiplied Column1\",\"2900\",\"398\",Replacer.ReplaceText,{\"KontoLnk\"}),",
                "    #\"Multiplied Column\" = Table.TransformColumns(#\"398\", {{\"Belop\", each _ * -1, type number}}),",
                "    #\"399\" = Table.ReplaceValue(#\"Multiplied Column\",\"398\",\"399\",Replacer.ReplaceText,{\"KontoLnk\"}),",
                "    #\"Appended Query1\" = Table.Combine({#\"ORG\", #\"398\", #\"399\"})",
                "in",
                "    #\"Appended Query1\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Selskap",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "SelskapNavn",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "895aa054-8fc5-4310-ae96-a378abf5c68c",
            "sourceColumn": "SelskapNavn",
            "summarizeBy": "none"
          },
          {
            "name": "SelskapsId",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "formatString": "0",
            "lineageTag": "213a6fcf-223b-4d7b-b223-41ef272bc9a2",
            "sourceColumn": "SelskapsId",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "22b2107b-53b8-4dd7-958d-913003d5dab9",
        "measures": [
          {
            "name": "Selskap",
            "expression": "MAX(Selskap[SelskapNavn])",
            "lineageTag": "ad597cc3-a035-4c62-8c50-eac9b469d745"
          },
          {
            "name": "User",
            "expression": "USERPRINCIPALNAME()",
            "lineageTag": "1bc109bd-4ab2-4b9d-92cc-a5e84ffbc0ee"
          }
        ],
        "partitions": [
          {
            "name": "Selskap-4b2f9948-7c94-4e5a-885c-5f7ee325a4f2",
            "mode": "import",
            "queryGroup": "Dimensjoner",
            "source": {
              "expression": [
                "let",
                "    //SharePoint",
                "",
                "    SharePoint = SharePoint.Tables(SharePointSite1, [ApiVersion = 15]),",
                "    Company = SharePoint{[Id=\"c6c05096-82a1-486e-af74-d9aca84f2740\"]}[Items],",
                "    SelectColumns = Table.SelectColumns(Company,{\"Title\", \"CompanyId\"}),",
                "    RenameColumns = Table.RenameColumns(SelectColumns,{{\"Title\", \"Company\"}, {\"CompanyId\", \"SelskapsId\"}}),",
                "    #\"Filtered Rows\" = Table.SelectRows(RenameColumns, each [Company] = companyId),",
                "    #\"Renamed Columns\" = Table.RenameColumns(#\"Filtered Rows\",{{\"Company\", \"SelskapNavn\"}}),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Renamed Columns\",{{\"SelskapNavn\", type text}, {\"SelskapsId\", Int64.Type}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Tmp_ProsjektPowerApps",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Table"
          }
        ],
        "columns": [
          {
            "name": "HovedArbeidProsjektNr",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "7f9f7920-804e-43bc-b66b-8374fb4854a9",
            "sourceColumn": "HovedArbeidProsjektNr",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "f5dc325b-12b6-486d-9ec5-f60ccd3e1c8c",
        "partitions": [
          {
            "name": "Tmp_ProsjektPowerApps-d068872b-4cc7-4660-89a4-bf9c997ca5a5",
            "mode": "import",
            "queryGroup": "Dimensjoner",
            "source": {
              "expression": [
                "let",
                "    Source = Prosjekt,",
                "    #\"Removed Other Columns\" = Table.SelectColumns(Source,{\"HovedArbeidProsjektNr\"}),",
                "    #\"Removed Duplicates\" = Table.Distinct(#\"Removed Other Columns\"),",
                "    #\"Filtered Rows\" = Table.SelectRows(#\"Removed Duplicates\", each [HovedArbeidProsjektNr] <> null),",
                "    #\"Changed Type\" = Table.TransformColumnTypes(#\"Filtered Rows\",{{\"HovedArbeidProsjektNr\", type text}})",
                "in",
                "    #\"Changed Type\""
              ],
              "type": "m"
            }
          }
        ]
      },
      {
        "name": "Utestående",
        "calculationGroup": {
          "calculationItems": [
            {
              "name": "Ikke forfalt",
              "expression": [
                "",
                "VAR _To = 0",
                "RETURN",
                "    CALCULATE(",
                "        [SaldoNet],",
                "        'KundePoster'[DaysOverdue] <= _To",
                "    )"
              ],
              "ordinal": 1
            },
            {
              "name": "< 30 dager",
              "expression": [
                "",
                "VAR _From = 1",
                "VAR _To = 29",
                "RETURN",
                "    CALCULATE(",
                "        [SaldoNet],",
                "        'KundePoster'[DaysOverdue] >= _From,",
                "        'KundePoster'[DaysOverdue] <= _To",
                "    )"
              ],
              "ordinal": 2
            },
            {
              "name": "< 60 dager",
              "expression": [
                "",
                "VAR _From = 30",
                "VAR _To = 59",
                "RETURN",
                "    CALCULATE(",
                "        [SaldoNet],",
                "        'KundePoster'[DaysOverdue] >= _From,",
                "        'KundePoster'[DaysOverdue] <= _To",
                "    )"
              ],
              "ordinal": 3
            },
            {
              "name": "< 90 dager",
              "expression": [
                "",
                "VAR _From = 60",
                "VAR _To = 89",
                "RETURN",
                "    CALCULATE(",
                "        [SaldoNet],",
                "        'KundePoster'[DaysOverdue] >= _From,",
                "        'KundePoster'[DaysOverdue] <= _To",
                "    )"
              ],
              "ordinal": 4
            },
            {
              "name": ">= 90 dager",
              "expression": [
                "",
                "VAR _From = 90",
                "",
                "RETURN",
                "    CALCULATE(",
                "        [SaldoNet],",
                "        'KundePoster'[DaysOverdue] >= _From",
                "    )"
              ],
              "ordinal": 5
            },
            {
              "name": "Utestående",
              "expression": [
                "",
                "SELECTEDMEASURE()"
              ],
              "ordinal": 0
            }
          ],
          "precedence": 1
        },
        "columns": [
          {
            "name": "Gruppe",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "string",
            "lineageTag": "97785f02-5644-480d-9d18-061f4b27f523",
            "sortByColumn": "Ordinal",
            "sourceColumn": "Name",
            "summarizeBy": "none"
          },
          {
            "name": "Ordinal",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "dataType": "int64",
            "isHidden": true,
            "lineageTag": "47b76dd6-69cb-46c4-aeb1-9482f3e6ca25",
            "sourceColumn": "Ordinal",
            "summarizeBy": "sum"
          }
        ],
        "lineageTag": "765f224d-ab84-4f66-a059-f875c2262bdb",
        "partitions": [
          {
            "name": "Partition",
            "mode": "import",
            "source": {
              "type": "calculationGroup"
            }
          }
        ]
      },
      {
        "name": "WorkInProgress",
        "annotations": [
          {
            "name": "PBI_ResultType",
            "value": "Text"
          }
        ],
        "columns": [
          {
            "name": "WorkInProgress",
            "annotations": [
              {
                "name": "SummarizationSetBy",
                "value": "Automatic"
              }
            ],
            "changedProperties": [
              {
                "property": "IsHidden"
              }
            ],
            "dataType": "string",
            "isHidden": true,
            "lineageTag": "91eebb75-3500-4d36-b743-21bd479eb941",
            "sourceColumn": "WorkInProgress",
            "summarizeBy": "none"
          }
        ],
        "lineageTag": "b0765e7d-0dcc-47d7-a1a5-54aa902ae677",
        "measures": [
          {
            "name": "ProKostEst",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "SUM(HpPrognose[Kostnader]) ",
            "formatString": "#,0",
            "lineageTag": "a124779f-3372-4b0b-ba0a-9511f02e2aca"
          },
          {
            "name": "ProKostPer",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": [
              "CALCULATE (",
              "            SUMX (",
              "                CALCULATETABLE ( VALUES ( Prosjekt[ProsjektNummer] ),Prosjekt[WIPfilter]=1), ",
              "                [Regnskap] / MIN ( Faktorer[Faktor] )",
              "            ),",
              "            Kontoplan[Rapport] = \"Resultat\",Kontoplan[Nivå1]<>\"Inntekter\"   ",
              "        )"
            ],
            "lineageTag": "64e42299-a757-40b7-ad28-47a6cfe9c190"
          },
          {
            "name": "ProKostYTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "TOTALYTD([ProKostPer],Kalender[Dato])",
            "lineageTag": "1d5c105e-c795-4c4e-9e14-44161bef804e"
          },
          {
            "name": "ProKostTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE([ProKostPer],FILTER(ALL(Kalender),Kalender[Dato]<=MAX(Kalender[Dato])))",
            "lineageTag": "82944f6a-9860-44b5-8a66-076ba8015dad"
          },
          {
            "name": "ProFremdriftTD",
            "expression": "IF(ISBLANK(DIVIDE([ProKostTD],[ProKostEst])),0,IF(DIVIDE([ProKostTD],[ProKostEst])>1,1,DIVIDE([ProKostTD],[ProKostEst],1)))",
            "formatString": "0.0\\ %;-0.0\\ %;0.0\\ %",
            "lineageTag": "e5cdd1dc-e869-48f2-b758-15e0a457f88a"
          },
          {
            "name": "ProInntektEst",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "SUM(HpPrognose[Inntekter])",
            "formatString": "#,0",
            "lineageTag": "d2aeab39-078d-4761-81a3-1ea538159169"
          },
          {
            "name": "ProInntektTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "SUMX(VALUES(Prosjekt[HP Beskrivelse]),[ProInntektEst]*[ProFremdriftTD])",
            "lineageTag": "ab1b1970-ffec-4e75-86ec-e36e40c66ec6"
          },
          {
            "name": "ProInntektPer",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[ProInntektTD]-CALCULATE([ProInntektTD],DATEADD(Kalender[Dato],-1,MONTH))",
            "lineageTag": "6f5cc2f8-3d6d-451c-9609-8aef0aa5a4cb"
          },
          {
            "name": "ProInntektYTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[ProInntektTD] - CALCULATE([ProInntektTD],FILTER(ALL(Kalender),Kalender[År]=YEAR(MAX(Kalender[Dato]))-1),Kalender[MndNo]=12)",
            "lineageTag": "377e20d9-a2b1-443d-8d0f-9556f0811d07"
          },
          {
            "name": "InntekterRegnskap",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "CALCULATE([Virkelig YTD],KR_Resultat[Nivå1]=\"Inntekter\")",
            "formatString": "#,0",
            "lineageTag": "59ff4003-ba7e-4606-bf8b-40b17534479e"
          },
          {
            "name": "WIP",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[ProInntektTD]-[FakturertAkk]+[ForskuddAkk]",
            "formatString": "#,0",
            "lineageTag": "325c1750-2fe0-4561-9794-ae7d1aa0b3a0"
          },
          {
            "name": "Inntekter",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[ProInntektPer]",
            "lineageTag": "5e88d4b1-2b7e-4127-8e95-be853e7aba9f"
          },
          {
            "name": "InntektsbudsjettYTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "TOTALYTD(CALCULATE(-[Budsjett],KR_Resultat[Nivå1]=\"Inntekter\"),Kalender[Dato])",
            "lineageTag": "7d3dc952-c714-4232-b57e-8d601e79e7b1"
          },
          {
            "name": "TestProsjekt",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "IF(NOT(ISBLANK([ProBidragYTD])),RANKX(ALL(TmpHovedprosjekt),-[ProBidragYTD]))",
            "lineageTag": "fb9b5ace-2061-4b72-8b63-482bac725701"
          },
          {
            "name": "Inntektstekst",
            "expression": "CONCATENATE(\"Inntekt pr. \",COMBINEVALUES(\"-\",LOWER(SELECTEDVALUE(Kalender[Mnd])),SELECTEDVALUE(Kalender[År])) )",
            "lineageTag": "505e0c2a-dbeb-4633-9a5d-30091e6943a9"
          },
          {
            "name": "ORtekst",
            "expression": "\"Ordre\"",
            "lineageTag": "6e6a6b5f-f171-43bc-af3d-fd9bd05bdd1d"
          },
          {
            "name": "ORteksttotalt",
            "expression": "\"reserve totalt\"",
            "lineageTag": "a9bbdf46-800a-4ccd-ac62-472781053dcb"
          },
          {
            "name": "ORtekstiår",
            "expression": "CONCATENATE(\"reserve for \",SELECTEDVALUE(Kalender[År]))",
            "lineageTag": "073d005c-cbef-43c0-8f89-508c958cedf8"
          },
          {
            "name": "Inntektsmåltekst",
            "expression": "CONCATENATE(\"Inntektsmål for \",SELECTEDVALUE(Kalender[År]))",
            "lineageTag": "c61eafde-01ba-48fc-8851-3acb20b8f5c2"
          },
          {
            "name": "OItekstiår",
            "expression": "CONCATENATE(\"inngang i \",SELECTEDVALUE(Kalender[År]))",
            "lineageTag": "006e6ecd-cc92-4015-a629-68a2febea05c"
          },
          {
            "name": "AvvikInntekt",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[TotalInntektYTD]-[InntektsbudsjettYTD]",
            "lineageTag": "753d4efe-040e-4034-829f-a89f057dbc2b"
          },
          {
            "name": "InntektsGapYT",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[PrognoseOrdre]-[InntektBudYT] ",
            "lineageTag": "eb51d8d8-cb0c-4386-8747-7aed2ca59064"
          },
          {
            "name": "BudsjettBidragYTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "TOTALYTD(CALCULATE(-[Budsjett],KR_Resultat[Rekkefølge]<4),Kalender[Dato])",
            "lineageTag": "2a8553cd-e621-4186-93f6-606b09f4d4a6"
          },
          {
            "name": "ProBidragEst",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "-SUM(HpPrognose[Inntekter])-SUM(HpPrognose[Kostnader])",
            "lineageTag": "fecf9142-927e-4fcd-94ee-223255e52597"
          },
          {
            "name": "ProBidragTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "SUMX(VALUES(Prosjekt[HP Beskrivelse]),[ProInntektEst]*[ProFremdriftTD])-[ProKostTD]",
            "lineageTag": "6d936547-22d4-46a0-a291-07aa773c2840"
          },
          {
            "name": "Bidragsreserve",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[DB Prognose]-[Bidrag]",
            "formatString": "#,0",
            "lineageTag": "898e67cc-3237-439f-82c5-684c6a4f1b9e"
          },
          {
            "name": "BidragsBudYT",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE([Budsjett YT],KR_Resultat[Rekkefølge]=1) - CALCULATE([Budsjett YT],KR_Resultat[Rekkefølge]=2) ",
            "lineageTag": "9d468b68-8ebc-4db3-82cb-69b361816d05"
          },
          {
            "name": "BidragsreserveTY",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "SUMX(VALUES(Prosjekt[HP Beskrivelse]),CALCULATE(IF(YEAR(MAX(HpPrognose[Slutt]))<=YEAR(MAX(Kalender[Dato])),[Bidragsreserve],[Bidragsreserve]*(1-DIVIDE(MAX(HpPrognose[Slutt])-DATE(YEAR(MAX(Kalender[Dato])),12,31),SUM(HpPrognose[Varighet]))))))",
            "lineageTag": "8849f538-c422-472a-8e42-4967197d4aaf"
          },
          {
            "name": "PrognoseBidragTY",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "[TotalBidragYTD]+[BidragsreserveTY]",
            "formatString": "#,0",
            "lineageTag": "444fcfba-f878-4f24-a8d8-02d9d95b75d9"
          },
          {
            "name": "Bidragsgap",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[PrognoseBidragTY]-[BidragsBudYT]",
            "lineageTag": "ec6ca9fe-0235-4302-9679-45f0dc43bbdb"
          },
          {
            "name": "AvvikBidrag",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[TotalBidragYTD]-[BudsjettBidragYTD]",
            "lineageTag": "e6aea704-c536-46fe-aa33-d60a36bd5154"
          },
          {
            "name": "BRtekst",
            "expression": "\"Bidrags-\"",
            "lineageTag": "588d7c83-c974-4c22-ae92-1ea4b5c81843"
          },
          {
            "name": "Bidragstekst",
            "expression": "CONCATENATE(\"Bidrag pr. \",COMBINEVALUES(\"-\",LOWER(SELECTEDVALUE(Kalender[Mnd])),SELECTEDVALUE(Kalender[År])) )",
            "lineageTag": "6818a553-833c-4e03-b07b-b6bad646e738"
          },
          {
            "name": "Bidragsmåltekst",
            "expression": "CONCATENATE(\"Bidragsmål for \",SELECTEDVALUE(Kalender[År]))",
            "lineageTag": "e05c8a96-580f-46d0-9b5b-036387fba61f"
          },
          {
            "name": "RankByBidrag",
            "expression": "CALCULATE([ProInntektYTD],FILTER(TmpHovedprosjekt,IF(NOT(ISBLANK([ProBidragYTD])),RANKX(ALL(TmpHovedprosjekt),[ProBidragYTD])<=3)))",
            "formatString": "0",
            "lineageTag": "73f38102-1ea3-44f9-a37e-bb0cb1cea429"
          },
          {
            "name": "RankByBidragNeg",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE([ProBidragYTD],FILTER(TmpHovedprosjekt,IF(NOT(ISBLANK([ProBidragYTD])),RANKX(ALL(TmpHovedprosjekt),-[ProBidragYTD])<=3)))",
            "lineageTag": "d1cba7aa-2450-40c1-912a-5b21aa7467b8"
          },
          {
            "name": "ProBidragYTD",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[ProBidragTD] - CALCULATE([ProBidragTD],FILTER(ALL(Kalender),Kalender[År]=YEAR(MAX(Kalender[Dato]))-1),Kalender[MndNo]=12)",
            "lineageTag": "decb7f74-9008-4980-8c58-cf7ebffb0526"
          },
          {
            "name": "MarginReserve",
            "expression": "DIVIDE([Bidragsreserve],[Ordrereserve])",
            "formatString": "0.0\\ %;-0.0\\ %;0.0\\ %",
            "lineageTag": "2d508494-9bec-4ab6-acd4-9410312aa11c"
          },
          {
            "name": "InntektsbudsjettPeriode",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "CALCULATE(-[Budsjett],KR_Resultat[Nivå1]=\"Inntekter\")",
            "lineageTag": "e143f821-d7e9-48ae-a56b-04baf63531bb"
          },
          {
            "name": "orTYAll",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[orTY]+[SalgAlliå]",
            "lineageTag": "2c00bb63-ca80-4289-b72f-1127b44f2ee0"
          },
          {
            "name": "SalgAlliå",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "SUMX(VALUES(Prosjekt[HP Beskrivelse]),CALCULATE(IF(YEAR(CALCULATE(MAX(Ordreinngang[FerdigDato]),ALL(Kalender)))<=YEAR(MAX(Kalender[Dato])),[SalgEtterPeriode],[SalgEtterPeriode]*(1-DIVIDE((CALCULATE(MAX(Ordreinngang[FerdigDato]),ALL(Kalender))-DATE(YEAR(MAX(Kalender[Dato])),12,31))*1,CALCULATE(MAX(Ordreinngang[Duration]),ALL(Kalender)))))))",
            "formatString": "#,0",
            "lineageTag": "93885276-950c-46b5-8559-78f62aad9e2c"
          },
          {
            "name": "Date1",
            "expression": "CALCULATE(MAX(HpPrognose[Slutt]),ALL(Kalender))",
            "formatString": "General Date",
            "lineageTag": "9e8d78eb-aa34-4e74-ba99-e4966c393af3"
          },
          {
            "name": "Date2",
            "expression": "CALCULATE(MAX(HpPrognose[Varighet]),ALL(Kalender))",
            "formatString": "0",
            "lineageTag": "ef5184fa-c23e-434c-88cb-00ad54b69ce3"
          },
          {
            "name": "PrognoseOrdreAll",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[PrognoseOrdre]+[SalgAlliå]",
            "lineageTag": "f9d80b6f-f75f-491b-be27-04c1a79467da"
          },
          {
            "name": "InntektsGapYTAll",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "[InntektsGapYT]+[SalgAlliå]",
            "lineageTag": "3b6ef43b-dabc-4243-8ebd-584cfb5ee5dd"
          },
          {
            "name": "Snitt virkelig",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "DIVIDE([TotalInntektYTD],SELECTEDVALUE(Kalender[MndNo]))",
            "lineageTag": "77827e88-12db-4080-8da5-1f5398a089ec"
          },
          {
            "name": "Snitt budsjett",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "DIVIDE([InntektsbudsjettYTD],SELECTEDVALUE(Kalender[MndNo]))",
            "lineageTag": "c306d090-a12a-4ea4-b72a-d5e5a3f989e3"
          },
          {
            "name": "Snitt reserve",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "DIVIDE([orTY],12-SELECTEDVALUE(Kalender[MndNo]))",
            "lineageTag": "a72340fe-6e74-43dc-807f-7e84cfc2f1c6"
          },
          {
            "name": "Snitt rest budsjett",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "DIVIDE([InntektBudYT]-[TotalInntektYTD],12-SELECTEDVALUE(Kalender[MndNo]))",
            "lineageTag": "153e272e-5f3f-43e6-a907-76f144fe249d"
          },
          {
            "name": "ProFremdriftTDnew",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isGeneralNumber\":true}"
              }
            ],
            "expression": "DIVIDE([ProKostTD],[ProKostEst],0)",
            "lineageTag": "59f91e78-efa0-4db7-b219-7039fbbe34b1"
          },
          {
            "name": "1530",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "SUMX(VALUES(Prosjekt[HP Beskrivelse]),if([VIAakkumulert] > 0,  [VIAakkumulert]))",
            "formatString": "#,0",
            "lineageTag": "d55969c6-c995-4735-907c-616d8c465603"
          },
          {
            "name": "2865",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "SUMX(VALUES(Prosjekt[HP Beskrivelse]),if([VIAakkumulert] < 0,[VIAakkumulert]))",
            "formatString": "#,0",
            "lineageTag": "00131f55-e06d-45e8-b3e7-70a8aca7ae81"
          },
          {
            "name": "3920",
            "annotations": [
              {
                "name": "PBI_FormatHint",
                "value": "{\"isDecimal\":true}"
              }
            ],
            "expression": "-[2865]-[1530]",
            "formatString": "#,0",
            "lineageTag": "7fb21e9a-10a8-4270-aee9-468637d28f85"
          }
        ],
        "partitions": [
          {
            "name": "WorkInProgress-14aa3fe9-0580-4e49-9c64-6cf18e41b73b",
            "mode": "import",
            "source": {
              "expression": [
                "let",
                "    Source = \"\"",
                "in",
                "    Source"
              ],
              "type": "m"
            }
          }
        ]
      }
    ]
  }
}